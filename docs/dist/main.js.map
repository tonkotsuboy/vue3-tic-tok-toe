{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/components/GameCell.vue?9700","webpack:///./src/components/GameBoard.vue?1aaf","webpack:///./src/App.vue?4523","webpack:///./node_modules/@vue/reactivity/dist/reactivity.esm-bundler.js","webpack:///./node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js","webpack:///./node_modules/@vue/runtime-dom/dist/runtime-dom.esm-bundler.js","webpack:///./src/App.vue","webpack:///./src/components/GameBoard.vue","webpack:///./src/components/GameCell.vue","webpack:///./src/components/GameCell.vue?eff6","webpack:///./src/components/GameCell.vue?d372","webpack:///./src/components/GameBoard.vue?b720","webpack:///./src/components/GameBoard.vue?613c","webpack:///./src/App.vue?e44e","webpack:///./src/App.vue?0396","webpack:///./src/main.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","makeMap","str","expectsLowerCase","map","list","split","length","val","toLowerCase","EMPTY_OBJ","NOOP","hasOwn","isArray","Array","isFunction","isSymbol","isObject","objectToString","toString","toRawType","toTypeString","slice","hasChanged","fn","cache","cacheStringFunction","charAt","toUpperCase","oldValue","targetMap","WeakMap","effectStack","activeEffect","ITERATE_KEY","effect","options","_isEffect","isEffect","raw","args","active","includes","trackStack","push","shouldTrack","pop","resetTracking","run","deps","createReactiveEffect","lazy","stop","onStop","delete","pauseTracking","last","undefined","track","target","type","depsMap","set","Map","dep","Set","has","add","trigger","newValue","oldTarget","effects","computedRunners","forEach","addRunners","iterationKey","extraInfo","scheduler","scheduleRun","effectsToAdd","computed","LOCKED","builtInSymbols","getOwnPropertyNames","filter","createGetter","shallowReactiveGet","readonlyGet","shallowReadonlyGet","arrayInstrumentations","isReadonly","shallow","receiver","Reflect","res","isRef","readonly","reactive","arr","toRaw","this","createSetter","shallowReactiveSet","readonlySet","shallowReadonlySet","hadKey","result","deleteProperty","ownKeys","mutableHandlers","readonlyHandlers","shallowReadonlyHandlers","toReactive","toReadonly","getProto","v","getPrototypeOf","get$1","wrap","has$1","size","proto","set$1","deleteEntry","clear","hadItems","createForEach","callback","thisArg","observed","createIterableMethod","method","isPair","iterator","innerIterator","apply","done","next","createReadonlyMethod","mutableInstrumentations","readonlyInstrumentations","createInstrumentationGetter","instrumentations","mutableCollectionHandlers","readonlyCollectionHandlers","rawToReactive","reactiveToRaw","rawToReadonly","readonlyToRaw","readonlyValues","WeakSet","nonReactiveValues","collectionTypes","isObservableType","canObserve","_isVue","_isVNode","createReactiveObject","toProxy","baseHandlers","collectionHandlers","handlers","constructor","Proxy","isReactive","convert","_isRef","createRef","newVal","unref","ref","normalizeStyle","normalized","normalizeClass","isString","trim","EMPTY_ARR","NO","a","b","el","indexOf","splice","isPromise","then","catch","isReservedProp","camelizeRE","camelize","replace","_","hyphenateRE","hyphenate","callWithErrorHandling","instance","err","handleError","callWithAsyncErrorHandling","values","vnode","cur","parent","exposedInstance","proxy","errorInfo","errorCapturedHooks","ec","appErrorHandler","appContext","config","errorHandler","contextVNode","logError","queue","postFlushCbs","Promise","resolve","isFlushing","isFlushPending","nextTick","queueJob","job","queueFlush","queuePostFlushCb","cb","flushJobs","dedupe","cbs","flushPostFlushCbs","seen","shift","currentRenderingInstance","renderComponentRoot","Component","withProxy","props","slots","attrs","vnodeHooks","emit","renderCache","shapeFlag","proxyToUse","normalizeVNode","render","inheritAttrs","keys","cloneVNode","parentScopeId","__scopeId","dirs","transition","createVNode","Comment","hasPropsChanged","prevProps","nextProps","nextKeys","updateHOCHostEl","subTree","isSuspense","__isSuspense","currentScopeId","scopeIdStack","pushScopeId","id","popScopeId","withScopeId","arguments","isPortal","__isPortal","Fragment","Text","Static","blockStack","currentBlock","openBlock","disableTracking","createBlock","children","patchFlag","dynamicProps","dynamicChildren","isVNode","isSameVNodeType","n1","n2","SetupProxySymbol","class","klass","style","scopeId","component","suspense","anchor","default","String","normalizeChildren","extraProps","mergeProps","child","cloneIfMounted","handlersRE","ret","toMerge","test","existing","concat","resolveProps","rawProps","_options","hasDeclaredProps","0","1","needCastKeys","normalizationMap","normalizedKey","opt","prop","booleanIndex","getTypeIndex","Boolean","stringIndex","normalizePropsOptions","propsProxy","setProp","camelKey","isAbsent","hasDefault","currentValue","defaultValue","rawInitialProps","getType","ctor","match","isSameType","expectedTypes","len","normalizeSlotValue","normalizeSlot","rawSlot","resolveSlots","rawSlots","invokeDirectiveHook","hook","prevVNode","createAppContext","devtools","performance","isNativeTag","isCustomElement","warnHandler","mixins","components","directives","provides","createAppAPI","hydrate","rootComponent","rootProps","context","installedPlugins","isMounted","app","_component","_props","_container","_context","use","plugin","install","mixin","directive","rootContainer","isHydrate","provide","__HMR__","prodEffectOptions","invokeHooks","hooks","arg","queuePostRenderEffect","isResolved","baseCreateRenderer","createHydrationFns","insert","hostInsert","remove","hostRemove","patchProp","hostPatchProp","createElement","hostCreateElement","createText","hostCreateText","createComment","hostCreateComment","setText","hostSetText","setElementText","hostSetElementText","parentNode","hostParentNode","nextSibling","hostNextSibling","setScopeId","hostSetScopeId","cloneNode","hostCloneNode","insertStaticContent","hostInsertStaticContent","patch","container","parentComponent","parentSuspense","isSVG","optimized","getNextHostNode","unmount","processText","processCommentNode","mountStaticNode","processFragment","processElement","processComponent","process","internals","mountElement","patchElement","setRef","onVnodeBeforeMount","treeOwnerId","mountChildren","persisted","beforeEnter","vnodeMountedHook","onVnodeMounted","enter","start","oldProps","newProps","onVnodeBeforeUpdate","renderUpdated","patchProps","propsToUpdate","prev","unmountChildren","areChildrenSVG","patchBlockChildren","patchChildren","onVnodeUpdated","oldChildren","newChildren","fallbackContainer","oldVNode","newVNode","fragmentStartAnchor","fragmentEndAnchor","sink","activate","mountComponent","nextVNode","prevChildren","nextChildren","$stable","shouldUpdateComponent","asyncDep","asyncResolved","updateComponentPreRender","invalidateJob","update","initialVNode","emptyAppContext","root","setupContext","accessCache","renderContext","data","refs","asyncResult","isUnmounted","isDeactivated","bc","bm","bu","u","um","bum","da","rtg","rtc","event","handler","createComponentInstance","__hmrId","instances","registerHMR","isKeepAlive","renderer","isSSR","isInSSRComponentSetup","propsOptions","setupResult","PublicInstanceProxyHandlers","setup","SetupProxyHandlers","createSetupContext","currentInstance","currentSuspense","resolvedResult","handleSetupResult","finishComponentSetup","setupStatefulComponent","setupComponent","registerDep","setupRenderEffect","placeholder","nextTree","prevTree","hydrateNode","c1","prevShapeFlag","c2","patchKeyedChildren","patchUnkeyedChildren","oldLength","newLength","commonLength","Math","min","nextChild","parentAnchor","l2","e1","e2","nextPos","s1","s2","keyToNewIndexMap","j","patched","toBePatched","moved","maxNewIndexSoFar","newIndexToOldIndexMap","prevChild","newIndex","increasingNewIndexSequence","arrI","getSequence","nextIndex","move","leave","delayLeave","afterLeave","performLeave","doRemove","deactivate","unmountComponent","onVnodeBeforeUnmount","onVnodeUnmounted","removeFragment","performRemove","end","unregisterHMR","oldRef","oldSetupRef","setupRef","_vnode","mt","mc","pc","pbc","createApp","useTransitionState","state","isLeaving","isUnmounting","leavingVNodes","onMounted","onBeforeUnmount","BaseTransition","getCurrentInstance","emptyPlaceholder","innerChild","getKeepAliveChild","enterHooks","resolveTransitionHooks","oldChild","oldInnerChild","prevHooks","leavingHooks","setTransitionHooks","delayedLeave","earlyRemove","getLeavingNodesForType","_leaveCb","leavingVNodesCache","appear","onBeforeEnter","onEnter","onAfterEnter","onEnterCancelled","onBeforeLeave","onLeave","onAfterLeave","onLeaveCancelled","callHook","leavingVNode","called","afterEnter","_enterCb","cancelled","__isKeepAlive","RegExp","getName","comp","displayName","matches","pattern","some","registerKeepAliveHook","wrappedHook","__wdc","current","injectHook","injectToKeepAliveRoot","keepAliveRoot","onUnmounted","prepend","__weh","setCurrentInstance","unshift","createHook","lifecycle","onBeforeMount","onBeforeUpdate","onUpdated","onRenderTriggered","onRenderTracked","onErrorCaptured","invoke","INITIAL_WATCHER_VALUE","watch","effectOrSource","cbOrOptions","doWatch","source","immediate","deep","flush","onTrack","onTrigger","cleanup","registerCleanup","baseGetter","traverse","runner","applyCb","recordInstanceBoundEffect","instanceWatch","ctx","publicPropertiesMap","$","$el","$data","$props","$attrs","$slots","$refs","$parent","$root","$emit","$options","$forceUpdate","$nextTick","$watch","publicGetter","cssModule","__cssModules","parentProvides","inject","applyOptions","asMixin","extends","extendsOptions","dataOptions","computedOptions","methods","watchOptions","provideOptions","injectOptions","beforeMount","mounted","beforeUpdate","updated","activated","deactivated","beforeUnmount","unmounted","renderTracked","renderTriggered","errorCaptured","globalMixins","callSyncHook","applyMixins","methodHandler","createWatcher","from","onDeactivated","callHookFromMixins","baseHook","selfHook","getterOrOptions","setter","dirty","defineComponent","getOwnPropertyDescriptor","COMPONENTS","resolveComponent","resolveAsset","camelized","capitalized","registry","self","selfName","renderList","renderItem","toDisplayString$1","isPlainObject","JSON","stringify","camelize$1","doc","document","svgNS","tempContainer","tempSVGContainer","nodeOps","insertBefore","appendChild","removeChild","tag","createElementNS","text","createTextNode","node","nodeValue","textContent","querySelector","selector","setAttribute","content","temp","innerHTML","isSpecialBooleanAttr","importantRE","setStyle","startsWith","setProperty","prefixed","rawName","cached","prefixCache","prefixes","autoPrefix","xlinkNS","_getNow","Date","now","createEvent","timeStamp","cachedNow","getNow","addEventListener","removeEventListener","createInvoker","initialValue","invoker","e","lastUpdated","rendererOptions","nextValue","prevValue","transitionClasses","_vtc","join","className","patchClass","cssText","removeAttribute","patchStyle","prevOptions","nextOptions","capture","passive","once","patchEvent","tagName","_value","patchDOMProp","_trueValue","_falseValue","removeAttributeNS","setAttributeNS","isBoolean","patchAttr","ensureRenderer","normalizeContainer","is","cells","cell","index","owner","placeStone","STONES","LINES","GameCell","fill","turn","winner","winnerPName","line","ownersInLine","isGameEnded","GameBoard","gameMsg","nextTurn","player","gameEnd","mount","containerOrSelector"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/docs/dist/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 6);\n","export { default } from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js!../../node_modules/css-loader/dist/cjs.js!../../node_modules/vue-loader/dist/stylePostLoader.js!../../node_modules/sass-loader/dist/cjs.js??ref--4-2!../../node_modules/vue-loader/dist/index.js??ref--12-0!./GameCell.vue?vue&type=style&index=0&id=43396ff6&lang=scss&scoped=true\"; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js!../../node_modules/css-loader/dist/cjs.js!../../node_modules/vue-loader/dist/stylePostLoader.js!../../node_modules/sass-loader/dist/cjs.js??ref--4-2!../../node_modules/vue-loader/dist/index.js??ref--12-0!./GameCell.vue?vue&type=style&index=0&id=43396ff6&lang=scss&scoped=true\"","export { default } from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js!../../node_modules/css-loader/dist/cjs.js!../../node_modules/vue-loader/dist/stylePostLoader.js!../../node_modules/sass-loader/dist/cjs.js??ref--4-2!../../node_modules/vue-loader/dist/index.js??ref--12-0!./GameBoard.vue?vue&type=style&index=0&id=ff1b397a&lang=scss&scoped=true\"; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js!../../node_modules/css-loader/dist/cjs.js!../../node_modules/vue-loader/dist/stylePostLoader.js!../../node_modules/sass-loader/dist/cjs.js??ref--4-2!../../node_modules/vue-loader/dist/index.js??ref--12-0!./GameBoard.vue?vue&type=style&index=0&id=ff1b397a&lang=scss&scoped=true\"","export { default } from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js!../node_modules/css-loader/dist/cjs.js!../node_modules/vue-loader/dist/stylePostLoader.js!../node_modules/sass-loader/dist/cjs.js??ref--4-2!../node_modules/vue-loader/dist/index.js??ref--12-0!./App.vue?vue&type=style&index=0&lang=scss\"; export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js!../node_modules/css-loader/dist/cjs.js!../node_modules/vue-loader/dist/stylePostLoader.js!../node_modules/sass-loader/dist/cjs.js??ref--4-2!../node_modules/vue-loader/dist/index.js??ref--12-0!./App.vue?vue&type=style&index=0&lang=scss\"","// Make a map and return a function for checking if a key\r\n// is in that map.\r\n//\r\n// IMPORTANT: all calls of this function must be prefixed with /*#__PURE__*/\r\n// So that rollup can tree-shake them if necessary.\r\nfunction makeMap(str, expectsLowerCase) {\r\n    const map = Object.create(null);\r\n    const list = str.split(',');\r\n    for (let i = 0; i < list.length; i++) {\r\n        map[list[i]] = true;\r\n    }\r\n    return expectsLowerCase ? val => !!map[val.toLowerCase()] : val => !!map[val];\r\n}\n\nconst EMPTY_OBJ = (process.env.NODE_ENV !== 'production')\r\n    ? Object.freeze({})\r\n    : {};\r\nconst NOOP = () => { };\r\nconst extend = (a, b) => {\r\n    for (const key in b) {\r\n        a[key] = b[key];\r\n    }\r\n    return a;\r\n};\r\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\r\nconst hasOwn = (val, key) => hasOwnProperty.call(val, key);\r\nconst isArray = Array.isArray;\r\nconst isFunction = (val) => typeof val === 'function';\r\nconst isSymbol = (val) => typeof val === 'symbol';\r\nconst isObject = (val) => val !== null && typeof val === 'object';\r\nconst objectToString = Object.prototype.toString;\r\nconst toTypeString = (value) => objectToString.call(value);\r\nconst toRawType = (value) => {\r\n    return toTypeString(value).slice(8, -1);\r\n};\r\nconst cacheStringFunction = (fn) => {\r\n    const cache = Object.create(null);\r\n    return ((str) => {\r\n        const hit = cache[str];\r\n        return hit || (cache[str] = fn(str));\r\n    });\r\n};\r\nconst capitalize = cacheStringFunction((str) => {\r\n    return str.charAt(0).toUpperCase() + str.slice(1);\r\n});\r\n// compare whether a value has changed, accounting for NaN.\r\nconst hasChanged = (value, oldValue) => value !== oldValue && (value === value || oldValue === oldValue);\n\nconst targetMap = new WeakMap();\r\nconst effectStack = [];\r\nlet activeEffect;\r\nconst ITERATE_KEY = Symbol('iterate');\r\nfunction isEffect(fn) {\r\n    return fn != null && fn._isEffect === true;\r\n}\r\nfunction effect(fn, options = EMPTY_OBJ) {\r\n    if (isEffect(fn)) {\r\n        fn = fn.raw;\r\n    }\r\n    const effect = createReactiveEffect(fn, options);\r\n    if (!options.lazy) {\r\n        effect();\r\n    }\r\n    return effect;\r\n}\r\nfunction stop(effect) {\r\n    if (effect.active) {\r\n        cleanup(effect);\r\n        if (effect.options.onStop) {\r\n            effect.options.onStop();\r\n        }\r\n        effect.active = false;\r\n    }\r\n}\r\nfunction createReactiveEffect(fn, options) {\r\n    const effect = function reactiveEffect(...args) {\r\n        return run(effect, fn, args);\r\n    };\r\n    effect._isEffect = true;\r\n    effect.active = true;\r\n    effect.raw = fn;\r\n    effect.deps = [];\r\n    effect.options = options;\r\n    return effect;\r\n}\r\nfunction run(effect, fn, args) {\r\n    if (!effect.active) {\r\n        return fn(...args);\r\n    }\r\n    if (!effectStack.includes(effect)) {\r\n        cleanup(effect);\r\n        try {\r\n            enableTracking();\r\n            effectStack.push(effect);\r\n            activeEffect = effect;\r\n            return fn(...args);\r\n        }\r\n        finally {\r\n            effectStack.pop();\r\n            resetTracking();\r\n            activeEffect = effectStack[effectStack.length - 1];\r\n        }\r\n    }\r\n}\r\nfunction cleanup(effect) {\r\n    const { deps } = effect;\r\n    if (deps.length) {\r\n        for (let i = 0; i < deps.length; i++) {\r\n            deps[i].delete(effect);\r\n        }\r\n        deps.length = 0;\r\n    }\r\n}\r\nlet shouldTrack = true;\r\nconst trackStack = [];\r\nfunction pauseTracking() {\r\n    trackStack.push(shouldTrack);\r\n    shouldTrack = false;\r\n}\r\nfunction enableTracking() {\r\n    trackStack.push(shouldTrack);\r\n    shouldTrack = true;\r\n}\r\nfunction resetTracking() {\r\n    const last = trackStack.pop();\r\n    shouldTrack = last === undefined ? true : last;\r\n}\r\nfunction track(target, type, key) {\r\n    if (!shouldTrack || activeEffect === undefined) {\r\n        return;\r\n    }\r\n    let depsMap = targetMap.get(target);\r\n    if (depsMap === void 0) {\r\n        targetMap.set(target, (depsMap = new Map()));\r\n    }\r\n    let dep = depsMap.get(key);\r\n    if (dep === void 0) {\r\n        depsMap.set(key, (dep = new Set()));\r\n    }\r\n    if (!dep.has(activeEffect)) {\r\n        dep.add(activeEffect);\r\n        activeEffect.deps.push(dep);\r\n        if ((process.env.NODE_ENV !== 'production') && activeEffect.options.onTrack) {\r\n            activeEffect.options.onTrack({\r\n                effect: activeEffect,\r\n                target,\r\n                type,\r\n                key\r\n            });\r\n        }\r\n    }\r\n}\r\nfunction trigger(target, type, key, newValue, oldValue, oldTarget) {\r\n    const depsMap = targetMap.get(target);\r\n    if (depsMap === void 0) {\r\n        // never been tracked\r\n        return;\r\n    }\r\n    const effects = new Set();\r\n    const computedRunners = new Set();\r\n    if (type === \"clear\" /* CLEAR */) {\r\n        // collection being cleared\r\n        // trigger all effects for target\r\n        depsMap.forEach(dep => {\r\n            addRunners(effects, computedRunners, dep);\r\n        });\r\n    }\r\n    else if (key === 'length' && isArray(target)) {\r\n        depsMap.forEach((dep, key) => {\r\n            if (key === 'length' || key >= newValue) {\r\n                addRunners(effects, computedRunners, dep);\r\n            }\r\n        });\r\n    }\r\n    else {\r\n        // schedule runs for SET | ADD | DELETE\r\n        if (key !== void 0) {\r\n            addRunners(effects, computedRunners, depsMap.get(key));\r\n        }\r\n        // also run for iteration key on ADD | DELETE | Map.SET\r\n        if (type === \"add\" /* ADD */ ||\r\n            type === \"delete\" /* DELETE */ ||\r\n            (type === \"set\" /* SET */ && target instanceof Map)) {\r\n            const iterationKey = isArray(target) ? 'length' : ITERATE_KEY;\r\n            addRunners(effects, computedRunners, depsMap.get(iterationKey));\r\n        }\r\n    }\r\n    const run = (effect) => {\r\n        scheduleRun(effect, target, type, key, (process.env.NODE_ENV !== 'production')\r\n            ? {\r\n                newValue,\r\n                oldValue,\r\n                oldTarget\r\n            }\r\n            : undefined);\r\n    };\r\n    // Important: computed effects must be run first so that computed getters\r\n    // can be invalidated before any normal effects that depend on them are run.\r\n    computedRunners.forEach(run);\r\n    effects.forEach(run);\r\n}\r\nfunction addRunners(effects, computedRunners, effectsToAdd) {\r\n    if (effectsToAdd !== void 0) {\r\n        effectsToAdd.forEach(effect => {\r\n            if (effect !== activeEffect) {\r\n                if (effect.options.computed) {\r\n                    computedRunners.add(effect);\r\n                }\r\n                else {\r\n                    effects.add(effect);\r\n                }\r\n            }\r\n        });\r\n    }\r\n}\r\nfunction scheduleRun(effect, target, type, key, extraInfo) {\r\n    if ((process.env.NODE_ENV !== 'production') && effect.options.onTrigger) {\r\n        const event = {\r\n            effect,\r\n            target,\r\n            key,\r\n            type\r\n        };\r\n        effect.options.onTrigger(extraInfo ? extend(event, extraInfo) : event);\r\n    }\r\n    if (effect.options.scheduler !== void 0) {\r\n        effect.options.scheduler(effect);\r\n    }\r\n    else {\r\n        effect();\r\n    }\r\n}\n\n// global immutability lock\r\nlet LOCKED = true;\r\nfunction lock() {\r\n    LOCKED = true;\r\n}\r\nfunction unlock() {\r\n    LOCKED = false;\r\n}\n\nconst builtInSymbols = new Set(Object.getOwnPropertyNames(Symbol)\r\n    .map(key => Symbol[key])\r\n    .filter(isSymbol));\r\nconst get = /*#__PURE__*/ createGetter();\r\nconst shallowReactiveGet = /*#__PURE__*/ createGetter(false, true);\r\nconst readonlyGet = /*#__PURE__*/ createGetter(true);\r\nconst shallowReadonlyGet = /*#__PURE__*/ createGetter(true, true);\r\nconst arrayInstrumentations = {};\r\n['includes', 'indexOf', 'lastIndexOf'].forEach(key => {\r\n    arrayInstrumentations[key] = function (...args) {\r\n        const arr = toRaw(this);\r\n        for (let i = 0, l = this.length; i < l; i++) {\r\n            track(arr, \"get\" /* GET */, i + '');\r\n        }\r\n        return arr[key](...args.map(toRaw));\r\n    };\r\n});\r\nfunction createGetter(isReadonly = false, shallow = false) {\r\n    return function get(target, key, receiver) {\r\n        if (isArray(target) && hasOwn(arrayInstrumentations, key)) {\r\n            return Reflect.get(arrayInstrumentations, key, receiver);\r\n        }\r\n        const res = Reflect.get(target, key, receiver);\r\n        if (isSymbol(key) && builtInSymbols.has(key)) {\r\n            return res;\r\n        }\r\n        if (shallow) {\r\n            track(target, \"get\" /* GET */, key);\r\n            // TODO strict mode that returns a shallow-readonly version of the value\r\n            return res;\r\n        }\r\n        // ref unwrapping, only for Objects, not for Arrays.\r\n        if (isRef(res) && !isArray(target)) {\r\n            return res.value;\r\n        }\r\n        track(target, \"get\" /* GET */, key);\r\n        return isObject(res)\r\n            ? isReadonly\r\n                ? // need to lazy access readonly and reactive here to avoid\r\n                    // circular dependency\r\n                    readonly(res)\r\n                : reactive(res)\r\n            : res;\r\n    };\r\n}\r\nconst set = /*#__PURE__*/ createSetter();\r\nconst shallowReactiveSet = /*#__PURE__*/ createSetter(false, true);\r\nconst readonlySet = /*#__PURE__*/ createSetter(true);\r\nconst shallowReadonlySet = /*#__PURE__*/ createSetter(true, true);\r\nfunction createSetter(isReadonly = false, shallow = false) {\r\n    return function set(target, key, value, receiver) {\r\n        if (isReadonly && LOCKED) {\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                console.warn(`Set operation on key \"${String(key)}\" failed: target is readonly.`, target);\r\n            }\r\n            return true;\r\n        }\r\n        const oldValue = target[key];\r\n        if (!shallow) {\r\n            value = toRaw(value);\r\n            if (!isArray(target) && isRef(oldValue) && !isRef(value)) {\r\n                oldValue.value = value;\r\n                return true;\r\n            }\r\n        }\r\n        const hadKey = hasOwn(target, key);\r\n        const result = Reflect.set(target, key, value, receiver);\r\n        // don't trigger if target is something up in the prototype chain of original\r\n        if (target === toRaw(receiver)) {\r\n            if (!hadKey) {\r\n                trigger(target, \"add\" /* ADD */, key, value);\r\n            }\r\n            else if (hasChanged(value, oldValue)) {\r\n                trigger(target, \"set\" /* SET */, key, value, oldValue);\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n}\r\nfunction deleteProperty(target, key) {\r\n    const hadKey = hasOwn(target, key);\r\n    const oldValue = target[key];\r\n    const result = Reflect.deleteProperty(target, key);\r\n    if (result && hadKey) {\r\n        trigger(target, \"delete\" /* DELETE */, key, undefined, oldValue);\r\n    }\r\n    return result;\r\n}\r\nfunction has(target, key) {\r\n    const result = Reflect.has(target, key);\r\n    track(target, \"has\" /* HAS */, key);\r\n    return result;\r\n}\r\nfunction ownKeys(target) {\r\n    track(target, \"iterate\" /* ITERATE */, ITERATE_KEY);\r\n    return Reflect.ownKeys(target);\r\n}\r\nconst mutableHandlers = {\r\n    get,\r\n    set,\r\n    deleteProperty,\r\n    has,\r\n    ownKeys\r\n};\r\nconst readonlyHandlers = {\r\n    get: readonlyGet,\r\n    set: readonlySet,\r\n    has,\r\n    ownKeys,\r\n    deleteProperty(target, key) {\r\n        if (LOCKED) {\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                console.warn(`Delete operation on key \"${String(key)}\" failed: target is readonly.`, target);\r\n            }\r\n            return true;\r\n        }\r\n        else {\r\n            return deleteProperty(target, key);\r\n        }\r\n    }\r\n};\r\nconst shallowReactiveHandlers = {\r\n    ...mutableHandlers,\r\n    get: shallowReactiveGet,\r\n    set: shallowReactiveSet\r\n};\r\n// Props handlers are special in the sense that it should not unwrap top-level\r\n// refs (in order to allow refs to be explicitly passed down), but should\r\n// retain the reactivity of the normal readonly object.\r\nconst shallowReadonlyHandlers = {\r\n    ...readonlyHandlers,\r\n    get: shallowReadonlyGet,\r\n    set: shallowReadonlySet\r\n};\n\nconst toReactive = (value) => isObject(value) ? reactive(value) : value;\r\nconst toReadonly = (value) => isObject(value) ? readonly(value) : value;\r\nconst getProto = (v) => Reflect.getPrototypeOf(v);\r\nfunction get$1(target, key, wrap) {\r\n    target = toRaw(target);\r\n    key = toRaw(key);\r\n    track(target, \"get\" /* GET */, key);\r\n    return wrap(getProto(target).get.call(target, key));\r\n}\r\nfunction has$1(key) {\r\n    const target = toRaw(this);\r\n    key = toRaw(key);\r\n    track(target, \"has\" /* HAS */, key);\r\n    return getProto(target).has.call(target, key);\r\n}\r\nfunction size(target) {\r\n    target = toRaw(target);\r\n    track(target, \"iterate\" /* ITERATE */, ITERATE_KEY);\r\n    return Reflect.get(getProto(target), 'size', target);\r\n}\r\nfunction add(value) {\r\n    value = toRaw(value);\r\n    const target = toRaw(this);\r\n    const proto = getProto(target);\r\n    const hadKey = proto.has.call(target, value);\r\n    const result = proto.add.call(target, value);\r\n    if (!hadKey) {\r\n        trigger(target, \"add\" /* ADD */, value, value);\r\n    }\r\n    return result;\r\n}\r\nfunction set$1(key, value) {\r\n    value = toRaw(value);\r\n    key = toRaw(key);\r\n    const target = toRaw(this);\r\n    const proto = getProto(target);\r\n    const hadKey = proto.has.call(target, key);\r\n    const oldValue = proto.get.call(target, key);\r\n    const result = proto.set.call(target, key, value);\r\n    if (!hadKey) {\r\n        trigger(target, \"add\" /* ADD */, key, value);\r\n    }\r\n    else if (hasChanged(value, oldValue)) {\r\n        trigger(target, \"set\" /* SET */, key, value, oldValue);\r\n    }\r\n    return result;\r\n}\r\nfunction deleteEntry(key) {\r\n    key = toRaw(key);\r\n    const target = toRaw(this);\r\n    const proto = getProto(target);\r\n    const hadKey = proto.has.call(target, key);\r\n    const oldValue = proto.get ? proto.get.call(target, key) : undefined;\r\n    // forward the operation before queueing reactions\r\n    const result = proto.delete.call(target, key);\r\n    if (hadKey) {\r\n        trigger(target, \"delete\" /* DELETE */, key, undefined, oldValue);\r\n    }\r\n    return result;\r\n}\r\nfunction clear() {\r\n    const target = toRaw(this);\r\n    const hadItems = target.size !== 0;\r\n    const oldTarget = (process.env.NODE_ENV !== 'production')\r\n        ? target instanceof Map\r\n            ? new Map(target)\r\n            : new Set(target)\r\n        : undefined;\r\n    // forward the operation before queueing reactions\r\n    const result = getProto(target).clear.call(target);\r\n    if (hadItems) {\r\n        trigger(target, \"clear\" /* CLEAR */, undefined, undefined, oldTarget);\r\n    }\r\n    return result;\r\n}\r\nfunction createForEach(isReadonly) {\r\n    return function forEach(callback, thisArg) {\r\n        const observed = this;\r\n        const target = toRaw(observed);\r\n        const wrap = isReadonly ? toReadonly : toReactive;\r\n        track(target, \"iterate\" /* ITERATE */, ITERATE_KEY);\r\n        // important: create sure the callback is\r\n        // 1. invoked with the reactive map as `this` and 3rd arg\r\n        // 2. the value received should be a corresponding reactive/readonly.\r\n        function wrappedCallback(value, key) {\r\n            return callback.call(observed, wrap(value), wrap(key), observed);\r\n        }\r\n        return getProto(target).forEach.call(target, wrappedCallback, thisArg);\r\n    };\r\n}\r\nfunction createIterableMethod(method, isReadonly) {\r\n    return function (...args) {\r\n        const target = toRaw(this);\r\n        const isPair = method === 'entries' ||\r\n            (method === Symbol.iterator && target instanceof Map);\r\n        const innerIterator = getProto(target)[method].apply(target, args);\r\n        const wrap = isReadonly ? toReadonly : toReactive;\r\n        track(target, \"iterate\" /* ITERATE */, ITERATE_KEY);\r\n        // return a wrapped iterator which returns observed versions of the\r\n        // values emitted from the real iterator\r\n        return {\r\n            // iterator protocol\r\n            next() {\r\n                const { value, done } = innerIterator.next();\r\n                return done\r\n                    ? { value, done }\r\n                    : {\r\n                        value: isPair ? [wrap(value[0]), wrap(value[1])] : wrap(value),\r\n                        done\r\n                    };\r\n            },\r\n            // iterable protocol\r\n            [Symbol.iterator]() {\r\n                return this;\r\n            }\r\n        };\r\n    };\r\n}\r\nfunction createReadonlyMethod(method, type) {\r\n    return function (...args) {\r\n        if (LOCKED) {\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                const key = args[0] ? `on key \"${args[0]}\" ` : ``;\r\n                console.warn(`${capitalize(type)} operation ${key}failed: target is readonly.`, toRaw(this));\r\n            }\r\n            return type === \"delete\" /* DELETE */ ? false : this;\r\n        }\r\n        else {\r\n            return method.apply(this, args);\r\n        }\r\n    };\r\n}\r\nconst mutableInstrumentations = {\r\n    get(key) {\r\n        return get$1(this, key, toReactive);\r\n    },\r\n    get size() {\r\n        return size(this);\r\n    },\r\n    has: has$1,\r\n    add,\r\n    set: set$1,\r\n    delete: deleteEntry,\r\n    clear,\r\n    forEach: createForEach(false)\r\n};\r\nconst readonlyInstrumentations = {\r\n    get(key) {\r\n        return get$1(this, key, toReadonly);\r\n    },\r\n    get size() {\r\n        return size(this);\r\n    },\r\n    has: has$1,\r\n    add: createReadonlyMethod(add, \"add\" /* ADD */),\r\n    set: createReadonlyMethod(set$1, \"set\" /* SET */),\r\n    delete: createReadonlyMethod(deleteEntry, \"delete\" /* DELETE */),\r\n    clear: createReadonlyMethod(clear, \"clear\" /* CLEAR */),\r\n    forEach: createForEach(true)\r\n};\r\nconst iteratorMethods = ['keys', 'values', 'entries', Symbol.iterator];\r\niteratorMethods.forEach(method => {\r\n    mutableInstrumentations[method] = createIterableMethod(method, false);\r\n    readonlyInstrumentations[method] = createIterableMethod(method, true);\r\n});\r\nfunction createInstrumentationGetter(instrumentations) {\r\n    return (target, key, receiver) => Reflect.get(hasOwn(instrumentations, key) && key in target\r\n        ? instrumentations\r\n        : target, key, receiver);\r\n}\r\nconst mutableCollectionHandlers = {\r\n    get: createInstrumentationGetter(mutableInstrumentations)\r\n};\r\nconst readonlyCollectionHandlers = {\r\n    get: createInstrumentationGetter(readonlyInstrumentations)\r\n};\n\n// WeakMaps that store {raw <-> observed} pairs.\r\nconst rawToReactive = new WeakMap();\r\nconst reactiveToRaw = new WeakMap();\r\nconst rawToReadonly = new WeakMap();\r\nconst readonlyToRaw = new WeakMap();\r\n// WeakSets for values that are marked readonly or non-reactive during\r\n// observable creation.\r\nconst readonlyValues = new WeakSet();\r\nconst nonReactiveValues = new WeakSet();\r\nconst collectionTypes = new Set([Set, Map, WeakMap, WeakSet]);\r\nconst isObservableType = /*#__PURE__*/ makeMap('Object,Array,Map,Set,WeakMap,WeakSet');\r\nconst canObserve = (value) => {\r\n    return (!value._isVue &&\r\n        !value._isVNode &&\r\n        isObservableType(toRawType(value)) &&\r\n        !nonReactiveValues.has(value));\r\n};\r\nfunction reactive(target) {\r\n    // if trying to observe a readonly proxy, return the readonly version.\r\n    if (readonlyToRaw.has(target)) {\r\n        return target;\r\n    }\r\n    // target is explicitly marked as readonly by user\r\n    if (readonlyValues.has(target)) {\r\n        return readonly(target);\r\n    }\r\n    if (isRef(target)) {\r\n        return target;\r\n    }\r\n    return createReactiveObject(target, rawToReactive, reactiveToRaw, mutableHandlers, mutableCollectionHandlers);\r\n}\r\nfunction readonly(target) {\r\n    // value is a mutable observable, retrieve its original and return\r\n    // a readonly version.\r\n    if (reactiveToRaw.has(target)) {\r\n        target = reactiveToRaw.get(target);\r\n    }\r\n    return createReactiveObject(target, rawToReadonly, readonlyToRaw, readonlyHandlers, readonlyCollectionHandlers);\r\n}\r\n// Return a reactive-copy of the original object, where only the root level\r\n// properties are readonly, and does NOT unwrap refs nor recursively convert\r\n// returned properties.\r\n// This is used for creating the props proxy object for stateful components.\r\nfunction shallowReadonly(target) {\r\n    return createReactiveObject(target, rawToReadonly, readonlyToRaw, shallowReadonlyHandlers, readonlyCollectionHandlers);\r\n}\r\n// Return a reactive-copy of the original object, where only the root level\r\n// properties are reactive, and does NOT unwrap refs nor recursively convert\r\n// returned properties.\r\nfunction shallowReactive(target) {\r\n    return createReactiveObject(target, rawToReactive, reactiveToRaw, shallowReactiveHandlers, mutableCollectionHandlers);\r\n}\r\nfunction createReactiveObject(target, toProxy, toRaw, baseHandlers, collectionHandlers) {\r\n    if (!isObject(target)) {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            console.warn(`value cannot be made reactive: ${String(target)}`);\r\n        }\r\n        return target;\r\n    }\r\n    // target already has corresponding Proxy\r\n    let observed = toProxy.get(target);\r\n    if (observed !== void 0) {\r\n        return observed;\r\n    }\r\n    // target is already a Proxy\r\n    if (toRaw.has(target)) {\r\n        return target;\r\n    }\r\n    // only a whitelist of value types can be observed.\r\n    if (!canObserve(target)) {\r\n        return target;\r\n    }\r\n    const handlers = collectionTypes.has(target.constructor)\r\n        ? collectionHandlers\r\n        : baseHandlers;\r\n    observed = new Proxy(target, handlers);\r\n    toProxy.set(target, observed);\r\n    toRaw.set(observed, target);\r\n    return observed;\r\n}\r\nfunction isReactive(value) {\r\n    return reactiveToRaw.has(value) || readonlyToRaw.has(value);\r\n}\r\nfunction isReadonly(value) {\r\n    return readonlyToRaw.has(value);\r\n}\r\nfunction toRaw(observed) {\r\n    return reactiveToRaw.get(observed) || readonlyToRaw.get(observed) || observed;\r\n}\r\nfunction markReadonly(value) {\r\n    readonlyValues.add(value);\r\n    return value;\r\n}\r\nfunction markNonReactive(value) {\r\n    nonReactiveValues.add(value);\r\n    return value;\r\n}\n\nconst convert = (val) => isObject(val) ? reactive(val) : val;\r\nfunction isRef(r) {\r\n    return r ? r._isRef === true : false;\r\n}\r\nfunction ref(value) {\r\n    return createRef(value);\r\n}\r\nfunction shallowRef(value) {\r\n    return createRef(value, true);\r\n}\r\nfunction createRef(value, shallow = false) {\r\n    if (isRef(value)) {\r\n        return value;\r\n    }\r\n    if (!shallow) {\r\n        value = convert(value);\r\n    }\r\n    const r = {\r\n        _isRef: true,\r\n        get value() {\r\n            track(r, \"get\" /* GET */, 'value');\r\n            return value;\r\n        },\r\n        set value(newVal) {\r\n            value = shallow ? newVal : convert(newVal);\r\n            trigger(r, \"set\" /* SET */, 'value', (process.env.NODE_ENV !== 'production') ? { newValue: newVal } : void 0);\r\n        }\r\n    };\r\n    return r;\r\n}\r\nfunction unref(ref) {\r\n    return isRef(ref) ? ref.value : ref;\r\n}\r\nfunction toRefs(object) {\r\n    if ((process.env.NODE_ENV !== 'production') && !isReactive(object)) {\r\n        console.warn(`toRefs() expects a reactive object but received a plain one.`);\r\n    }\r\n    const ret = {};\r\n    for (const key in object) {\r\n        ret[key] = toProxyRef(object, key);\r\n    }\r\n    return ret;\r\n}\r\nfunction toProxyRef(object, key) {\r\n    return {\r\n        _isRef: true,\r\n        get value() {\r\n            return object[key];\r\n        },\r\n        set value(newVal) {\r\n            object[key] = newVal;\r\n        }\r\n    };\r\n}\n\nfunction computed(getterOrOptions) {\r\n    let getter;\r\n    let setter;\r\n    if (isFunction(getterOrOptions)) {\r\n        getter = getterOrOptions;\r\n        setter = (process.env.NODE_ENV !== 'production')\r\n            ? () => {\r\n                console.warn('Write operation failed: computed value is readonly');\r\n            }\r\n            : NOOP;\r\n    }\r\n    else {\r\n        getter = getterOrOptions.get;\r\n        setter = getterOrOptions.set;\r\n    }\r\n    let dirty = true;\r\n    let value;\r\n    let computed;\r\n    const runner = effect(getter, {\r\n        lazy: true,\r\n        // mark effect as computed so that it gets priority during trigger\r\n        computed: true,\r\n        scheduler: () => {\r\n            if (!dirty) {\r\n                dirty = true;\r\n                trigger(computed, \"set\" /* SET */, 'value');\r\n            }\r\n        }\r\n    });\r\n    computed = {\r\n        _isRef: true,\r\n        // expose effect so computed can be stopped\r\n        effect: runner,\r\n        get value() {\r\n            if (dirty) {\r\n                value = runner();\r\n                dirty = false;\r\n            }\r\n            track(computed, \"get\" /* GET */, 'value');\r\n            return value;\r\n        },\r\n        set value(newValue) {\r\n            setter(newValue);\r\n        }\r\n    };\r\n    return computed;\r\n}\n\nexport { ITERATE_KEY, computed, effect, enableTracking, isReactive, isReadonly, isRef, lock, markNonReactive, markReadonly, pauseTracking, reactive, readonly, ref, resetTracking, shallowReactive, shallowReadonly, shallowRef, stop, toRaw, toRefs, track, trigger, unlock, unref };\n","import { pauseTracking, resetTracking, isRef, toRaw, isReactive, unlock, lock, effect, stop, unref, reactive, shallowReadonly, computed as computed$1 } from '@vue/reactivity';\nexport { isReactive, isReadonly, isRef, markNonReactive, markReadonly, reactive, readonly, ref, shallowReactive, shallowRef, toRaw, toRefs, unref } from '@vue/reactivity';\n\n// Make a map and return a function for checking if a key\r\n// is in that map.\r\n//\r\n// IMPORTANT: all calls of this function must be prefixed with /*#__PURE__*/\r\n// So that rollup can tree-shake them if necessary.\r\nfunction makeMap(str, expectsLowerCase) {\r\n    const map = Object.create(null);\r\n    const list = str.split(',');\r\n    for (let i = 0; i < list.length; i++) {\r\n        map[list[i]] = true;\r\n    }\r\n    return expectsLowerCase ? val => !!map[val.toLowerCase()] : val => !!map[val];\r\n}\n\nfunction normalizeStyle(value) {\r\n    if (isArray(value)) {\r\n        const res = {};\r\n        for (let i = 0; i < value.length; i++) {\r\n            const normalized = normalizeStyle(value[i]);\r\n            if (normalized) {\r\n                for (const key in normalized) {\r\n                    res[key] = normalized[key];\r\n                }\r\n            }\r\n        }\r\n        return res;\r\n    }\r\n    else if (isObject(value)) {\r\n        return value;\r\n    }\r\n}\r\nfunction normalizeClass(value) {\r\n    let res = '';\r\n    if (isString(value)) {\r\n        res = value;\r\n    }\r\n    else if (isArray(value)) {\r\n        for (let i = 0; i < value.length; i++) {\r\n            res += normalizeClass(value[i]) + ' ';\r\n        }\r\n    }\r\n    else if (isObject(value)) {\r\n        for (const name in value) {\r\n            if (value[name]) {\r\n                res += name + ' ';\r\n            }\r\n        }\r\n    }\r\n    return res.trim();\r\n}\n\nconst EMPTY_OBJ = (process.env.NODE_ENV !== 'production')\r\n    ? Object.freeze({})\r\n    : {};\r\nconst EMPTY_ARR = [];\r\nconst NOOP = () => { };\r\n/**\r\n * Always return false.\r\n */\r\nconst NO = () => false;\r\nconst isOn = (key) => key[0] === 'o' && key[1] === 'n';\r\nconst extend = (a, b) => {\r\n    for (const key in b) {\r\n        a[key] = b[key];\r\n    }\r\n    return a;\r\n};\r\nconst remove = (arr, el) => {\r\n    const i = arr.indexOf(el);\r\n    if (i > -1) {\r\n        arr.splice(i, 1);\r\n    }\r\n};\r\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\r\nconst hasOwn = (val, key) => hasOwnProperty.call(val, key);\r\nconst isArray = Array.isArray;\r\nconst isFunction = (val) => typeof val === 'function';\r\nconst isString = (val) => typeof val === 'string';\r\nconst isObject = (val) => val !== null && typeof val === 'object';\r\nconst isPromise = (val) => {\r\n    return isObject(val) && isFunction(val.then) && isFunction(val.catch);\r\n};\r\nconst objectToString = Object.prototype.toString;\r\nconst toTypeString = (value) => objectToString.call(value);\r\nconst toRawType = (value) => {\r\n    return toTypeString(value).slice(8, -1);\r\n};\r\nconst isPlainObject = (val) => toTypeString(val) === '[object Object]';\r\nconst isReservedProp = /*#__PURE__*/ makeMap('key,ref,' +\r\n    'onVnodeBeforeMount,onVnodeMounted,' +\r\n    'onVnodeBeforeUpdate,onVnodeUpdated,' +\r\n    'onVnodeBeforeUnmount,onVnodeUnmounted');\r\nconst cacheStringFunction = (fn) => {\r\n    const cache = Object.create(null);\r\n    return ((str) => {\r\n        const hit = cache[str];\r\n        return hit || (cache[str] = fn(str));\r\n    });\r\n};\r\nconst camelizeRE = /-(\\w)/g;\r\nconst camelize = cacheStringFunction((str) => {\r\n    return str.replace(camelizeRE, (_, c) => (c ? c.toUpperCase() : ''));\r\n});\r\nconst hyphenateRE = /\\B([A-Z])/g;\r\nconst hyphenate = cacheStringFunction((str) => {\r\n    return str.replace(hyphenateRE, '-$1').toLowerCase();\r\n});\r\nconst capitalize = cacheStringFunction((str) => {\r\n    return str.charAt(0).toUpperCase() + str.slice(1);\r\n});\r\n// compare whether a value has changed, accounting for NaN.\r\nconst hasChanged = (value, oldValue) => value !== oldValue && (value === value || oldValue === oldValue);\r\n// for converting {{ interpolation }} values to displayed strings.\r\nconst toDisplayString = (val) => {\r\n    return val == null\r\n        ? ''\r\n        : isArray(val) || (isPlainObject(val) && val.toString === objectToString)\r\n            ? JSON.stringify(val, null, 2)\r\n            : String(val);\r\n};\n\nconst stack = [];\r\nfunction pushWarningContext(vnode) {\r\n    stack.push(vnode);\r\n}\r\nfunction popWarningContext() {\r\n    stack.pop();\r\n}\r\nfunction warn(msg, ...args) {\r\n    // avoid props formatting or warn handler tracking deps that might be mutated\r\n    // during patch, leading to infinite recursion.\r\n    pauseTracking();\r\n    const instance = stack.length ? stack[stack.length - 1].component : null;\r\n    const appWarnHandler = instance && instance.appContext.config.warnHandler;\r\n    const trace = getComponentTrace();\r\n    if (appWarnHandler) {\r\n        callWithErrorHandling(appWarnHandler, instance, 10 /* APP_WARN_HANDLER */, [\r\n            msg + args.join(''),\r\n            instance && instance.proxy,\r\n            trace\r\n                .map(({ vnode }) => `at <${formatComponentName(vnode)}>`)\r\n                .join('\\n'),\r\n            trace\r\n        ]);\r\n    }\r\n    else {\r\n        const warnArgs = [`[Vue warn]: ${msg}`, ...args];\r\n        if (trace.length &&\r\n            // avoid spamming console during tests\r\n            !(process.env.NODE_ENV === 'test')) {\r\n            warnArgs.push(`\\n`, ...formatTrace(trace));\r\n        }\r\n        console.warn(...warnArgs);\r\n    }\r\n    resetTracking();\r\n}\r\nfunction getComponentTrace() {\r\n    let currentVNode = stack[stack.length - 1];\r\n    if (!currentVNode) {\r\n        return [];\r\n    }\r\n    // we can't just use the stack because it will be incomplete during updates\r\n    // that did not start from the root. Re-construct the parent chain using\r\n    // instance parent pointers.\r\n    const normalizedStack = [];\r\n    while (currentVNode) {\r\n        const last = normalizedStack[0];\r\n        if (last && last.vnode === currentVNode) {\r\n            last.recurseCount++;\r\n        }\r\n        else {\r\n            normalizedStack.push({\r\n                vnode: currentVNode,\r\n                recurseCount: 0\r\n            });\r\n        }\r\n        const parentInstance = currentVNode.component\r\n            .parent;\r\n        currentVNode = parentInstance && parentInstance.vnode;\r\n    }\r\n    return normalizedStack;\r\n}\r\nfunction formatTrace(trace) {\r\n    const logs = [];\r\n    trace.forEach((entry, i) => {\r\n        logs.push(...(i === 0 ? [] : [`\\n`]), ...formatTraceEntry(entry));\r\n    });\r\n    return logs;\r\n}\r\nfunction formatTraceEntry({ vnode, recurseCount }) {\r\n    const postfix = recurseCount > 0 ? `... (${recurseCount} recursive calls)` : ``;\r\n    const open = ` at <${formatComponentName(vnode)}`;\r\n    const close = `>` + postfix;\r\n    const rootLabel = vnode.component.parent == null ? `(Root)` : ``;\r\n    return vnode.props\r\n        ? [open, ...formatProps(vnode.props), close, rootLabel]\r\n        : [open + close, rootLabel];\r\n}\r\nconst classifyRE = /(?:^|[-_])(\\w)/g;\r\nconst classify = (str) => str.replace(classifyRE, c => c.toUpperCase()).replace(/[-_]/g, '');\r\nfunction formatComponentName(vnode, file) {\r\n    const Component = vnode.type;\r\n    let name = isFunction(Component)\r\n        ? Component.displayName || Component.name\r\n        : Component.name;\r\n    if (!name && file) {\r\n        const match = file.match(/([^/\\\\]+)\\.vue$/);\r\n        if (match) {\r\n            name = match[1];\r\n        }\r\n    }\r\n    return name ? classify(name) : 'Anonymous';\r\n}\r\nfunction formatProps(props) {\r\n    const res = [];\r\n    const keys = Object.keys(props);\r\n    keys.slice(0, 3).forEach(key => {\r\n        res.push(...formatProp(key, props[key]));\r\n    });\r\n    if (keys.length > 3) {\r\n        res.push(` ...`);\r\n    }\r\n    return res;\r\n}\r\nfunction formatProp(key, value, raw) {\r\n    if (isString(value)) {\r\n        value = JSON.stringify(value);\r\n        return raw ? value : [`${key}=${value}`];\r\n    }\r\n    else if (typeof value === 'number' ||\r\n        typeof value === 'boolean' ||\r\n        value == null) {\r\n        return raw ? value : [`${key}=${value}`];\r\n    }\r\n    else if (isRef(value)) {\r\n        value = formatProp(key, toRaw(value.value), true);\r\n        return raw ? value : [`${key}=Ref<`, value, `>`];\r\n    }\r\n    else if (isFunction(value)) {\r\n        return [`${key}=fn${value.name ? `<${value.name}>` : ``}`];\r\n    }\r\n    else {\r\n        value = toRaw(value);\r\n        return raw ? value : [`${key}=`, value];\r\n    }\r\n}\n\nconst ErrorTypeStrings = {\r\n    [\"bc\" /* BEFORE_CREATE */]: 'beforeCreate hook',\r\n    [\"c\" /* CREATED */]: 'created hook',\r\n    [\"bm\" /* BEFORE_MOUNT */]: 'beforeMount hook',\r\n    [\"m\" /* MOUNTED */]: 'mounted hook',\r\n    [\"bu\" /* BEFORE_UPDATE */]: 'beforeUpdate hook',\r\n    [\"u\" /* UPDATED */]: 'updated',\r\n    [\"bum\" /* BEFORE_UNMOUNT */]: 'beforeUnmount hook',\r\n    [\"um\" /* UNMOUNTED */]: 'unmounted hook',\r\n    [\"a\" /* ACTIVATED */]: 'activated hook',\r\n    [\"da\" /* DEACTIVATED */]: 'deactivated hook',\r\n    [\"ec\" /* ERROR_CAPTURED */]: 'errorCaptured hook',\r\n    [\"rtc\" /* RENDER_TRACKED */]: 'renderTracked hook',\r\n    [\"rtg\" /* RENDER_TRIGGERED */]: 'renderTriggered hook',\r\n    [0 /* SETUP_FUNCTION */]: 'setup function',\r\n    [1 /* RENDER_FUNCTION */]: 'render function',\r\n    [2 /* WATCH_GETTER */]: 'watcher getter',\r\n    [3 /* WATCH_CALLBACK */]: 'watcher callback',\r\n    [4 /* WATCH_CLEANUP */]: 'watcher cleanup function',\r\n    [5 /* NATIVE_EVENT_HANDLER */]: 'native event handler',\r\n    [6 /* COMPONENT_EVENT_HANDLER */]: 'component event handler',\r\n    [7 /* DIRECTIVE_HOOK */]: 'directive hook',\r\n    [8 /* TRANSITION_HOOK */]: 'transition hook',\r\n    [9 /* APP_ERROR_HANDLER */]: 'app errorHandler',\r\n    [10 /* APP_WARN_HANDLER */]: 'app warnHandler',\r\n    [11 /* FUNCTION_REF */]: 'ref function',\r\n    [12 /* SCHEDULER */]: 'scheduler flush. This is likely a Vue internals bug. ' +\r\n        'Please open an issue at https://new-issue.vuejs.org/?repo=vuejs/vue-next'\r\n};\r\nfunction callWithErrorHandling(fn, instance, type, args) {\r\n    let res;\r\n    try {\r\n        res = args ? fn(...args) : fn();\r\n    }\r\n    catch (err) {\r\n        handleError(err, instance, type);\r\n    }\r\n    return res;\r\n}\r\nfunction callWithAsyncErrorHandling(fn, instance, type, args) {\r\n    if (isFunction(fn)) {\r\n        const res = callWithErrorHandling(fn, instance, type, args);\r\n        if (res != null && !res._isVue && isPromise(res)) {\r\n            res.catch((err) => {\r\n                handleError(err, instance, type);\r\n            });\r\n        }\r\n        return res;\r\n    }\r\n    const values = [];\r\n    for (let i = 0; i < fn.length; i++) {\r\n        values.push(callWithAsyncErrorHandling(fn[i], instance, type, args));\r\n    }\r\n    return values;\r\n}\r\nfunction handleError(err, instance, type) {\r\n    const contextVNode = instance ? instance.vnode : null;\r\n    if (instance) {\r\n        let cur = instance.parent;\r\n        // the exposed instance is the render proxy to keep it consistent with 2.x\r\n        const exposedInstance = instance.proxy;\r\n        // in production the hook receives only the error code\r\n        const errorInfo = (process.env.NODE_ENV !== 'production') ? ErrorTypeStrings[type] : type;\r\n        while (cur) {\r\n            const errorCapturedHooks = cur.ec;\r\n            if (errorCapturedHooks !== null) {\r\n                for (let i = 0; i < errorCapturedHooks.length; i++) {\r\n                    if (errorCapturedHooks[i](err, exposedInstance, errorInfo)) {\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n            cur = cur.parent;\r\n        }\r\n        // app-level handling\r\n        const appErrorHandler = instance.appContext.config.errorHandler;\r\n        if (appErrorHandler) {\r\n            callWithErrorHandling(appErrorHandler, null, 9 /* APP_ERROR_HANDLER */, [err, exposedInstance, errorInfo]);\r\n            return;\r\n        }\r\n    }\r\n    logError(err, type, contextVNode);\r\n}\r\nfunction logError(err, type, contextVNode) {\r\n    // default behavior is crash in prod & test, recover in dev.\r\n    if ((process.env.NODE_ENV !== 'production') && ( !(process.env.NODE_ENV === 'test'))) {\r\n        const info = ErrorTypeStrings[type];\r\n        if (contextVNode) {\r\n            pushWarningContext(contextVNode);\r\n        }\r\n        warn(`Unhandled error${info ? ` during execution of ${info}` : ``}`);\r\n        console.error(err);\r\n        if (contextVNode) {\r\n            popWarningContext();\r\n        }\r\n    }\r\n    else {\r\n        throw err;\r\n    }\r\n}\n\nconst queue = [];\r\nconst postFlushCbs = [];\r\nconst p = Promise.resolve();\r\nlet isFlushing = false;\r\nlet isFlushPending = false;\r\nconst RECURSION_LIMIT = 100;\r\nfunction nextTick(fn) {\r\n    return fn ? p.then(fn) : p;\r\n}\r\nfunction queueJob(job) {\r\n    if (!queue.includes(job)) {\r\n        queue.push(job);\r\n        queueFlush();\r\n    }\r\n}\r\nfunction invalidateJob(job) {\r\n    const i = queue.indexOf(job);\r\n    if (i > -1) {\r\n        queue[i] = null;\r\n    }\r\n}\r\nfunction queuePostFlushCb(cb) {\r\n    if (!isArray(cb)) {\r\n        postFlushCbs.push(cb);\r\n    }\r\n    else {\r\n        postFlushCbs.push(...cb);\r\n    }\r\n    queueFlush();\r\n}\r\nfunction queueFlush() {\r\n    if (!isFlushing && !isFlushPending) {\r\n        isFlushPending = true;\r\n        nextTick(flushJobs);\r\n    }\r\n}\r\nconst dedupe = (cbs) => [...new Set(cbs)];\r\nfunction flushPostFlushCbs(seen) {\r\n    if (postFlushCbs.length) {\r\n        const cbs = dedupe(postFlushCbs);\r\n        postFlushCbs.length = 0;\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            seen = seen || new Map();\r\n        }\r\n        for (let i = 0; i < cbs.length; i++) {\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                checkRecursiveUpdates(seen, cbs[i]);\r\n            }\r\n            cbs[i]();\r\n        }\r\n    }\r\n}\r\nfunction flushJobs(seen) {\r\n    isFlushPending = false;\r\n    isFlushing = true;\r\n    let job;\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        seen = seen || new Map();\r\n    }\r\n    while ((job = queue.shift()) !== undefined) {\r\n        if (job === null) {\r\n            continue;\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            checkRecursiveUpdates(seen, job);\r\n        }\r\n        callWithErrorHandling(job, null, 12 /* SCHEDULER */);\r\n    }\r\n    flushPostFlushCbs(seen);\r\n    isFlushing = false;\r\n    // some postFlushCb queued jobs!\r\n    // keep flushing until it drains.\r\n    if (queue.length || postFlushCbs.length) {\r\n        flushJobs(seen);\r\n    }\r\n}\r\nfunction checkRecursiveUpdates(seen, fn) {\r\n    if (!seen.has(fn)) {\r\n        seen.set(fn, 1);\r\n    }\r\n    else {\r\n        const count = seen.get(fn);\r\n        if (count > RECURSION_LIMIT) {\r\n            throw new Error('Maximum recursive updates exceeded. ' +\r\n                \"You may have code that is mutating state in your component's \" +\r\n                'render function or updated hook or watcher source function.');\r\n        }\r\n        else {\r\n            seen.set(fn, count + 1);\r\n        }\r\n    }\r\n}\n\n// mark the current rendering instance for asset resolution (e.g.\r\n// resolveComponent, resolveDirective) during render\r\nlet currentRenderingInstance = null;\r\n// dev only flag to track whether $attrs was used during render.\r\n// If $attrs was used during render then the warning for failed attrs\r\n// fallthrough can be suppressed.\r\nlet accessedAttrs = false;\r\nfunction markAttrsAccessed() {\r\n    accessedAttrs = true;\r\n}\r\nfunction renderComponentRoot(instance) {\r\n    const { type: Component, parent, vnode, proxy, withProxy, props, slots, attrs, vnodeHooks, emit, renderCache } = instance;\r\n    let result;\r\n    currentRenderingInstance = instance;\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        accessedAttrs = false;\r\n    }\r\n    try {\r\n        if (vnode.shapeFlag & 4 /* STATEFUL_COMPONENT */) {\r\n            // withProxy is a proxy with a diffrent `has` trap only for\r\n            // runtime-compiled render functions using `with` block.\r\n            const proxyToUse = withProxy || proxy;\r\n            result = normalizeVNode(instance.render.call(proxyToUse, proxyToUse, renderCache));\r\n        }\r\n        else {\r\n            // functional\r\n            const render = Component;\r\n            result = normalizeVNode(render.length > 1\r\n                ? render(props, {\r\n                    attrs,\r\n                    slots,\r\n                    emit\r\n                })\r\n                : render(props, null /* we know it doesn't need it */));\r\n        }\r\n        // attr merging\r\n        if (Component.props != null &&\r\n            Component.inheritAttrs !== false &&\r\n            attrs !== EMPTY_OBJ &&\r\n            Object.keys(attrs).length) {\r\n            if (result.shapeFlag & 1 /* ELEMENT */ ||\r\n                result.shapeFlag & 6 /* COMPONENT */) {\r\n                result = cloneVNode(result, attrs);\r\n            }\r\n            else if ((process.env.NODE_ENV !== 'production') && !accessedAttrs && result.type !== Comment) {\r\n                warn(`Extraneous non-props attributes (${Object.keys(attrs).join(',')}) ` +\r\n                    `were passed to component but could not be automatically inherited ` +\r\n                    `because component renders fragment or text root nodes.`);\r\n            }\r\n        }\r\n        // inherit vnode hooks\r\n        if (vnodeHooks !== EMPTY_OBJ) {\r\n            result = cloneVNode(result, vnodeHooks);\r\n        }\r\n        // inherit scopeId\r\n        const parentScopeId = parent && parent.type.__scopeId;\r\n        if (parentScopeId) {\r\n            result = cloneVNode(result, { [parentScopeId]: '' });\r\n        }\r\n        // inherit directives\r\n        if (vnode.dirs != null) {\r\n            if ((process.env.NODE_ENV !== 'production') && !isElementRoot(result)) {\r\n                warn(`Runtime directive used on component with non-element root node. ` +\r\n                    `The directives will not function as intended.`);\r\n            }\r\n            result.dirs = vnode.dirs;\r\n        }\r\n        // inherit transition data\r\n        if (vnode.transition != null) {\r\n            if ((process.env.NODE_ENV !== 'production') && !isElementRoot(result)) {\r\n                warn(`Component inside <Transition> renders non-element root node ` +\r\n                    `that cannot be animated.`);\r\n            }\r\n            result.transition = vnode.transition;\r\n        }\r\n    }\r\n    catch (err) {\r\n        handleError(err, instance, 1 /* RENDER_FUNCTION */);\r\n        result = createVNode(Comment);\r\n    }\r\n    currentRenderingInstance = null;\r\n    return result;\r\n}\r\nfunction isElementRoot(vnode) {\r\n    return (vnode.shapeFlag & 6 /* COMPONENT */ ||\r\n        vnode.shapeFlag & 1 /* ELEMENT */ ||\r\n        vnode.type === Comment // potential v-if branch switch\r\n    );\r\n}\r\nfunction shouldUpdateComponent(prevVNode, nextVNode, parentComponent, optimized) {\r\n    const { props: prevProps, children: prevChildren } = prevVNode;\r\n    const { props: nextProps, children: nextChildren, patchFlag } = nextVNode;\r\n    // Parent component's render function was hot-updated. Since this may have\r\n    // caused the child component's slots content to have changed, we need to\r\n    // force the child to update as well.\r\n    if (\r\n        (process.env.NODE_ENV !== 'production') &&\r\n        (prevChildren || nextChildren) &&\r\n        parentComponent &&\r\n        parentComponent.renderUpdated) {\r\n        return true;\r\n    }\r\n    // force child update on runtime directive usage on component vnode.\r\n    if (nextVNode.dirs != null) {\r\n        return true;\r\n    }\r\n    if (patchFlag > 0) {\r\n        if (patchFlag & 1024 /* DYNAMIC_SLOTS */) {\r\n            // slot content that references values that might have changed,\r\n            // e.g. in a v-for\r\n            return true;\r\n        }\r\n        if (patchFlag & 16 /* FULL_PROPS */) {\r\n            // presence of this flag indicates props are always non-null\r\n            return hasPropsChanged(prevProps, nextProps);\r\n        }\r\n        else {\r\n            if (patchFlag & 2 /* CLASS */) {\r\n                return prevProps.class === nextProps.class;\r\n            }\r\n            if (patchFlag & 4 /* STYLE */) {\r\n                return hasPropsChanged(prevProps.style, nextProps.style);\r\n            }\r\n            if (patchFlag & 8 /* PROPS */) {\r\n                const dynamicProps = nextVNode.dynamicProps;\r\n                for (let i = 0; i < dynamicProps.length; i++) {\r\n                    const key = dynamicProps[i];\r\n                    if (nextProps[key] !== prevProps[key]) {\r\n                        return true;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else if (!optimized) {\r\n        // this path is only taken by manually written render functions\r\n        // so presence of any children leads to a forced update\r\n        if (prevChildren != null || nextChildren != null) {\r\n            if (nextChildren == null || !nextChildren.$stable) {\r\n                return true;\r\n            }\r\n        }\r\n        if (prevProps === nextProps) {\r\n            return false;\r\n        }\r\n        if (prevProps === null) {\r\n            return nextProps !== null;\r\n        }\r\n        if (nextProps === null) {\r\n            return true;\r\n        }\r\n        return hasPropsChanged(prevProps, nextProps);\r\n    }\r\n    return false;\r\n}\r\nfunction hasPropsChanged(prevProps, nextProps) {\r\n    const nextKeys = Object.keys(nextProps);\r\n    if (nextKeys.length !== Object.keys(prevProps).length) {\r\n        return true;\r\n    }\r\n    for (let i = 0; i < nextKeys.length; i++) {\r\n        const key = nextKeys[i];\r\n        if (nextProps[key] !== prevProps[key]) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\nfunction updateHOCHostEl({ vnode, parent }, el // HostNode\r\n) {\r\n    while (parent && parent.subTree === vnode) {\r\n        (vnode = parent.vnode).el = el;\r\n        parent = parent.parent;\r\n    }\r\n}\n\nconst isSuspense = (type) => type.__isSuspense;\r\n// Suspense exposes a component-like API, and is treated like a component\r\n// in the compiler, but internally it's a special built-in type that hooks\r\n// directly into the renderer.\r\nconst SuspenseImpl = {\r\n    // In order to make Suspense tree-shakable, we need to avoid importing it\r\n    // directly in the renderer. The renderer checks for the __isSuspense flag\r\n    // on a vnode's type and calls the `process` method, passing in renderer\r\n    // internals.\r\n    __isSuspense: true,\r\n    process(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized, \r\n    // platform-specific impl passed from renderer\r\n    rendererInternals) {\r\n        if (n1 == null) {\r\n            mountSuspense(n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized, rendererInternals);\r\n        }\r\n        else {\r\n            patchSuspense(n1, n2, container, anchor, parentComponent, isSVG, optimized, rendererInternals);\r\n        }\r\n    }\r\n};\r\n// Force-casted public typing for h and TSX props inference\r\nconst Suspense = ( SuspenseImpl\r\n    );\r\nfunction mountSuspense(n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized, rendererInternals) {\r\n    const { p: patch, o: { createElement } } = rendererInternals;\r\n    const hiddenContainer = createElement('div');\r\n    const suspense = (n2.suspense = createSuspenseBoundary(n2, parentSuspense, parentComponent, container, hiddenContainer, anchor, isSVG, optimized, rendererInternals));\r\n    const { content, fallback } = normalizeSuspenseChildren(n2);\r\n    suspense.subTree = content;\r\n    suspense.fallbackTree = fallback;\r\n    // start mounting the content subtree in an off-dom container\r\n    patch(null, content, hiddenContainer, null, parentComponent, suspense, isSVG, optimized);\r\n    // now check if we have encountered any async deps\r\n    if (suspense.deps > 0) {\r\n        // mount the fallback tree\r\n        patch(null, fallback, container, anchor, parentComponent, null, // fallback tree will not have suspense context\r\n        isSVG, optimized);\r\n        n2.el = fallback.el;\r\n    }\r\n    else {\r\n        // Suspense has no async deps. Just resolve.\r\n        suspense.resolve();\r\n    }\r\n}\r\nfunction patchSuspense(n1, n2, container, anchor, parentComponent, isSVG, optimized, { p: patch }) {\r\n    const suspense = (n2.suspense = n1.suspense);\r\n    suspense.vnode = n2;\r\n    const { content, fallback } = normalizeSuspenseChildren(n2);\r\n    const oldSubTree = suspense.subTree;\r\n    const oldFallbackTree = suspense.fallbackTree;\r\n    if (!suspense.isResolved) {\r\n        patch(oldSubTree, content, suspense.hiddenContainer, null, parentComponent, suspense, isSVG, optimized);\r\n        if (suspense.deps > 0) {\r\n            // still pending. patch the fallback tree.\r\n            patch(oldFallbackTree, fallback, container, anchor, parentComponent, null, // fallback tree will not have suspense context\r\n            isSVG, optimized);\r\n            n2.el = fallback.el;\r\n        }\r\n        // If deps somehow becomes 0 after the patch it means the patch caused an\r\n        // async dep component to unmount and removed its dep. It will cause the\r\n        // suspense to resolve and we don't need to do anything here.\r\n    }\r\n    else {\r\n        // just normal patch inner content as a fragment\r\n        patch(oldSubTree, content, container, anchor, parentComponent, suspense, isSVG, optimized);\r\n        n2.el = content.el;\r\n    }\r\n    suspense.subTree = content;\r\n    suspense.fallbackTree = fallback;\r\n}\r\nfunction createSuspenseBoundary(vnode, parent, parentComponent, container, hiddenContainer, anchor, isSVG, optimized, rendererInternals) {\r\n    const { p: patch, m: move, um: unmount, n: next, o: { parentNode } } = rendererInternals;\r\n    const suspense = {\r\n        vnode,\r\n        parent,\r\n        parentComponent,\r\n        isSVG,\r\n        optimized,\r\n        container,\r\n        hiddenContainer,\r\n        anchor,\r\n        deps: 0,\r\n        subTree: null,\r\n        fallbackTree: null,\r\n        isResolved: false,\r\n        isUnmounted: false,\r\n        effects: [],\r\n        resolve() {\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                if (suspense.isResolved) {\r\n                    throw new Error(`resolveSuspense() is called on an already resolved suspense boundary.`);\r\n                }\r\n                if (suspense.isUnmounted) {\r\n                    throw new Error(`resolveSuspense() is called on an already unmounted suspense boundary.`);\r\n                }\r\n            }\r\n            const { vnode, subTree, fallbackTree, effects, parentComponent, container } = suspense;\r\n            // this is initial anchor on mount\r\n            let { anchor } = suspense;\r\n            // unmount fallback tree\r\n            if (fallbackTree.el) {\r\n                // if the fallback tree was mounted, it may have been moved\r\n                // as part of a parent suspense. get the latest anchor for insertion\r\n                anchor = next(fallbackTree);\r\n                unmount(fallbackTree, parentComponent, suspense, true);\r\n            }\r\n            // move content from off-dom container to actual container\r\n            move(subTree, container, anchor, 0 /* ENTER */);\r\n            const el = (vnode.el = subTree.el);\r\n            // suspense as the root node of a component...\r\n            if (parentComponent && parentComponent.subTree === vnode) {\r\n                parentComponent.vnode.el = el;\r\n                updateHOCHostEl(parentComponent, el);\r\n            }\r\n            // check if there is a pending parent suspense\r\n            let parent = suspense.parent;\r\n            let hasUnresolvedAncestor = false;\r\n            while (parent) {\r\n                if (!parent.isResolved) {\r\n                    // found a pending parent suspense, merge buffered post jobs\r\n                    // into that parent\r\n                    parent.effects.push(...effects);\r\n                    hasUnresolvedAncestor = true;\r\n                    break;\r\n                }\r\n                parent = parent.parent;\r\n            }\r\n            // no pending parent suspense, flush all jobs\r\n            if (!hasUnresolvedAncestor) {\r\n                queuePostFlushCb(effects);\r\n            }\r\n            suspense.isResolved = true;\r\n            // invoke @resolve event\r\n            const onResolve = vnode.props && vnode.props.onResolve;\r\n            if (isFunction(onResolve)) {\r\n                onResolve();\r\n            }\r\n        },\r\n        recede() {\r\n            suspense.isResolved = false;\r\n            const { vnode, subTree, fallbackTree, parentComponent, container, hiddenContainer, isSVG, optimized } = suspense;\r\n            // move content tree back to the off-dom container\r\n            const anchor = next(subTree);\r\n            move(subTree, hiddenContainer, null, 1 /* LEAVE */);\r\n            // remount the fallback tree\r\n            patch(null, fallbackTree, container, anchor, parentComponent, null, // fallback tree will not have suspense context\r\n            isSVG, optimized);\r\n            const el = (vnode.el = fallbackTree.el);\r\n            // suspense as the root node of a component...\r\n            if (parentComponent && parentComponent.subTree === vnode) {\r\n                parentComponent.vnode.el = el;\r\n                updateHOCHostEl(parentComponent, el);\r\n            }\r\n            // invoke @recede event\r\n            const onRecede = vnode.props && vnode.props.onRecede;\r\n            if (isFunction(onRecede)) {\r\n                onRecede();\r\n            }\r\n        },\r\n        move(container, anchor, type) {\r\n            move(suspense.isResolved ? suspense.subTree : suspense.fallbackTree, container, anchor, type);\r\n            suspense.container = container;\r\n        },\r\n        next() {\r\n            return next(suspense.isResolved ? suspense.subTree : suspense.fallbackTree);\r\n        },\r\n        registerDep(instance, setupRenderEffect) {\r\n            // suspense is already resolved, need to recede.\r\n            // use queueJob so it's handled synchronously after patching the current\r\n            // suspense tree\r\n            if (suspense.isResolved) {\r\n                queueJob(() => {\r\n                    suspense.recede();\r\n                });\r\n            }\r\n            suspense.deps++;\r\n            instance\r\n                .asyncDep.catch(err => {\r\n                handleError(err, instance, 0 /* SETUP_FUNCTION */);\r\n            })\r\n                .then(asyncSetupResult => {\r\n                // retry when the setup() promise resolves.\r\n                // component may have been unmounted before resolve.\r\n                if (instance.isUnmounted || suspense.isUnmounted) {\r\n                    return;\r\n                }\r\n                suspense.deps--;\r\n                // retry from this component\r\n                instance.asyncResolved = true;\r\n                const { vnode } = instance;\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    pushWarningContext(vnode);\r\n                }\r\n                handleSetupResult(instance, asyncSetupResult, suspense);\r\n                // unset placeholder, otherwise this will be treated as a hydration mount\r\n                vnode.el = null;\r\n                setupRenderEffect(instance, vnode, \r\n                // component may have been moved before resolve\r\n                parentNode(instance.subTree.el), next(instance.subTree), suspense, isSVG);\r\n                updateHOCHostEl(instance, vnode.el);\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    popWarningContext();\r\n                }\r\n                if (suspense.deps === 0) {\r\n                    suspense.resolve();\r\n                }\r\n            });\r\n        },\r\n        unmount(parentSuspense, doRemove) {\r\n            suspense.isUnmounted = true;\r\n            unmount(suspense.subTree, parentComponent, parentSuspense, doRemove);\r\n            if (!suspense.isResolved) {\r\n                unmount(suspense.fallbackTree, parentComponent, parentSuspense, doRemove);\r\n            }\r\n        }\r\n    };\r\n    return suspense;\r\n}\r\nfunction normalizeSuspenseChildren(vnode) {\r\n    const { shapeFlag, children } = vnode;\r\n    if (shapeFlag & 32 /* SLOTS_CHILDREN */) {\r\n        const { default: d, fallback } = children;\r\n        return {\r\n            content: normalizeVNode(isFunction(d) ? d() : d),\r\n            fallback: normalizeVNode(isFunction(fallback) ? fallback() : fallback)\r\n        };\r\n    }\r\n    else {\r\n        return {\r\n            content: normalizeVNode(children),\r\n            fallback: normalizeVNode(null)\r\n        };\r\n    }\r\n}\r\nfunction queueEffectWithSuspense(fn, suspense) {\r\n    if (suspense !== null && !suspense.isResolved) {\r\n        if (isArray(fn)) {\r\n            suspense.effects.push(...fn);\r\n        }\r\n        else {\r\n            suspense.effects.push(fn);\r\n        }\r\n    }\r\n    else {\r\n        queuePostFlushCb(fn);\r\n    }\r\n}\n\n// SFC scoped style ID management.\r\n// These are only used in esm-bundler builds, but since exports cannot be\r\n// conditional, we can only drop inner implementations in non-bundler builds.\r\nlet currentScopeId = null;\r\nconst scopeIdStack = [];\r\nfunction pushScopeId(id) {\r\n    {\r\n        scopeIdStack.push((currentScopeId = id));\r\n    }\r\n}\r\nfunction popScopeId() {\r\n    {\r\n        scopeIdStack.pop();\r\n        currentScopeId = scopeIdStack[scopeIdStack.length - 1] || null;\r\n    }\r\n}\r\nfunction withScopeId(id) {\r\n    {\r\n        return ((fn) => {\r\n            return function () {\r\n                pushScopeId(id);\r\n                const res = fn.apply(this, arguments);\r\n                popScopeId();\r\n                return res;\r\n            };\r\n        });\r\n    }\r\n}\n\nconst isPortal = (type) => type.__isPortal;\r\nconst PortalImpl = {\r\n    __isPortal: true,\r\n    process(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized, { mc: mountChildren, pc: patchChildren, pbc: patchBlockChildren, m: move, c: insertComment, o: { querySelector, setElementText } }) {\r\n        const targetSelector = n2.props && n2.props.target;\r\n        const { patchFlag, shapeFlag, children } = n2;\r\n        if (n1 == null) {\r\n            if ((process.env.NODE_ENV !== 'production') && isString(targetSelector) && !querySelector) {\r\n                warn(`Current renderer does not support string target for Portals. ` +\r\n                    `(missing querySelector renderer option)`);\r\n            }\r\n            const target = (n2.target = isString(targetSelector)\r\n                ? querySelector(targetSelector)\r\n                : targetSelector);\r\n            if (target != null) {\r\n                if (shapeFlag & 8 /* TEXT_CHILDREN */) {\r\n                    setElementText(target, children);\r\n                }\r\n                else if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                    mountChildren(children, target, null, parentComponent, parentSuspense, isSVG, optimized);\r\n                }\r\n            }\r\n            else if ((process.env.NODE_ENV !== 'production')) {\r\n                warn('Invalid Portal target on mount:', target, `(${typeof target})`);\r\n            }\r\n        }\r\n        else {\r\n            // update content\r\n            const target = (n2.target = n1.target);\r\n            if (patchFlag === 1 /* TEXT */) {\r\n                setElementText(target, children);\r\n            }\r\n            else if (n2.dynamicChildren) {\r\n                // fast path when the portal happens to be a block root\r\n                patchBlockChildren(n1.dynamicChildren, n2.dynamicChildren, container, parentComponent, parentSuspense, isSVG);\r\n            }\r\n            else if (!optimized) {\r\n                patchChildren(n1, n2, target, null, parentComponent, parentSuspense, isSVG);\r\n            }\r\n            // target changed\r\n            if (targetSelector !== (n1.props && n1.props.target)) {\r\n                const nextTarget = (n2.target = isString(targetSelector)\r\n                    ? querySelector(targetSelector)\r\n                    : targetSelector);\r\n                if (nextTarget != null) {\r\n                    // move content\r\n                    if (shapeFlag & 8 /* TEXT_CHILDREN */) {\r\n                        setElementText(target, '');\r\n                        setElementText(nextTarget, children);\r\n                    }\r\n                    else if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                        for (let i = 0; i < children.length; i++) {\r\n                            move(children[i], nextTarget, null, 2 /* REORDER */);\r\n                        }\r\n                    }\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn('Invalid Portal target on update:', target, `(${typeof target})`);\r\n                }\r\n            }\r\n        }\r\n        // insert an empty node as the placeholder for the portal\r\n        insertComment(n1, n2, container, anchor);\r\n    }\r\n};\r\n// Force-casted public typing for h and TSX props inference\r\nconst Portal = PortalImpl;\n\nconst Fragment = Symbol((process.env.NODE_ENV !== 'production') ? 'Fragment' : undefined);\r\nconst Text = Symbol((process.env.NODE_ENV !== 'production') ? 'Text' : undefined);\r\nconst Comment = Symbol((process.env.NODE_ENV !== 'production') ? 'Comment' : undefined);\r\nconst Static = Symbol((process.env.NODE_ENV !== 'production') ? 'Static' : undefined);\r\n// Since v-if and v-for are the two possible ways node structure can dynamically\r\n// change, once we consider v-if branches and each v-for fragment a block, we\r\n// can divide a template into nested blocks, and within each block the node\r\n// structure would be stable. This allows us to skip most children diffing\r\n// and only worry about the dynamic nodes (indicated by patch flags).\r\nconst blockStack = [];\r\nlet currentBlock = null;\r\n// Open a block.\r\n// This must be called before `createBlock`. It cannot be part of `createBlock`\r\n// because the children of the block are evaluated before `createBlock` itself\r\n// is called. The generated code typically looks like this:\r\n//\r\n//   function render() {\r\n//     return (openBlock(),createBlock('div', null, [...]))\r\n//   }\r\n//\r\n// disableTracking is true when creating a fragment block, since a fragment\r\n// always diffs its children.\r\nfunction openBlock(disableTracking = false) {\r\n    blockStack.push((currentBlock = disableTracking ? null : []));\r\n}\r\n// Whether we should be tracking dynamic child nodes inside a block.\r\n// Only tracks when this value is > 0\r\n// We are not using a simple boolean because this value may need to be\r\n// incremented/decremented by nested usage of v-once (see below)\r\nlet shouldTrack = 1;\r\n// Block tracking sometimes needs to be disabled, for example during the\r\n// creation of a tree that needs to be cached by v-once. The compiler generates\r\n// code like this:\r\n//   _cache[1] || (\r\n//     setBlockTracking(-1),\r\n//     _cache[1] = createVNode(...),\r\n//     setBlockTracking(1),\r\n//     _cache[1]\r\n//   )\r\nfunction setBlockTracking(value) {\r\n    shouldTrack += value;\r\n}\r\n// Create a block root vnode. Takes the same exact arguments as `createVNode`.\r\n// A block root keeps track of dynamic nodes within the block in the\r\n// `dynamicChildren` array.\r\nfunction createBlock(type, props, children, patchFlag, dynamicProps) {\r\n    // avoid a block with patchFlag tracking itself\r\n    shouldTrack--;\r\n    const vnode = createVNode(type, props, children, patchFlag, dynamicProps);\r\n    shouldTrack++;\r\n    // save current block children on the block vnode\r\n    vnode.dynamicChildren = currentBlock || EMPTY_ARR;\r\n    // close block\r\n    blockStack.pop();\r\n    currentBlock = blockStack[blockStack.length - 1] || null;\r\n    // a block is always going to be patched, so track it as a child of its\r\n    // parent block\r\n    if (currentBlock !== null) {\r\n        currentBlock.push(vnode);\r\n    }\r\n    return vnode;\r\n}\r\nfunction isVNode(value) {\r\n    return value ? value._isVNode === true : false;\r\n}\r\nfunction isSameVNodeType(n1, n2) {\r\n    if (\r\n        (process.env.NODE_ENV !== 'production') &&\r\n        n2.shapeFlag & 6 /* COMPONENT */ &&\r\n        n2.type.__hmrUpdated) {\r\n        // HMR only: if the component has been hot-updated, force a reload.\r\n        return false;\r\n    }\r\n    return n1.type === n2.type && n1.key === n2.key;\r\n}\r\nfunction createVNode(type, props = null, children = null, patchFlag = 0, dynamicProps = null) {\r\n    if ((process.env.NODE_ENV !== 'production') && !type) {\r\n        warn(`Invalid vnode type when creating vnode: ${type}.`);\r\n        type = Comment;\r\n    }\r\n    // class & style normalization.\r\n    if (props !== null) {\r\n        // for reactive or proxy objects, we need to clone it to enable mutation.\r\n        if (isReactive(props) || SetupProxySymbol in props) {\r\n            props = extend({}, props);\r\n        }\r\n        let { class: klass, style } = props;\r\n        if (klass != null && !isString(klass)) {\r\n            props.class = normalizeClass(klass);\r\n        }\r\n        if (isObject(style)) {\r\n            // reactive state objects need to be cloned since they are likely to be\r\n            // mutated\r\n            if (isReactive(style) && !isArray(style)) {\r\n                style = extend({}, style);\r\n            }\r\n            props.style = normalizeStyle(style);\r\n        }\r\n    }\r\n    // encode the vnode type information into a bitmap\r\n    const shapeFlag = isString(type)\r\n        ? 1 /* ELEMENT */\r\n        :  isSuspense(type)\r\n            ? 128 /* SUSPENSE */\r\n            : isPortal(type)\r\n                ? 64 /* PORTAL */\r\n                : isObject(type)\r\n                    ? 4 /* STATEFUL_COMPONENT */\r\n                    : isFunction(type)\r\n                        ? 2 /* FUNCTIONAL_COMPONENT */\r\n                        : 0;\r\n    const vnode = {\r\n        _isVNode: true,\r\n        type,\r\n        props,\r\n        key: (props !== null && props.key) || null,\r\n        ref: (props !== null && props.ref) || null,\r\n        scopeId: currentScopeId,\r\n        children: null,\r\n        component: null,\r\n        suspense: null,\r\n        dirs: null,\r\n        transition: null,\r\n        el: null,\r\n        anchor: null,\r\n        target: null,\r\n        shapeFlag,\r\n        patchFlag,\r\n        dynamicProps,\r\n        dynamicChildren: null,\r\n        appContext: null\r\n    };\r\n    normalizeChildren(vnode, children);\r\n    // presence of a patch flag indicates this node needs patching on updates.\r\n    // component nodes also should always be patched, because even if the\r\n    // component doesn't need to update, it needs to persist the instance on to\r\n    // the next vnode so that it can be properly unmounted later.\r\n    if (shouldTrack > 0 &&\r\n        currentBlock !== null &&\r\n        // the EVENTS flag is only for hydration and if it is the only flag, the\r\n        // vnode should not be considered dynamic due to handler caching.\r\n        patchFlag !== 32 /* HYDRATE_EVENTS */ &&\r\n        (patchFlag > 0 ||\r\n            shapeFlag & 128 /* SUSPENSE */ ||\r\n            shapeFlag & 4 /* STATEFUL_COMPONENT */ ||\r\n            shapeFlag & 2 /* FUNCTIONAL_COMPONENT */)) {\r\n        currentBlock.push(vnode);\r\n    }\r\n    return vnode;\r\n}\r\nfunction cloneVNode(vnode, extraProps) {\r\n    // This is intentionally NOT using spread or extend to avoid the runtime\r\n    // key enumeration cost.\r\n    return {\r\n        _isVNode: true,\r\n        type: vnode.type,\r\n        props: extraProps\r\n            ? vnode.props\r\n                ? mergeProps(vnode.props, extraProps)\r\n                : extraProps\r\n            : vnode.props,\r\n        key: vnode.key,\r\n        ref: vnode.ref,\r\n        scopeId: vnode.scopeId,\r\n        children: vnode.children,\r\n        target: vnode.target,\r\n        shapeFlag: vnode.shapeFlag,\r\n        patchFlag: vnode.patchFlag,\r\n        dynamicProps: vnode.dynamicProps,\r\n        dynamicChildren: vnode.dynamicChildren,\r\n        appContext: vnode.appContext,\r\n        dirs: vnode.dirs,\r\n        transition: vnode.transition,\r\n        // These should technically only be non-null on mounted VNodes. However,\r\n        // they *should* be copied for kept-alive vnodes. So we just always copy\r\n        // them since them being non-null during a mount doesn't affect the logic as\r\n        // they will simply be overwritten.\r\n        component: vnode.component,\r\n        suspense: vnode.suspense,\r\n        el: vnode.el,\r\n        anchor: vnode.anchor\r\n    };\r\n}\r\nfunction createTextVNode(text = ' ', flag = 0) {\r\n    return createVNode(Text, null, text, flag);\r\n}\r\nfunction createStaticVNode(content) {\r\n    return createVNode(Static, null, content);\r\n}\r\nfunction createCommentVNode(text = '', \r\n// when used as the v-else branch, the comment node must be created as a\r\n// block to ensure correct updates.\r\nasBlock = false) {\r\n    return asBlock\r\n        ? (openBlock(), createBlock(Comment, null, text))\r\n        : createVNode(Comment, null, text);\r\n}\r\nfunction normalizeVNode(child) {\r\n    if (child == null || typeof child === 'boolean') {\r\n        // empty placeholder\r\n        return createVNode(Comment);\r\n    }\r\n    else if (isArray(child)) {\r\n        // fragment\r\n        return createVNode(Fragment, null, child);\r\n    }\r\n    else if (typeof child === 'object') {\r\n        // already vnode, this should be the most common since compiled templates\r\n        // always produce all-vnode children arrays\r\n        return child.el === null ? child : cloneVNode(child);\r\n    }\r\n    else {\r\n        // strings and numbers\r\n        return createVNode(Text, null, String(child));\r\n    }\r\n}\r\n// optimized normalization for template-compiled render fns\r\nfunction cloneIfMounted(child) {\r\n    return child.el === null ? child : cloneVNode(child);\r\n}\r\nfunction normalizeChildren(vnode, children) {\r\n    let type = 0;\r\n    if (children == null) {\r\n        children = null;\r\n    }\r\n    else if (isArray(children)) {\r\n        type = 16 /* ARRAY_CHILDREN */;\r\n    }\r\n    else if (typeof children === 'object') {\r\n        type = 32 /* SLOTS_CHILDREN */;\r\n    }\r\n    else if (isFunction(children)) {\r\n        children = { default: children };\r\n        type = 32 /* SLOTS_CHILDREN */;\r\n    }\r\n    else {\r\n        children = String(children);\r\n        type = 8 /* TEXT_CHILDREN */;\r\n    }\r\n    vnode.children = children;\r\n    vnode.shapeFlag |= type;\r\n}\r\nconst handlersRE = /^on|^vnode/;\r\nfunction mergeProps(...args) {\r\n    const ret = {};\r\n    extend(ret, args[0]);\r\n    for (let i = 1; i < args.length; i++) {\r\n        const toMerge = args[i];\r\n        for (const key in toMerge) {\r\n            if (key === 'class') {\r\n                ret.class = normalizeClass([ret.class, toMerge.class]);\r\n            }\r\n            else if (key === 'style') {\r\n                ret.style = normalizeStyle([ret.style, toMerge.style]);\r\n            }\r\n            else if (handlersRE.test(key)) {\r\n                // on*, vnode*\r\n                const existing = ret[key];\r\n                ret[key] = existing\r\n                    ? [].concat(existing, toMerge[key])\r\n                    : toMerge[key];\r\n            }\r\n            else {\r\n                ret[key] = toMerge[key];\r\n            }\r\n        }\r\n    }\r\n    return ret;\r\n}\n\n// resolve raw VNode data.\r\n// - filter out reserved keys (key, ref)\r\n// - extract class and style into $attrs (to be merged onto child\r\n//   component root)\r\n// - for the rest:\r\n//   - if has declared props: put declared ones in `props`, the rest in `attrs`\r\n//   - else: everything goes in `props`.\r\nfunction resolveProps(instance, rawProps, _options) {\r\n    const hasDeclaredProps = _options != null;\r\n    if (!rawProps && !hasDeclaredProps) {\r\n        return;\r\n    }\r\n    const { 0: options, 1: needCastKeys } = normalizePropsOptions(_options);\r\n    const props = {};\r\n    let attrs = undefined;\r\n    let vnodeHooks = undefined;\r\n    // update the instance propsProxy (passed to setup()) to trigger potential\r\n    // changes\r\n    const propsProxy = instance.propsProxy;\r\n    const setProp = propsProxy\r\n        ? (key, val) => {\r\n            props[key] = val;\r\n            propsProxy[key] = val;\r\n        }\r\n        : (key, val) => {\r\n            props[key] = val;\r\n        };\r\n    // allow mutation of propsProxy (which is readonly by default)\r\n    unlock();\r\n    if (rawProps != null) {\r\n        for (const key in rawProps) {\r\n            const value = rawProps[key];\r\n            // key, ref are reserved and never passed down\r\n            if (isReservedProp(key)) {\r\n                if (key !== 'key' && key !== 'ref') {\r\n                    (vnodeHooks || (vnodeHooks = {}))[key] = value;\r\n                }\r\n                continue;\r\n            }\r\n            // prop option names are camelized during normalization, so to support\r\n            // kebab -> camel conversion here we need to camelize the key.\r\n            if (hasDeclaredProps) {\r\n                const camelKey = camelize(key);\r\n                if (hasOwn(options, camelKey)) {\r\n                    setProp(camelKey, value);\r\n                }\r\n                else {\r\n                    (attrs || (attrs = {}))[key] = value;\r\n                }\r\n            }\r\n            else {\r\n                setProp(key, value);\r\n            }\r\n        }\r\n    }\r\n    if (hasDeclaredProps) {\r\n        // set default values & cast booleans\r\n        for (let i = 0; i < needCastKeys.length; i++) {\r\n            const key = needCastKeys[i];\r\n            let opt = options[key];\r\n            if (opt == null)\r\n                continue;\r\n            const isAbsent = !hasOwn(props, key);\r\n            const hasDefault = hasOwn(opt, 'default');\r\n            const currentValue = props[key];\r\n            // default values\r\n            if (hasDefault && currentValue === undefined) {\r\n                const defaultValue = opt.default;\r\n                setProp(key, isFunction(defaultValue) ? defaultValue() : defaultValue);\r\n            }\r\n            // boolean casting\r\n            if (opt[0 /* shouldCast */]) {\r\n                if (isAbsent && !hasDefault) {\r\n                    setProp(key, false);\r\n                }\r\n                else if (opt[1 /* shouldCastTrue */] &&\r\n                    (currentValue === '' || currentValue === hyphenate(key))) {\r\n                    setProp(key, true);\r\n                }\r\n            }\r\n        }\r\n        // validation\r\n        if ((process.env.NODE_ENV !== 'production') && rawProps) {\r\n            for (const key in options) {\r\n                let opt = options[key];\r\n                if (opt == null)\r\n                    continue;\r\n                let rawValue;\r\n                if (!(key in rawProps) && hyphenate(key) in rawProps) {\r\n                    rawValue = rawProps[hyphenate(key)];\r\n                }\r\n                else {\r\n                    rawValue = rawProps[key];\r\n                }\r\n                validateProp(key, toRaw(rawValue), opt, !hasOwn(props, key));\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        // if component has no declared props, $attrs === $props\r\n        attrs = props;\r\n    }\r\n    // in case of dynamic props, check if we need to delete keys from\r\n    // the props proxy\r\n    const { patchFlag } = instance.vnode;\r\n    if (propsProxy !== null &&\r\n        (patchFlag === 0 || patchFlag & 16 /* FULL_PROPS */)) {\r\n        const rawInitialProps = toRaw(propsProxy);\r\n        for (const key in rawInitialProps) {\r\n            if (!hasOwn(props, key)) {\r\n                delete propsProxy[key];\r\n            }\r\n        }\r\n    }\r\n    // lock readonly\r\n    lock();\r\n    instance.props = props;\r\n    instance.attrs = options ? attrs || EMPTY_OBJ : props;\r\n    instance.vnodeHooks = vnodeHooks || EMPTY_OBJ;\r\n}\r\nconst normalizationMap = new WeakMap();\r\nfunction normalizePropsOptions(raw) {\r\n    if (!raw) {\r\n        return [];\r\n    }\r\n    if (normalizationMap.has(raw)) {\r\n        return normalizationMap.get(raw);\r\n    }\r\n    const options = {};\r\n    const needCastKeys = [];\r\n    if (isArray(raw)) {\r\n        for (let i = 0; i < raw.length; i++) {\r\n            if ((process.env.NODE_ENV !== 'production') && !isString(raw[i])) {\r\n                warn(`props must be strings when using array syntax.`, raw[i]);\r\n            }\r\n            const normalizedKey = camelize(raw[i]);\r\n            if (normalizedKey[0] !== '$') {\r\n                options[normalizedKey] = EMPTY_OBJ;\r\n            }\r\n            else if ((process.env.NODE_ENV !== 'production')) {\r\n                warn(`Invalid prop name: \"${normalizedKey}\" is a reserved property.`);\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        if ((process.env.NODE_ENV !== 'production') && !isObject(raw)) {\r\n            warn(`invalid props options`, raw);\r\n        }\r\n        for (const key in raw) {\r\n            const normalizedKey = camelize(key);\r\n            if (normalizedKey[0] !== '$') {\r\n                const opt = raw[key];\r\n                const prop = (options[normalizedKey] =\r\n                    isArray(opt) || isFunction(opt) ? { type: opt } : opt);\r\n                if (prop != null) {\r\n                    const booleanIndex = getTypeIndex(Boolean, prop.type);\r\n                    const stringIndex = getTypeIndex(String, prop.type);\r\n                    prop[0 /* shouldCast */] = booleanIndex > -1;\r\n                    prop[1 /* shouldCastTrue */] = booleanIndex < stringIndex;\r\n                    // if the prop needs boolean casting or default value\r\n                    if (booleanIndex > -1 || hasOwn(prop, 'default')) {\r\n                        needCastKeys.push(normalizedKey);\r\n                    }\r\n                }\r\n            }\r\n            else if ((process.env.NODE_ENV !== 'production')) {\r\n                warn(`Invalid prop name: \"${normalizedKey}\" is a reserved property.`);\r\n            }\r\n        }\r\n    }\r\n    const normalized = [options, needCastKeys];\r\n    normalizationMap.set(raw, normalized);\r\n    return normalized;\r\n}\r\n// use function string name to check type constructors\r\n// so that it works across vms / iframes.\r\nfunction getType(ctor) {\r\n    const match = ctor && ctor.toString().match(/^\\s*function (\\w+)/);\r\n    return match ? match[1] : '';\r\n}\r\nfunction isSameType(a, b) {\r\n    return getType(a) === getType(b);\r\n}\r\nfunction getTypeIndex(type, expectedTypes) {\r\n    if (isArray(expectedTypes)) {\r\n        for (let i = 0, len = expectedTypes.length; i < len; i++) {\r\n            if (isSameType(expectedTypes[i], type)) {\r\n                return i;\r\n            }\r\n        }\r\n    }\r\n    else if (isObject(expectedTypes)) {\r\n        return isSameType(expectedTypes, type) ? 0 : -1;\r\n    }\r\n    return -1;\r\n}\r\nfunction validateProp(name, value, prop, isAbsent) {\r\n    const { type, required, validator } = prop;\r\n    // required!\r\n    if (required && isAbsent) {\r\n        warn('Missing required prop: \"' + name + '\"');\r\n        return;\r\n    }\r\n    // missing but optional\r\n    if (value == null && !prop.required) {\r\n        return;\r\n    }\r\n    // type check\r\n    if (type != null && type !== true) {\r\n        let isValid = false;\r\n        const types = isArray(type) ? type : [type];\r\n        const expectedTypes = [];\r\n        // value is valid as long as one of the specified types match\r\n        for (let i = 0; i < types.length && !isValid; i++) {\r\n            const { valid, expectedType } = assertType(value, types[i]);\r\n            expectedTypes.push(expectedType || '');\r\n            isValid = valid;\r\n        }\r\n        if (!isValid) {\r\n            warn(getInvalidTypeMessage(name, value, expectedTypes));\r\n            return;\r\n        }\r\n    }\r\n    // custom validator\r\n    if (validator && !validator(value)) {\r\n        warn('Invalid prop: custom validator check failed for prop \"' + name + '\".');\r\n    }\r\n}\r\nconst isSimpleType = /*#__PURE__*/ makeMap('String,Number,Boolean,Function,Symbol');\r\nfunction assertType(value, type) {\r\n    let valid;\r\n    const expectedType = getType(type);\r\n    if (isSimpleType(expectedType)) {\r\n        const t = typeof value;\r\n        valid = t === expectedType.toLowerCase();\r\n        // for primitive wrapper objects\r\n        if (!valid && t === 'object') {\r\n            valid = value instanceof type;\r\n        }\r\n    }\r\n    else if (expectedType === 'Object') {\r\n        valid = toRawType(value) === 'Object';\r\n    }\r\n    else if (expectedType === 'Array') {\r\n        valid = isArray(value);\r\n    }\r\n    else {\r\n        valid = value instanceof type;\r\n    }\r\n    return {\r\n        valid,\r\n        expectedType\r\n    };\r\n}\r\nfunction getInvalidTypeMessage(name, value, expectedTypes) {\r\n    let message = `Invalid prop: type check failed for prop \"${name}\".` +\r\n        ` Expected ${expectedTypes.map(capitalize).join(', ')}`;\r\n    const expectedType = expectedTypes[0];\r\n    const receivedType = toRawType(value);\r\n    const expectedValue = styleValue(value, expectedType);\r\n    const receivedValue = styleValue(value, receivedType);\r\n    // check if we need to specify expected value\r\n    if (expectedTypes.length === 1 &&\r\n        isExplicable(expectedType) &&\r\n        !isBoolean(expectedType, receivedType)) {\r\n        message += ` with value ${expectedValue}`;\r\n    }\r\n    message += `, got ${receivedType} `;\r\n    // check if we need to specify received value\r\n    if (isExplicable(receivedType)) {\r\n        message += `with value ${receivedValue}.`;\r\n    }\r\n    return message;\r\n}\r\nfunction styleValue(value, type) {\r\n    if (type === 'String') {\r\n        return `\"${value}\"`;\r\n    }\r\n    else if (type === 'Number') {\r\n        return `${Number(value)}`;\r\n    }\r\n    else {\r\n        return `${value}`;\r\n    }\r\n}\r\nfunction isExplicable(type) {\r\n    const explicitTypes = ['string', 'number', 'boolean'];\r\n    return explicitTypes.some(elem => type.toLowerCase() === elem);\r\n}\r\nfunction isBoolean(...args) {\r\n    return args.some(elem => elem.toLowerCase() === 'boolean');\r\n}\n\nconst normalizeSlotValue = (value) => isArray(value)\r\n    ? value.map(normalizeVNode)\r\n    : [normalizeVNode(value)];\r\nconst normalizeSlot = (key, rawSlot) => (props) => {\r\n    if ((process.env.NODE_ENV !== 'production') && currentInstance != null) {\r\n        warn(`Slot \"${key}\" invoked outside of the render function: ` +\r\n            `this will not track dependencies used in the slot. ` +\r\n            `Invoke the slot function inside the render function instead.`);\r\n    }\r\n    return normalizeSlotValue(rawSlot(props));\r\n};\r\nfunction resolveSlots(instance, children) {\r\n    let slots;\r\n    if (instance.vnode.shapeFlag & 32 /* SLOTS_CHILDREN */) {\r\n        const rawSlots = children;\r\n        if (rawSlots._ === 1) {\r\n            // pre-normalized slots object generated by compiler\r\n            slots = children;\r\n        }\r\n        else {\r\n            slots = {};\r\n            for (const key in rawSlots) {\r\n                if (key === '$stable')\r\n                    continue;\r\n                const value = rawSlots[key];\r\n                if (isFunction(value)) {\r\n                    slots[key] = normalizeSlot(key, value);\r\n                }\r\n                else if (value != null) {\r\n                    if ((process.env.NODE_ENV !== 'production')) {\r\n                        warn(`Non-function value encountered for slot \"${key}\". ` +\r\n                            `Prefer function slots for better performance.`);\r\n                    }\r\n                    const normalized = normalizeSlotValue(value);\r\n                    slots[key] = () => normalized;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else if (children !== null) {\r\n        // non slot object children (direct value) passed to a component\r\n        if ((process.env.NODE_ENV !== 'production') && !isKeepAlive(instance.vnode)) {\r\n            warn(`Non-function value encountered for default slot. ` +\r\n                `Prefer function slots for better performance.`);\r\n        }\r\n        const normalized = normalizeSlotValue(children);\r\n        slots = { default: () => normalized };\r\n    }\r\n    instance.slots = slots || EMPTY_OBJ;\r\n}\n\n/**\r\nRuntime helper for applying directives to a vnode. Example usage:\r\n\nconst comp = resolveComponent('comp')\r\nconst foo = resolveDirective('foo')\r\nconst bar = resolveDirective('bar')\r\n\nreturn withDirectives(h(comp), [\r\n  [foo, this.x],\r\n  [bar, this.y]\r\n])\r\n*/\r\nconst isBuiltInDirective = /*#__PURE__*/ makeMap('bind,cloak,else-if,else,for,html,if,model,on,once,pre,show,slot,text');\r\nfunction validateDirectiveName(name) {\r\n    if (isBuiltInDirective(name)) {\r\n        warn('Do not use built-in directive ids as custom directive id: ' + name);\r\n    }\r\n}\r\nconst directiveToVnodeHooksMap = /*#__PURE__*/ [\r\n    'beforeMount',\r\n    'mounted',\r\n    'beforeUpdate',\r\n    'updated',\r\n    'beforeUnmount',\r\n    'unmounted'\r\n].reduce((map, key) => {\r\n    const vnodeKey = `onVnode` + key[0].toUpperCase() + key.slice(1);\r\n    const vnodeHook = (vnode, prevVnode) => {\r\n        const bindings = vnode.dirs;\r\n        const prevBindings = prevVnode ? prevVnode.dirs : EMPTY_ARR;\r\n        for (let i = 0; i < bindings.length; i++) {\r\n            const binding = bindings[i];\r\n            const hook = binding.dir[key];\r\n            if (hook != null) {\r\n                if (prevVnode != null) {\r\n                    binding.oldValue = prevBindings[i].value;\r\n                }\r\n                hook(vnode.el, binding, vnode, prevVnode);\r\n            }\r\n        }\r\n    };\r\n    map[key] = [vnodeKey, vnodeHook];\r\n    return map;\r\n}, {});\r\nfunction withDirectives(vnode, directives) {\r\n    const internalInstance = currentRenderingInstance;\r\n    if (internalInstance === null) {\r\n        (process.env.NODE_ENV !== 'production') && warn(`withDirectives can only be used inside render functions.`);\r\n        return vnode;\r\n    }\r\n    const instance = internalInstance.proxy;\r\n    const props = vnode.props || (vnode.props = {});\r\n    const bindings = vnode.dirs || (vnode.dirs = new Array(directives.length));\r\n    const injected = {};\r\n    for (let i = 0; i < directives.length; i++) {\r\n        let [dir, value, arg, modifiers = EMPTY_OBJ] = directives[i];\r\n        if (isFunction(dir)) {\r\n            dir = {\r\n                mounted: dir,\r\n                updated: dir\r\n            };\r\n        }\r\n        bindings[i] = {\r\n            dir,\r\n            instance,\r\n            value,\r\n            oldValue: void 0,\r\n            arg,\r\n            modifiers\r\n        };\r\n        // inject onVnodeXXX hooks\r\n        for (const key in dir) {\r\n            if (!injected[key]) {\r\n                const { 0: hookName, 1: hook } = directiveToVnodeHooksMap[key];\r\n                const existing = props[hookName];\r\n                props[hookName] = existing ? [].concat(existing, hook) : hook;\r\n                injected[key] = true;\r\n            }\r\n        }\r\n    }\r\n    return vnode;\r\n}\r\nfunction invokeDirectiveHook(hook, instance, vnode, prevVNode = null) {\r\n    callWithAsyncErrorHandling(hook, instance, 7 /* DIRECTIVE_HOOK */, [\r\n        vnode,\r\n        prevVNode\r\n    ]);\r\n}\n\nfunction createAppContext() {\r\n    return {\r\n        config: {\r\n            devtools: true,\r\n            performance: false,\r\n            isNativeTag: NO,\r\n            isCustomElement: NO,\r\n            errorHandler: undefined,\r\n            warnHandler: undefined\r\n        },\r\n        mixins: [],\r\n        components: {},\r\n        directives: {},\r\n        provides: {}\r\n    };\r\n}\r\nfunction createAppAPI(render, hydrate) {\r\n    return function createApp(rootComponent, rootProps = null) {\r\n        if (rootProps != null && !isObject(rootProps)) {\r\n            (process.env.NODE_ENV !== 'production') && warn(`root props passed to app.mount() must be an object.`);\r\n            rootProps = null;\r\n        }\r\n        const context = createAppContext();\r\n        const installedPlugins = new Set();\r\n        let isMounted = false;\r\n        const app = {\r\n            _component: rootComponent,\r\n            _props: rootProps,\r\n            _container: null,\r\n            _context: context,\r\n            get config() {\r\n                return context.config;\r\n            },\r\n            set config(v) {\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn(`app.config cannot be replaced. Modify individual options instead.`);\r\n                }\r\n            },\r\n            use(plugin, ...options) {\r\n                if (installedPlugins.has(plugin)) {\r\n                    (process.env.NODE_ENV !== 'production') && warn(`Plugin has already been applied to target app.`);\r\n                }\r\n                else if (plugin && isFunction(plugin.install)) {\r\n                    installedPlugins.add(plugin);\r\n                    plugin.install(app, ...options);\r\n                }\r\n                else if (isFunction(plugin)) {\r\n                    installedPlugins.add(plugin);\r\n                    plugin(app, ...options);\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn(`A plugin must either be a function or an object with an \"install\" ` +\r\n                        `function.`);\r\n                }\r\n                return app;\r\n            },\r\n            mixin(mixin) {\r\n                {\r\n                    if (!context.mixins.includes(mixin)) {\r\n                        context.mixins.push(mixin);\r\n                    }\r\n                    else if ((process.env.NODE_ENV !== 'production')) {\r\n                        warn('Mixin has already been applied to target app' +\r\n                            (mixin.name ? `: ${mixin.name}` : ''));\r\n                    }\r\n                }\r\n                return app;\r\n            },\r\n            component(name, component) {\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    validateComponentName(name, context.config);\r\n                }\r\n                if (!component) {\r\n                    return context.components[name];\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production') && context.components[name]) {\r\n                    warn(`Component \"${name}\" has already been registered in target app.`);\r\n                }\r\n                context.components[name] = component;\r\n                return app;\r\n            },\r\n            directive(name, directive) {\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    validateDirectiveName(name);\r\n                }\r\n                if (!directive) {\r\n                    return context.directives[name];\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production') && context.directives[name]) {\r\n                    warn(`Directive \"${name}\" has already been registered in target app.`);\r\n                }\r\n                context.directives[name] = directive;\r\n                return app;\r\n            },\r\n            mount(rootContainer, isHydrate) {\r\n                if (!isMounted) {\r\n                    const vnode = createVNode(rootComponent, rootProps);\r\n                    // store app context on the root VNode.\r\n                    // this will be set on the root instance on initial mount.\r\n                    vnode.appContext = context;\r\n                    // HMR root reload\r\n                    if ( (process.env.NODE_ENV !== 'production')) {\r\n                        context.reload = () => {\r\n                            render(cloneVNode(vnode), rootContainer);\r\n                        };\r\n                    }\r\n                    if (isHydrate && hydrate) {\r\n                        hydrate(vnode, rootContainer);\r\n                    }\r\n                    else {\r\n                        render(vnode, rootContainer);\r\n                    }\r\n                    isMounted = true;\r\n                    app._container = rootContainer;\r\n                    return vnode.component.proxy;\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn(`App has already been mounted. Create a new app instance instead.`);\r\n                }\r\n            },\r\n            unmount() {\r\n                if (isMounted) {\r\n                    render(null, app._container);\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn(`Cannot unmount an app that is not mounted.`);\r\n                }\r\n            },\r\n            provide(key, value) {\r\n                if ((process.env.NODE_ENV !== 'production') && key in context.provides) {\r\n                    warn(`App already provides property with key \"${key}\". ` +\r\n                        `It will be overwritten with the new value.`);\r\n                }\r\n                // TypeScript doesn't allow symbols as index type\r\n                // https://github.com/Microsoft/TypeScript/issues/24587\r\n                context.provides[key] = value;\r\n                return app;\r\n            }\r\n        };\r\n        return app;\r\n    };\r\n}\n\n// Expose the HMR runtime on the global object\r\n// This makes it entirely tree-shakable without polluting the exports and makes\r\n// it easier to be used in toolings like vue-loader\r\n// Note: for a component to be eligible for HMR it also needs the __hmrId option\r\n// to be set so that its instances can be registered / removed.\r\nif ( (process.env.NODE_ENV !== 'production')) {\r\n    const globalObject = typeof global !== 'undefined'\r\n        ? global\r\n        : typeof self !== 'undefined'\r\n            ? self\r\n            : typeof window !== 'undefined'\r\n                ? window\r\n                : {};\r\n    globalObject.__VUE_HMR_RUNTIME__ = {\r\n        createRecord: tryWrap(createRecord),\r\n        rerender: tryWrap(rerender),\r\n        reload: tryWrap(reload)\r\n    };\r\n}\r\nconst map = new Map();\r\nfunction registerHMR(instance) {\r\n    map.get(instance.type.__hmrId).instances.add(instance);\r\n}\r\nfunction unregisterHMR(instance) {\r\n    map.get(instance.type.__hmrId).instances.delete(instance);\r\n}\r\nfunction createRecord(id, comp) {\r\n    if (map.has(id)) {\r\n        return false;\r\n    }\r\n    map.set(id, {\r\n        comp,\r\n        instances: new Set()\r\n    });\r\n    return true;\r\n}\r\nfunction rerender(id, newRender) {\r\n    // Array.from creates a snapshot which avoids the set being mutated during\r\n    // updates\r\n    Array.from(map.get(id).instances).forEach(instance => {\r\n        if (newRender) {\r\n            instance.render = newRender;\r\n        }\r\n        instance.renderCache = [];\r\n        // this flag forces child components with slot content to update\r\n        instance.renderUpdated = true;\r\n        instance.update();\r\n        instance.renderUpdated = false;\r\n    });\r\n}\r\nfunction reload(id, newComp) {\r\n    const record = map.get(id);\r\n    // 1. Update existing comp definition to match new one\r\n    const comp = record.comp;\r\n    Object.assign(comp, newComp);\r\n    for (const key in comp) {\r\n        if (!(key in newComp)) {\r\n            delete comp[key];\r\n        }\r\n    }\r\n    // 2. Mark component dirty. This forces the renderer to replace the component\r\n    // on patch.\r\n    comp.__hmrUpdated = true;\r\n    // Array.from creates a snapshot which avoids the set being mutated during\r\n    // updates\r\n    Array.from(record.instances).forEach(instance => {\r\n        if (instance.parent) {\r\n            // 3. Force the parent instance to re-render. This will cause all updated\r\n            // components to be unmounted and re-mounted. Queue the update so that we\r\n            // don't end up forcing the same parent to re-render multiple times.\r\n            queueJob(instance.parent.update);\r\n        }\r\n        else if (instance.appContext.reload) {\r\n            // root instance mounted via createApp() has a reload method\r\n            instance.appContext.reload();\r\n        }\r\n        else if (typeof window !== 'undefined') {\r\n            // root instance inside tree created via raw render(). Force reload.\r\n            window.location.reload();\r\n        }\r\n        else {\r\n            console.warn('[HMR] Root or manually mounted instance modified. Full reload required.');\r\n        }\r\n    });\r\n    // 4. Make sure to unmark the component after the reload.\r\n    queuePostFlushCb(() => {\r\n        comp.__hmrUpdated = false;\r\n    });\r\n}\r\nfunction tryWrap(fn) {\r\n    return (id, arg) => {\r\n        try {\r\n            return fn(id, arg);\r\n        }\r\n        catch (e) {\r\n            console.error(e);\r\n            console.warn(`[HMR] Something went wrong during Vue component hot-reload. ` +\r\n                `Full reload required.`);\r\n        }\r\n    };\r\n}\n\n// Note: hydration is DOM-specific\r\n// But we have to place it in core due to tight coupling with core - splitting\r\n// it out creates a ton of unnecessary complexity.\r\n// Hydration also depends on some renderer internal logic which needs to be\r\n// passed in via arguments.\r\nfunction createHydrationFunctions({ mt: mountComponent, o: { patchProp } }) {\r\n    const hydrate = (vnode, container) => {\r\n        if ((process.env.NODE_ENV !== 'production') && !container.hasChildNodes()) {\r\n            warn(`Attempting to hydrate existing markup but container is empty.`);\r\n            return;\r\n        }\r\n        hydrateNode(container.firstChild, vnode);\r\n        flushPostFlushCbs();\r\n    };\r\n    // TODO handle mismatches\r\n    const hydrateNode = (node, vnode, parentComponent = null) => {\r\n        const { type, shapeFlag } = vnode;\r\n        vnode.el = node;\r\n        switch (type) {\r\n            case Text:\r\n            case Comment:\r\n            case Static:\r\n                return node.nextSibling;\r\n            case Fragment:\r\n                const anchor = (vnode.anchor = hydrateChildren(node.nextSibling, vnode.children, parentComponent));\r\n                // TODO handle potential hydration error if fragment didn't get\r\n                // back anchor as expected.\r\n                return anchor.nextSibling;\r\n            default:\r\n                if (shapeFlag & 1 /* ELEMENT */) {\r\n                    return hydrateElement(node, vnode, parentComponent);\r\n                }\r\n                else if (shapeFlag & 6 /* COMPONENT */) {\r\n                    // when setting up the render effect, if the initial vnode already\r\n                    // has .el set, the component will perform hydration instead of mount\r\n                    // on its sub-tree.\r\n                    mountComponent(vnode, null, null, parentComponent, null, false);\r\n                    const subTree = vnode.component.subTree;\r\n                    return (subTree.anchor || subTree.el).nextSibling;\r\n                }\r\n                else if (shapeFlag & 64 /* PORTAL */) {\r\n                    hydratePortal(vnode, parentComponent);\r\n                    return node.nextSibling;\r\n                }\r\n                else if ( shapeFlag & 128 /* SUSPENSE */) ;\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn('Invalid HostVNode type:', type, `(${typeof type})`);\r\n                }\r\n        }\r\n    };\r\n    const hydrateElement = (el, vnode, parentComponent) => {\r\n        const { props, patchFlag } = vnode;\r\n        // skip props & children if this is hoisted static nodes\r\n        if (patchFlag !== -1 /* HOISTED */) {\r\n            // props\r\n            if (props !== null) {\r\n                if (patchFlag & 16 /* FULL_PROPS */ ||\r\n                    patchFlag & 32 /* HYDRATE_EVENTS */) {\r\n                    for (const key in props) {\r\n                        if (!isReservedProp(key) && isOn(key)) {\r\n                            patchProp(el, key, props[key], null);\r\n                        }\r\n                    }\r\n                }\r\n                else if (props.onClick != null) {\r\n                    // Fast path for click listeners (which is most often) to avoid\r\n                    // iterating through props.\r\n                    patchProp(el, 'onClick', props.onClick, null);\r\n                }\r\n                // vnode hooks\r\n                const { onVnodeBeforeMount, onVnodeMounted } = props;\r\n                if (onVnodeBeforeMount != null) {\r\n                    invokeDirectiveHook(onVnodeBeforeMount, parentComponent, vnode);\r\n                }\r\n                if (onVnodeMounted != null) {\r\n                    queuePostFlushCb(() => {\r\n                        invokeDirectiveHook(onVnodeMounted, parentComponent, vnode);\r\n                    });\r\n                }\r\n            }\r\n            // children\r\n            if (vnode.shapeFlag & 16 /* ARRAY_CHILDREN */ &&\r\n                // skip if element has innerHTML / textContent\r\n                !(props !== null && (props.innerHTML || props.textContent))) {\r\n                hydrateChildren(el.firstChild, vnode.children, parentComponent);\r\n            }\r\n        }\r\n        return el.nextSibling;\r\n    };\r\n    const hydrateChildren = (node, vnodes, parentComponent) => {\r\n        for (let i = 0; node != null && i < vnodes.length; i++) {\r\n            // TODO can skip normalizeVNode in optimized mode\r\n            // (need hint on rendered markup?)\r\n            const vnode = (vnodes[i] = normalizeVNode(vnodes[i]));\r\n            node = hydrateNode(node, vnode, parentComponent);\r\n        }\r\n        return node;\r\n    };\r\n    const hydratePortal = (vnode, parentComponent) => {\r\n        const targetSelector = vnode.props && vnode.props.target;\r\n        const target = (vnode.target = isString(targetSelector)\r\n            ? document.querySelector(targetSelector)\r\n            : targetSelector);\r\n        if (target != null && vnode.shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n            hydrateChildren(target.firstChild, vnode.children, parentComponent);\r\n        }\r\n    };\r\n    return [hydrate, hydrateNode];\r\n}\n\nconst __HMR__ =  (process.env.NODE_ENV !== 'production');\r\nconst prodEffectOptions = {\r\n    scheduler: queueJob\r\n};\r\nfunction createDevEffectOptions(instance) {\r\n    return {\r\n        scheduler: queueJob,\r\n        onTrack: instance.rtc ? e => invokeHooks(instance.rtc, e) : void 0,\r\n        onTrigger: instance.rtg ? e => invokeHooks(instance.rtg, e) : void 0\r\n    };\r\n}\r\nfunction invokeHooks(hooks, arg) {\r\n    for (let i = 0; i < hooks.length; i++) {\r\n        hooks[i](arg);\r\n    }\r\n}\r\nconst queuePostRenderEffect =  queueEffectWithSuspense\r\n    ;\r\n/**\r\n * The createRenderer function accepts two generic arguments:\r\n * HostNode and HostElement, corresponding to Node and Element types in the\r\n * host environment. For example, for runtime-dom, HostNode would be the DOM\r\n * `Node` interface and HostElement would be the DOM `Element` interface.\r\n *\r\n * Custom renderers can pass in the platform specific types like this:\r\n *\r\n * ``` js\r\n * const { render, createApp } = createRenderer<Node, Element>({\r\n *   patchProp,\r\n *   ...nodeOps\r\n * })\r\n * ```\r\n */\r\nfunction createRenderer(options) {\r\n    return baseCreateRenderer(options);\r\n}\r\n// Separate API for creating hydration-enabled renderer.\r\n// Hydration logic is only used when calling this function, making it\r\n// tree-shakable.\r\nfunction createHydrationRenderer(options) {\r\n    return baseCreateRenderer(options, createHydrationFunctions);\r\n}\r\n// implementation\r\nfunction baseCreateRenderer(options, createHydrationFns) {\r\n    const { insert: hostInsert, remove: hostRemove, patchProp: hostPatchProp, createElement: hostCreateElement, createText: hostCreateText, createComment: hostCreateComment, setText: hostSetText, setElementText: hostSetElementText, parentNode: hostParentNode, nextSibling: hostNextSibling, setScopeId: hostSetScopeId = NOOP, cloneNode: hostCloneNode, insertStaticContent: hostInsertStaticContent } = options;\r\n    // Note: functions inside this closure should use `const xxx = () => {}`\r\n    // style in order to prevent being inlined by minifiers.\r\n    const patch = (n1, n2, container, anchor = null, parentComponent = null, parentSuspense = null, isSVG = false, optimized = false) => {\r\n        // patching & not same type, unmount old tree\r\n        if (n1 != null && !isSameVNodeType(n1, n2)) {\r\n            anchor = getNextHostNode(n1);\r\n            unmount(n1, parentComponent, parentSuspense, true);\r\n            n1 = null;\r\n        }\r\n        const { type, shapeFlag } = n2;\r\n        switch (type) {\r\n            case Text:\r\n                processText(n1, n2, container, anchor);\r\n                break;\r\n            case Comment:\r\n                processCommentNode(n1, n2, container, anchor);\r\n                break;\r\n            case Static:\r\n                if (n1 == null) {\r\n                    mountStaticNode(n2, container, anchor, isSVG);\r\n                } // static nodes are noop on patch\r\n                break;\r\n            case Fragment:\r\n                processFragment(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n                break;\r\n            default:\r\n                if (shapeFlag & 1 /* ELEMENT */) {\r\n                    processElement(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n                }\r\n                else if (shapeFlag & 6 /* COMPONENT */) {\r\n                    processComponent(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n                }\r\n                else if (shapeFlag & 64 /* PORTAL */) {\r\n                    type.process(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized, internals);\r\n                }\r\n                else if ( shapeFlag & 128 /* SUSPENSE */) {\r\n                    type.process(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized, internals);\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn('Invalid HostVNode type:', type, `(${typeof type})`);\r\n                }\r\n        }\r\n    };\r\n    const processText = (n1, n2, container, anchor) => {\r\n        if (n1 == null) {\r\n            hostInsert((n2.el = hostCreateText(n2.children)), container, anchor);\r\n        }\r\n        else {\r\n            const el = (n2.el = n1.el);\r\n            if (n2.children !== n1.children) {\r\n                hostSetText(el, n2.children);\r\n            }\r\n        }\r\n    };\r\n    const processCommentNode = (n1, n2, container, anchor) => {\r\n        if (n1 == null) {\r\n            hostInsert((n2.el = hostCreateComment(n2.children || '')), container, anchor);\r\n        }\r\n        else {\r\n            // there's no support for dynamic comments\r\n            n2.el = n1.el;\r\n        }\r\n    };\r\n    const mountStaticNode = (n2, container, anchor, isSVG) => {\r\n        if (n2.el != null && hostCloneNode !== undefined) {\r\n            hostInsert(hostCloneNode(n2.el), container, anchor);\r\n        }\r\n        else {\r\n            // static nodes are only present when used with compiler-dom/runtime-dom\r\n            // which guarantees presence of hostInsertStaticContent.\r\n            n2.el = hostInsertStaticContent(n2.children, container, anchor, isSVG);\r\n        }\r\n    };\r\n    const processElement = (n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized) => {\r\n        isSVG = isSVG || n2.type === 'svg';\r\n        if (n1 == null) {\r\n            mountElement(n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n        }\r\n        else {\r\n            patchElement(n1, n2, parentComponent, parentSuspense, isSVG, optimized);\r\n        }\r\n        if (n2.ref !== null && parentComponent !== null) {\r\n            setRef(n2.ref, n1 && n1.ref, parentComponent, n2.el);\r\n        }\r\n    };\r\n    const mountElement = (vnode, container, anchor, parentComponent, parentSuspense, isSVG, optimized) => {\r\n        let el;\r\n        const { type, props, shapeFlag, transition, scopeId, patchFlag } = vnode;\r\n        if (vnode.el !== null &&\r\n            hostCloneNode !== undefined &&\r\n            patchFlag === -1 /* HOISTED */) {\r\n            // If a vnode has non-null el, it means it's being reused.\r\n            // Only static vnodes can be reused, so its mounted DOM nodes should be\r\n            // exactly the same, and we can simply do a clone here.\r\n            el = vnode.el = hostCloneNode(vnode.el);\r\n        }\r\n        else {\r\n            el = vnode.el = hostCreateElement(vnode.type, isSVG);\r\n            // props\r\n            if (props != null) {\r\n                for (const key in props) {\r\n                    if (!isReservedProp(key)) {\r\n                        hostPatchProp(el, key, props[key], null, isSVG);\r\n                    }\r\n                }\r\n                if (props.onVnodeBeforeMount != null) {\r\n                    invokeDirectiveHook(props.onVnodeBeforeMount, parentComponent, vnode);\r\n                }\r\n            }\r\n            // scopeId\r\n            {\r\n                if (scopeId !== null) {\r\n                    hostSetScopeId(el, scopeId);\r\n                }\r\n                const treeOwnerId = parentComponent && parentComponent.type.__scopeId;\r\n                // vnode's own scopeId and the current patched component's scopeId is\r\n                // different - this is a slot content node.\r\n                if (treeOwnerId != null && treeOwnerId !== scopeId) {\r\n                    hostSetScopeId(el, treeOwnerId + '-s');\r\n                }\r\n            }\r\n            // children\r\n            if (shapeFlag & 8 /* TEXT_CHILDREN */) {\r\n                hostSetElementText(el, vnode.children);\r\n            }\r\n            else if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                mountChildren(vnode.children, el, null, parentComponent, parentSuspense, isSVG && type !== 'foreignObject', optimized || vnode.dynamicChildren !== null);\r\n            }\r\n            if (transition != null && !transition.persisted) {\r\n                transition.beforeEnter(el);\r\n            }\r\n        }\r\n        hostInsert(el, container, anchor);\r\n        const vnodeMountedHook = props && props.onVnodeMounted;\r\n        if (vnodeMountedHook != null ||\r\n            (transition != null && !transition.persisted)) {\r\n            queuePostRenderEffect(() => {\r\n                vnodeMountedHook &&\r\n                    invokeDirectiveHook(vnodeMountedHook, parentComponent, vnode);\r\n                transition && !transition.persisted && transition.enter(el);\r\n            }, parentSuspense);\r\n        }\r\n    };\r\n    const mountChildren = (children, container, anchor, parentComponent, parentSuspense, isSVG, optimized, start = 0) => {\r\n        for (let i = start; i < children.length; i++) {\r\n            const child = (children[i] = optimized\r\n                ? cloneIfMounted(children[i])\r\n                : normalizeVNode(children[i]));\r\n            patch(null, child, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n        }\r\n    };\r\n    const patchElement = (n1, n2, parentComponent, parentSuspense, isSVG, optimized) => {\r\n        const el = (n2.el = n1.el);\r\n        let { patchFlag, dynamicChildren } = n2;\r\n        const oldProps = (n1 && n1.props) || EMPTY_OBJ;\r\n        const newProps = n2.props || EMPTY_OBJ;\r\n        if (newProps.onVnodeBeforeUpdate != null) {\r\n            invokeDirectiveHook(newProps.onVnodeBeforeUpdate, parentComponent, n2, n1);\r\n        }\r\n        if (__HMR__ && parentComponent && parentComponent.renderUpdated) {\r\n            // HMR updated, force full diff\r\n            patchFlag = 0;\r\n            optimized = false;\r\n            dynamicChildren = null;\r\n        }\r\n        if (patchFlag > 0) {\r\n            // the presence of a patchFlag means this element's render code was\r\n            // generated by the compiler and can take the fast path.\r\n            // in this path old node and new node are guaranteed to have the same shape\r\n            // (i.e. at the exact same position in the source template)\r\n            if (patchFlag & 16 /* FULL_PROPS */) {\r\n                // element props contain dynamic keys, full diff needed\r\n                patchProps(el, n2, oldProps, newProps, parentComponent, parentSuspense, isSVG);\r\n            }\r\n            else {\r\n                // class\r\n                // this flag is matched when the element has dynamic class bindings.\r\n                if (patchFlag & 2 /* CLASS */) {\r\n                    if (oldProps.class !== newProps.class) {\r\n                        hostPatchProp(el, 'class', newProps.class, null, isSVG);\r\n                    }\r\n                }\r\n                // style\r\n                // this flag is matched when the element has dynamic style bindings\r\n                if (patchFlag & 4 /* STYLE */) {\r\n                    hostPatchProp(el, 'style', newProps.style, oldProps.style, isSVG);\r\n                }\r\n                // props\r\n                // This flag is matched when the element has dynamic prop/attr bindings\r\n                // other than class and style. The keys of dynamic prop/attrs are saved for\r\n                // faster iteration.\r\n                // Note dynamic keys like :[foo]=\"bar\" will cause this optimization to\r\n                // bail out and go through a full diff because we need to unset the old key\r\n                if (patchFlag & 8 /* PROPS */) {\r\n                    // if the flag is present then dynamicProps must be non-null\r\n                    const propsToUpdate = n2.dynamicProps;\r\n                    for (let i = 0; i < propsToUpdate.length; i++) {\r\n                        const key = propsToUpdate[i];\r\n                        const prev = oldProps[key];\r\n                        const next = newProps[key];\r\n                        if (prev !== next) {\r\n                            hostPatchProp(el, key, next, prev, isSVG, n1.children, parentComponent, parentSuspense, unmountChildren);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            // text\r\n            // This flag is matched when the element has only dynamic text children.\r\n            if (patchFlag & 1 /* TEXT */) {\r\n                if (n1.children !== n2.children) {\r\n                    hostSetElementText(el, n2.children);\r\n                }\r\n            }\r\n        }\r\n        else if (!optimized && dynamicChildren == null) {\r\n            // unoptimized, full diff\r\n            patchProps(el, n2, oldProps, newProps, parentComponent, parentSuspense, isSVG);\r\n        }\r\n        const areChildrenSVG = isSVG && n2.type !== 'foreignObject';\r\n        if (dynamicChildren != null) {\r\n            patchBlockChildren(n1.dynamicChildren, dynamicChildren, el, parentComponent, parentSuspense, areChildrenSVG);\r\n        }\r\n        else if (!optimized) {\r\n            // full diff\r\n            patchChildren(n1, n2, el, null, parentComponent, parentSuspense, areChildrenSVG);\r\n        }\r\n        if (newProps.onVnodeUpdated != null) {\r\n            queuePostRenderEffect(() => {\r\n                invokeDirectiveHook(newProps.onVnodeUpdated, parentComponent, n2, n1);\r\n            }, parentSuspense);\r\n        }\r\n    };\r\n    // The fast path for blocks.\r\n    const patchBlockChildren = (oldChildren, newChildren, fallbackContainer, parentComponent, parentSuspense, isSVG) => {\r\n        for (let i = 0; i < newChildren.length; i++) {\r\n            const oldVNode = oldChildren[i];\r\n            const newVNode = newChildren[i];\r\n            // Determine the container (parent element) for the patch.\r\n            const container = \r\n            // - In the case of a Fragment, we need to provide the actual parent\r\n            // of the Fragment itself so it can move its children.\r\n            oldVNode.type === Fragment ||\r\n                // - In the case of different nodes, there is going to be a replacement\r\n                // which also requires the correct parent container\r\n                !isSameVNodeType(oldVNode, newVNode) ||\r\n                // - In the case of a component, it could contain anything.\r\n                oldVNode.shapeFlag & 6 /* COMPONENT */\r\n                ? hostParentNode(oldVNode.el)\r\n                : // In other cases, the parent container is not actually used so we\r\n                    // just pass the block element here to avoid a DOM parentNode call.\r\n                    fallbackContainer;\r\n            patch(oldVNode, newVNode, container, null, parentComponent, parentSuspense, isSVG, true);\r\n        }\r\n    };\r\n    const patchProps = (el, vnode, oldProps, newProps, parentComponent, parentSuspense, isSVG) => {\r\n        if (oldProps !== newProps) {\r\n            for (const key in newProps) {\r\n                if (isReservedProp(key))\r\n                    continue;\r\n                const next = newProps[key];\r\n                const prev = oldProps[key];\r\n                if (next !== prev) {\r\n                    hostPatchProp(el, key, next, prev, isSVG, vnode.children, parentComponent, parentSuspense, unmountChildren);\r\n                }\r\n            }\r\n            if (oldProps !== EMPTY_OBJ) {\r\n                for (const key in oldProps) {\r\n                    if (!isReservedProp(key) && !(key in newProps)) {\r\n                        hostPatchProp(el, key, null, null, isSVG, vnode.children, parentComponent, parentSuspense, unmountChildren);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n    let devFragmentID = 0;\r\n    const processFragment = (n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized) => {\r\n        const showID = (process.env.NODE_ENV !== 'production') && !(process.env.NODE_ENV === 'test');\r\n        const fragmentStartAnchor = (n2.el = n1\r\n            ? n1.el\r\n            : hostCreateComment(showID ? `fragment-${devFragmentID}-start` : ''));\r\n        const fragmentEndAnchor = (n2.anchor = n1\r\n            ? n1.anchor\r\n            : hostCreateComment(showID ? `fragment-${devFragmentID}-end` : ''));\r\n        let { patchFlag, dynamicChildren } = n2;\r\n        if (patchFlag > 0) {\r\n            optimized = true;\r\n        }\r\n        if (__HMR__ && parentComponent && parentComponent.renderUpdated) {\r\n            // HMR updated, force full diff\r\n            patchFlag = 0;\r\n            optimized = false;\r\n            dynamicChildren = null;\r\n        }\r\n        if (n1 == null) {\r\n            if (showID) {\r\n                devFragmentID++;\r\n            }\r\n            hostInsert(fragmentStartAnchor, container, anchor);\r\n            hostInsert(fragmentEndAnchor, container, anchor);\r\n            // a fragment can only have array children\r\n            // since they are either generated by the compiler, or implicitly created\r\n            // from arrays.\r\n            mountChildren(n2.children, container, fragmentEndAnchor, parentComponent, parentSuspense, isSVG, optimized);\r\n        }\r\n        else {\r\n            if (patchFlag & 64 /* STABLE_FRAGMENT */ && dynamicChildren != null) {\r\n                // a stable fragment (template root or <template v-for>) doesn't need to\r\n                // patch children order, but it may contain dynamicChildren.\r\n                patchBlockChildren(n1.dynamicChildren, dynamicChildren, container, parentComponent, parentSuspense, isSVG);\r\n            }\r\n            else {\r\n                // keyed / unkeyed, or manual fragments.\r\n                // for keyed & unkeyed, since they are compiler generated from v-for,\r\n                // each child is guaranteed to be a block so the fragment will never\r\n                // have dynamicChildren.\r\n                patchChildren(n1, n2, container, fragmentEndAnchor, parentComponent, parentSuspense, isSVG, optimized);\r\n            }\r\n        }\r\n    };\r\n    const processComponent = (n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized) => {\r\n        if (n1 == null) {\r\n            if (n2.shapeFlag & 512 /* COMPONENT_KEPT_ALIVE */) {\r\n                parentComponent.sink.activate(n2, container, anchor);\r\n            }\r\n            else {\r\n                mountComponent(n2, container, anchor, parentComponent, parentSuspense, isSVG);\r\n            }\r\n        }\r\n        else {\r\n            const instance = (n2.component = n1.component);\r\n            if (shouldUpdateComponent(n1, n2, parentComponent, optimized)) {\r\n                if (\r\n                    instance.asyncDep &&\r\n                    !instance.asyncResolved) {\r\n                    // async & still pending - just update props and slots\r\n                    // since the component's reactive effect for render isn't set-up yet\r\n                    if ((process.env.NODE_ENV !== 'production')) {\r\n                        pushWarningContext(n2);\r\n                    }\r\n                    updateComponentPreRender(instance, n2);\r\n                    if ((process.env.NODE_ENV !== 'production')) {\r\n                        popWarningContext();\r\n                    }\r\n                    return;\r\n                }\r\n                else {\r\n                    // normal update\r\n                    instance.next = n2;\r\n                    // in case the child component is also queued, remove it to avoid\r\n                    // double updating the same child component in the same flush.\r\n                    invalidateJob(instance.update);\r\n                    // instance.update is the reactive effect runner.\r\n                    instance.update();\r\n                }\r\n            }\r\n            else {\r\n                // no update needed. just copy over properties\r\n                n2.component = n1.component;\r\n                n2.el = n1.el;\r\n            }\r\n        }\r\n        if (n2.ref !== null && parentComponent !== null) {\r\n            if ((process.env.NODE_ENV !== 'production') && !(n2.shapeFlag & 4 /* STATEFUL_COMPONENT */)) {\r\n                pushWarningContext(n2);\r\n                warn(`Functional components do not support \"ref\" because they do not ` +\r\n                    `have instances.`);\r\n                popWarningContext();\r\n            }\r\n            setRef(n2.ref, n1 && n1.ref, parentComponent, n2.component.proxy);\r\n        }\r\n    };\r\n    const mountComponent = (initialVNode, container, // only null during hydration\r\n    anchor, parentComponent, parentSuspense, isSVG) => {\r\n        const instance = (initialVNode.component = createComponentInstance(initialVNode, parentComponent));\r\n        if (__HMR__ && instance.type.__hmrId != null) {\r\n            registerHMR(instance);\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            pushWarningContext(initialVNode);\r\n        }\r\n        // inject renderer internals for keepAlive\r\n        if (isKeepAlive(initialVNode)) {\r\n            const sink = instance.sink;\r\n            sink.renderer = internals;\r\n            sink.parentSuspense = parentSuspense;\r\n        }\r\n        // resolve props and slots for setup context\r\n        setupComponent(instance, parentSuspense);\r\n        // setup() is async. This component relies on async logic to be resolved\r\n        // before proceeding\r\n        if ( instance.asyncDep) {\r\n            if (!parentSuspense) {\r\n                if ((process.env.NODE_ENV !== 'production'))\r\n                    warn('async setup() is used without a suspense boundary!');\r\n                return;\r\n            }\r\n            parentSuspense.registerDep(instance, setupRenderEffect);\r\n            // Give it a placeholder if this is not hydration\r\n            const placeholder = (instance.subTree = createVNode(Comment));\r\n            processCommentNode(null, placeholder, container, anchor);\r\n            initialVNode.el = placeholder.el;\r\n            return;\r\n        }\r\n        setupRenderEffect(instance, initialVNode, container, anchor, parentSuspense, isSVG);\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            popWarningContext();\r\n        }\r\n    };\r\n    const setupRenderEffect = (instance, initialVNode, container, anchor, parentSuspense, isSVG) => {\r\n        // create reactive effect for rendering\r\n        instance.update = effect(function componentEffect() {\r\n            if (!instance.isMounted) {\r\n                const subTree = (instance.subTree = renderComponentRoot(instance));\r\n                // beforeMount hook\r\n                if (instance.bm !== null) {\r\n                    invokeHooks(instance.bm);\r\n                }\r\n                if (initialVNode.el && hydrateNode) {\r\n                    // vnode has adopted host node - perform hydration instead of mount.\r\n                    hydrateNode(initialVNode.el, subTree, instance);\r\n                }\r\n                else {\r\n                    patch(null, subTree, container, // container is only null during hydration\r\n                    anchor, instance, parentSuspense, isSVG);\r\n                    initialVNode.el = subTree.el;\r\n                }\r\n                // mounted hook\r\n                if (instance.m !== null) {\r\n                    queuePostRenderEffect(instance.m, parentSuspense);\r\n                }\r\n                // activated hook for keep-alive roots.\r\n                if (instance.a !== null &&\r\n                    instance.vnode.shapeFlag & 256 /* COMPONENT_SHOULD_KEEP_ALIVE */) {\r\n                    queuePostRenderEffect(instance.a, parentSuspense);\r\n                }\r\n                instance.isMounted = true;\r\n            }\r\n            else {\r\n                // updateComponent\r\n                // This is triggered by mutation of component's own state (next: null)\r\n                // OR parent calling processComponent (next: HostVNode)\r\n                const { next } = instance;\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    pushWarningContext(next || instance.vnode);\r\n                }\r\n                if (next !== null) {\r\n                    updateComponentPreRender(instance, next);\r\n                }\r\n                const nextTree = renderComponentRoot(instance);\r\n                const prevTree = instance.subTree;\r\n                instance.subTree = nextTree;\r\n                // beforeUpdate hook\r\n                if (instance.bu !== null) {\r\n                    invokeHooks(instance.bu);\r\n                }\r\n                // reset refs\r\n                // only needed if previous patch had refs\r\n                if (instance.refs !== EMPTY_OBJ) {\r\n                    instance.refs = {};\r\n                }\r\n                patch(prevTree, nextTree, \r\n                // parent may have changed if it's in a portal\r\n                hostParentNode(prevTree.el), \r\n                // anchor may have changed if it's in a fragment\r\n                getNextHostNode(prevTree), instance, parentSuspense, isSVG);\r\n                instance.vnode.el = nextTree.el;\r\n                if (next === null) {\r\n                    // self-triggered update. In case of HOC, update parent component\r\n                    // vnode el. HOC is indicated by parent instance's subTree pointing\r\n                    // to child component's vnode\r\n                    updateHOCHostEl(instance, nextTree.el);\r\n                }\r\n                // updated hook\r\n                if (instance.u !== null) {\r\n                    queuePostRenderEffect(instance.u, parentSuspense);\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    popWarningContext();\r\n                }\r\n            }\r\n        }, (process.env.NODE_ENV !== 'production') ? createDevEffectOptions(instance) : prodEffectOptions);\r\n    };\r\n    const updateComponentPreRender = (instance, nextVNode) => {\r\n        nextVNode.component = instance;\r\n        instance.vnode = nextVNode;\r\n        instance.next = null;\r\n        resolveProps(instance, nextVNode.props, nextVNode.type.props);\r\n        resolveSlots(instance, nextVNode.children);\r\n    };\r\n    const patchChildren = (n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized = false) => {\r\n        const c1 = n1 && n1.children;\r\n        const prevShapeFlag = n1 ? n1.shapeFlag : 0;\r\n        const c2 = n2.children;\r\n        const { patchFlag, shapeFlag } = n2;\r\n        if (patchFlag === -2 /* BAIL */) {\r\n            optimized = false;\r\n        }\r\n        // fast path\r\n        if (patchFlag > 0) {\r\n            if (patchFlag & 128 /* KEYED_FRAGMENT */) {\r\n                // this could be either fully-keyed or mixed (some keyed some not)\r\n                // presence of patchFlag means children are guaranteed to be arrays\r\n                patchKeyedChildren(c1, c2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n                return;\r\n            }\r\n            else if (patchFlag & 256 /* UNKEYED_FRAGMENT */) {\r\n                // unkeyed\r\n                patchUnkeyedChildren(c1, c2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n                return;\r\n            }\r\n        }\r\n        // children has 3 possibilities: text, array or no children.\r\n        if (shapeFlag & 8 /* TEXT_CHILDREN */) {\r\n            // text children fast path\r\n            if (prevShapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                unmountChildren(c1, parentComponent, parentSuspense);\r\n            }\r\n            if (c2 !== c1) {\r\n                hostSetElementText(container, c2);\r\n            }\r\n        }\r\n        else {\r\n            if (prevShapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                // prev children was array\r\n                if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                    // two arrays, cannot assume anything, do full diff\r\n                    patchKeyedChildren(c1, c2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n                }\r\n                else {\r\n                    // no new children, just unmount old\r\n                    unmountChildren(c1, parentComponent, parentSuspense, true);\r\n                }\r\n            }\r\n            else {\r\n                // prev children was text OR null\r\n                // new children is array OR null\r\n                if (prevShapeFlag & 8 /* TEXT_CHILDREN */) {\r\n                    hostSetElementText(container, '');\r\n                }\r\n                // mount new if array\r\n                if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                    mountChildren(c2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    const patchUnkeyedChildren = (c1, c2, container, anchor, parentComponent, parentSuspense, isSVG, optimized) => {\r\n        c1 = c1 || EMPTY_ARR;\r\n        c2 = c2 || EMPTY_ARR;\r\n        const oldLength = c1.length;\r\n        const newLength = c2.length;\r\n        const commonLength = Math.min(oldLength, newLength);\r\n        let i;\r\n        for (i = 0; i < commonLength; i++) {\r\n            const nextChild = (c2[i] = optimized\r\n                ? cloneIfMounted(c2[i])\r\n                : normalizeVNode(c2[i]));\r\n            patch(c1[i], nextChild, container, null, parentComponent, parentSuspense, isSVG, optimized);\r\n        }\r\n        if (oldLength > newLength) {\r\n            // remove old\r\n            unmountChildren(c1, parentComponent, parentSuspense, true, commonLength);\r\n        }\r\n        else {\r\n            // mount new\r\n            mountChildren(c2, container, anchor, parentComponent, parentSuspense, isSVG, optimized, commonLength);\r\n        }\r\n    };\r\n    // can be all-keyed or mixed\r\n    const patchKeyedChildren = (c1, c2, container, parentAnchor, parentComponent, parentSuspense, isSVG, optimized) => {\r\n        let i = 0;\r\n        const l2 = c2.length;\r\n        let e1 = c1.length - 1; // prev ending index\r\n        let e2 = l2 - 1; // next ending index\r\n        // 1. sync from start\r\n        // (a b) c\r\n        // (a b) d e\r\n        while (i <= e1 && i <= e2) {\r\n            const n1 = c1[i];\r\n            const n2 = (c2[i] = optimized\r\n                ? cloneIfMounted(c2[i])\r\n                : normalizeVNode(c2[i]));\r\n            if (isSameVNodeType(n1, n2)) {\r\n                patch(n1, n2, container, parentAnchor, parentComponent, parentSuspense, isSVG, optimized);\r\n            }\r\n            else {\r\n                break;\r\n            }\r\n            i++;\r\n        }\r\n        // 2. sync from end\r\n        // a (b c)\r\n        // d e (b c)\r\n        while (i <= e1 && i <= e2) {\r\n            const n1 = c1[e1];\r\n            const n2 = (c2[e2] = optimized\r\n                ? cloneIfMounted(c2[e2])\r\n                : normalizeVNode(c2[e2]));\r\n            if (isSameVNodeType(n1, n2)) {\r\n                patch(n1, n2, container, parentAnchor, parentComponent, parentSuspense, isSVG, optimized);\r\n            }\r\n            else {\r\n                break;\r\n            }\r\n            e1--;\r\n            e2--;\r\n        }\r\n        // 3. common sequence + mount\r\n        // (a b)\r\n        // (a b) c\r\n        // i = 2, e1 = 1, e2 = 2\r\n        // (a b)\r\n        // c (a b)\r\n        // i = 0, e1 = -1, e2 = 0\r\n        if (i > e1) {\r\n            if (i <= e2) {\r\n                const nextPos = e2 + 1;\r\n                const anchor = nextPos < l2 ? c2[nextPos].el : parentAnchor;\r\n                while (i <= e2) {\r\n                    patch(null, (c2[i] = optimized\r\n                        ? cloneIfMounted(c2[i])\r\n                        : normalizeVNode(c2[i])), container, anchor, parentComponent, parentSuspense, isSVG);\r\n                    i++;\r\n                }\r\n            }\r\n        }\r\n        // 4. common sequence + unmount\r\n        // (a b) c\r\n        // (a b)\r\n        // i = 2, e1 = 2, e2 = 1\r\n        // a (b c)\r\n        // (b c)\r\n        // i = 0, e1 = 0, e2 = -1\r\n        else if (i > e2) {\r\n            while (i <= e1) {\r\n                unmount(c1[i], parentComponent, parentSuspense, true);\r\n                i++;\r\n            }\r\n        }\r\n        // 5. unknown sequence\r\n        // [i ... e1 + 1]: a b [c d e] f g\r\n        // [i ... e2 + 1]: a b [e d c h] f g\r\n        // i = 2, e1 = 4, e2 = 5\r\n        else {\r\n            const s1 = i; // prev starting index\r\n            const s2 = i; // next starting index\r\n            // 5.1 build key:index map for newChildren\r\n            const keyToNewIndexMap = new Map();\r\n            for (i = s2; i <= e2; i++) {\r\n                const nextChild = (c2[i] = optimized\r\n                    ? cloneIfMounted(c2[i])\r\n                    : normalizeVNode(c2[i]));\r\n                if (nextChild.key != null) {\r\n                    if ((process.env.NODE_ENV !== 'production') && keyToNewIndexMap.has(nextChild.key)) {\r\n                        warn(`Duplicate keys found during update:`, JSON.stringify(nextChild.key), `Make sure keys are unique.`);\r\n                    }\r\n                    keyToNewIndexMap.set(nextChild.key, i);\r\n                }\r\n            }\r\n            // 5.2 loop through old children left to be patched and try to patch\r\n            // matching nodes & remove nodes that are no longer present\r\n            let j;\r\n            let patched = 0;\r\n            const toBePatched = e2 - s2 + 1;\r\n            let moved = false;\r\n            // used to track whether any node has moved\r\n            let maxNewIndexSoFar = 0;\r\n            // works as Map<newIndex, oldIndex>\r\n            // Note that oldIndex is offset by +1\r\n            // and oldIndex = 0 is a special value indicating the new node has\r\n            // no corresponding old node.\r\n            // used for determining longest stable subsequence\r\n            const newIndexToOldIndexMap = new Array(toBePatched);\r\n            for (i = 0; i < toBePatched; i++)\r\n                newIndexToOldIndexMap[i] = 0;\r\n            for (i = s1; i <= e1; i++) {\r\n                const prevChild = c1[i];\r\n                if (patched >= toBePatched) {\r\n                    // all new children have been patched so this can only be a removal\r\n                    unmount(prevChild, parentComponent, parentSuspense, true);\r\n                    continue;\r\n                }\r\n                let newIndex;\r\n                if (prevChild.key != null) {\r\n                    newIndex = keyToNewIndexMap.get(prevChild.key);\r\n                }\r\n                else {\r\n                    // key-less node, try to locate a key-less node of the same type\r\n                    for (j = s2; j <= e2; j++) {\r\n                        if (newIndexToOldIndexMap[j - s2] === 0 &&\r\n                            isSameVNodeType(prevChild, c2[j])) {\r\n                            newIndex = j;\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                if (newIndex === undefined) {\r\n                    unmount(prevChild, parentComponent, parentSuspense, true);\r\n                }\r\n                else {\r\n                    newIndexToOldIndexMap[newIndex - s2] = i + 1;\r\n                    if (newIndex >= maxNewIndexSoFar) {\r\n                        maxNewIndexSoFar = newIndex;\r\n                    }\r\n                    else {\r\n                        moved = true;\r\n                    }\r\n                    patch(prevChild, c2[newIndex], container, null, parentComponent, parentSuspense, isSVG, optimized);\r\n                    patched++;\r\n                }\r\n            }\r\n            // 5.3 move and mount\r\n            // generate longest stable subsequence only when nodes have moved\r\n            const increasingNewIndexSequence = moved\r\n                ? getSequence(newIndexToOldIndexMap)\r\n                : EMPTY_ARR;\r\n            j = increasingNewIndexSequence.length - 1;\r\n            // looping backwards so that we can use last patched node as anchor\r\n            for (i = toBePatched - 1; i >= 0; i--) {\r\n                const nextIndex = s2 + i;\r\n                const nextChild = c2[nextIndex];\r\n                const anchor = nextIndex + 1 < l2\r\n                    ? c2[nextIndex + 1].el\r\n                    : parentAnchor;\r\n                if (newIndexToOldIndexMap[i] === 0) {\r\n                    // mount new\r\n                    patch(null, nextChild, container, anchor, parentComponent, parentSuspense, isSVG);\r\n                }\r\n                else if (moved) {\r\n                    // move if:\r\n                    // There is no stable subsequence (e.g. a reverse)\r\n                    // OR current node is not among the stable sequence\r\n                    if (j < 0 || i !== increasingNewIndexSequence[j]) {\r\n                        move(nextChild, container, anchor, 2 /* REORDER */);\r\n                    }\r\n                    else {\r\n                        j--;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n    const move = (vnode, container, anchor, type, parentSuspense = null) => {\r\n        if (vnode.shapeFlag & 6 /* COMPONENT */) {\r\n            move(vnode.component.subTree, container, anchor, type);\r\n            return;\r\n        }\r\n        if ( vnode.shapeFlag & 128 /* SUSPENSE */) {\r\n            vnode.suspense.move(container, anchor, type);\r\n            return;\r\n        }\r\n        if (vnode.type === Fragment) {\r\n            hostInsert(vnode.el, container, anchor);\r\n            const children = vnode.children;\r\n            for (let i = 0; i < children.length; i++) {\r\n                move(children[i], container, anchor, type);\r\n            }\r\n            hostInsert(vnode.anchor, container, anchor);\r\n        }\r\n        else {\r\n            // Plain element\r\n            const { el, transition, shapeFlag } = vnode;\r\n            const needTransition = type !== 2 /* REORDER */ &&\r\n                shapeFlag & 1 /* ELEMENT */ &&\r\n                transition != null;\r\n            if (needTransition) {\r\n                if (type === 0 /* ENTER */) {\r\n                    transition.beforeEnter(el);\r\n                    hostInsert(el, container, anchor);\r\n                    queuePostRenderEffect(() => transition.enter(el), parentSuspense);\r\n                }\r\n                else {\r\n                    const { leave, delayLeave, afterLeave } = transition;\r\n                    const remove = () => hostInsert(el, container, anchor);\r\n                    const performLeave = () => {\r\n                        leave(el, () => {\r\n                            remove();\r\n                            afterLeave && afterLeave();\r\n                        });\r\n                    };\r\n                    if (delayLeave) {\r\n                        delayLeave(el, remove, performLeave);\r\n                    }\r\n                    else {\r\n                        performLeave();\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                hostInsert(el, container, anchor);\r\n            }\r\n        }\r\n    };\r\n    const unmount = (vnode, parentComponent, parentSuspense, doRemove = false) => {\r\n        const { props, ref, children, dynamicChildren, shapeFlag } = vnode;\r\n        // unset ref\r\n        if (ref !== null && parentComponent !== null) {\r\n            setRef(ref, null, parentComponent, null);\r\n        }\r\n        if (shapeFlag & 6 /* COMPONENT */) {\r\n            if (shapeFlag & 256 /* COMPONENT_SHOULD_KEEP_ALIVE */) {\r\n                parentComponent.sink.deactivate(vnode);\r\n            }\r\n            else {\r\n                unmountComponent(vnode.component, parentSuspense, doRemove);\r\n            }\r\n            return;\r\n        }\r\n        if ( shapeFlag & 128 /* SUSPENSE */) {\r\n            vnode.suspense.unmount(parentSuspense, doRemove);\r\n            return;\r\n        }\r\n        if (props != null && props.onVnodeBeforeUnmount != null) {\r\n            invokeDirectiveHook(props.onVnodeBeforeUnmount, parentComponent, vnode);\r\n        }\r\n        if (dynamicChildren != null) {\r\n            // fast path for block nodes: only need to unmount dynamic children.\r\n            unmountChildren(dynamicChildren, parentComponent, parentSuspense);\r\n        }\r\n        else if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n            unmountChildren(children, parentComponent, parentSuspense);\r\n        }\r\n        if (doRemove) {\r\n            remove(vnode);\r\n        }\r\n        if (props != null && props.onVnodeUnmounted != null) {\r\n            queuePostRenderEffect(() => {\r\n                invokeDirectiveHook(props.onVnodeUnmounted, parentComponent, vnode);\r\n            }, parentSuspense);\r\n        }\r\n    };\r\n    const remove = (vnode) => {\r\n        const { type, el, anchor, transition } = vnode;\r\n        if (type === Fragment) {\r\n            removeFragment(el, anchor);\r\n            return;\r\n        }\r\n        const performRemove = () => {\r\n            hostRemove(el);\r\n            if (transition != null &&\r\n                !transition.persisted &&\r\n                transition.afterLeave) {\r\n                transition.afterLeave();\r\n            }\r\n        };\r\n        if (vnode.shapeFlag & 1 /* ELEMENT */ &&\r\n            transition != null &&\r\n            !transition.persisted) {\r\n            const { leave, delayLeave } = transition;\r\n            const performLeave = () => leave(el, performRemove);\r\n            if (delayLeave) {\r\n                delayLeave(vnode.el, performRemove, performLeave);\r\n            }\r\n            else {\r\n                performLeave();\r\n            }\r\n        }\r\n        else {\r\n            performRemove();\r\n        }\r\n    };\r\n    const removeFragment = (cur, end) => {\r\n        // For fragments, directly remove all contained DOM nodes.\r\n        // (fragment child nodes cannot have transition)\r\n        let next;\r\n        while (cur !== end) {\r\n            next = hostNextSibling(cur);\r\n            hostRemove(cur);\r\n            cur = next;\r\n        }\r\n        hostRemove(end);\r\n    };\r\n    const unmountComponent = (instance, parentSuspense, doRemove) => {\r\n        if (__HMR__ && instance.type.__hmrId != null) {\r\n            unregisterHMR(instance);\r\n        }\r\n        const { bum, effects, update, subTree, um, da, isDeactivated } = instance;\r\n        // beforeUnmount hook\r\n        if (bum !== null) {\r\n            invokeHooks(bum);\r\n        }\r\n        if (effects !== null) {\r\n            for (let i = 0; i < effects.length; i++) {\r\n                stop(effects[i]);\r\n            }\r\n        }\r\n        // update may be null if a component is unmounted before its async\r\n        // setup has resolved.\r\n        if (update !== null) {\r\n            stop(update);\r\n            unmount(subTree, instance, parentSuspense, doRemove);\r\n        }\r\n        // unmounted hook\r\n        if (um !== null) {\r\n            queuePostRenderEffect(um, parentSuspense);\r\n        }\r\n        // deactivated hook\r\n        if (da !== null &&\r\n            !isDeactivated &&\r\n            instance.vnode.shapeFlag & 256 /* COMPONENT_SHOULD_KEEP_ALIVE */) {\r\n            queuePostRenderEffect(da, parentSuspense);\r\n        }\r\n        queuePostFlushCb(() => {\r\n            instance.isUnmounted = true;\r\n        });\r\n        // A component with async dep inside a pending suspense is unmounted before\r\n        // its async dep resolves. This should remove the dep from the suspense, and\r\n        // cause the suspense to resolve immediately if that was the last dep.\r\n        if (\r\n            parentSuspense !== null &&\r\n            !parentSuspense.isResolved &&\r\n            !parentSuspense.isUnmounted &&\r\n            instance.asyncDep !== null &&\r\n            !instance.asyncResolved) {\r\n            parentSuspense.deps--;\r\n            if (parentSuspense.deps === 0) {\r\n                parentSuspense.resolve();\r\n            }\r\n        }\r\n    };\r\n    const unmountChildren = (children, parentComponent, parentSuspense, doRemove = false, start = 0) => {\r\n        for (let i = start; i < children.length; i++) {\r\n            unmount(children[i], parentComponent, parentSuspense, doRemove);\r\n        }\r\n    };\r\n    const getNextHostNode = vnode => {\r\n        if (vnode.shapeFlag & 6 /* COMPONENT */) {\r\n            return getNextHostNode(vnode.component.subTree);\r\n        }\r\n        if ( vnode.shapeFlag & 128 /* SUSPENSE */) {\r\n            return vnode.suspense.next();\r\n        }\r\n        return hostNextSibling((vnode.anchor || vnode.el));\r\n    };\r\n    const setRef = (ref, oldRef, parent, value) => {\r\n        const refs = parent.refs === EMPTY_OBJ ? (parent.refs = {}) : parent.refs;\r\n        const renderContext = toRaw(parent.renderContext);\r\n        // unset old ref\r\n        if (oldRef !== null && oldRef !== ref) {\r\n            if (isString(oldRef)) {\r\n                refs[oldRef] = null;\r\n                const oldSetupRef = renderContext[oldRef];\r\n                if (isRef(oldSetupRef)) {\r\n                    oldSetupRef.value = null;\r\n                }\r\n            }\r\n            else if (isRef(oldRef)) {\r\n                oldRef.value = null;\r\n            }\r\n        }\r\n        if (isString(ref)) {\r\n            const setupRef = renderContext[ref];\r\n            if (isRef(setupRef)) {\r\n                setupRef.value = value;\r\n            }\r\n            refs[ref] = value;\r\n        }\r\n        else if (isRef(ref)) {\r\n            ref.value = value;\r\n        }\r\n        else if (isFunction(ref)) {\r\n            callWithErrorHandling(ref, parent, 11 /* FUNCTION_REF */, [value, refs]);\r\n        }\r\n        else if ((process.env.NODE_ENV !== 'production')) {\r\n            warn('Invalid template ref type:', value, `(${typeof value})`);\r\n        }\r\n    };\r\n    const render = (vnode, container) => {\r\n        if (vnode == null) {\r\n            if (container._vnode) {\r\n                unmount(container._vnode, null, null, true);\r\n            }\r\n        }\r\n        else {\r\n            patch(container._vnode || null, vnode, container);\r\n        }\r\n        flushPostFlushCbs();\r\n        container._vnode = vnode;\r\n    };\r\n    const internals = {\r\n        p: patch,\r\n        um: unmount,\r\n        m: move,\r\n        mt: mountComponent,\r\n        mc: mountChildren,\r\n        pc: patchChildren,\r\n        pbc: patchBlockChildren,\r\n        n: getNextHostNode,\r\n        c: processCommentNode,\r\n        o: options\r\n    };\r\n    let hydrate;\r\n    let hydrateNode;\r\n    if (createHydrationFns) {\r\n        [hydrate, hydrateNode] = createHydrationFns(internals);\r\n    }\r\n    return {\r\n        render,\r\n        hydrate,\r\n        createApp: createAppAPI(render, hydrate)\r\n    };\r\n}\r\n// https://en.wikipedia.org/wiki/Longest_increasing_subsequence\r\nfunction getSequence(arr) {\r\n    const p = arr.slice();\r\n    const result = [0];\r\n    let i, j, u, v, c;\r\n    const len = arr.length;\r\n    for (i = 0; i < len; i++) {\r\n        const arrI = arr[i];\r\n        if (arrI !== 0) {\r\n            j = result[result.length - 1];\r\n            if (arr[j] < arrI) {\r\n                p[i] = j;\r\n                result.push(i);\r\n                continue;\r\n            }\r\n            u = 0;\r\n            v = result.length - 1;\r\n            while (u < v) {\r\n                c = ((u + v) / 2) | 0;\r\n                if (arr[result[c]] < arrI) {\r\n                    u = c + 1;\r\n                }\r\n                else {\r\n                    v = c;\r\n                }\r\n            }\r\n            if (arrI < arr[result[u]]) {\r\n                if (u > 0) {\r\n                    p[i] = result[u - 1];\r\n                }\r\n                result[u] = i;\r\n            }\r\n        }\r\n    }\r\n    u = result.length;\r\n    v = result[u - 1];\r\n    while (u-- > 0) {\r\n        result[u] = v;\r\n        v = p[v];\r\n    }\r\n    return result;\r\n}\n\nfunction useTransitionState() {\r\n    const state = {\r\n        isMounted: false,\r\n        isLeaving: false,\r\n        isUnmounting: false,\r\n        leavingVNodes: new Map()\r\n    };\r\n    onMounted(() => {\r\n        state.isMounted = true;\r\n    });\r\n    onBeforeUnmount(() => {\r\n        state.isUnmounting = true;\r\n    });\r\n    return state;\r\n}\r\nconst BaseTransitionImpl = {\r\n    name: `BaseTransition`,\r\n    setup(props, { slots }) {\r\n        const instance = getCurrentInstance();\r\n        const state = useTransitionState();\r\n        return () => {\r\n            const children = slots.default && slots.default();\r\n            if (!children || !children.length) {\r\n                return;\r\n            }\r\n            // warn multiple elements\r\n            if ((process.env.NODE_ENV !== 'production') && children.length > 1) {\r\n                warn('<transition> can only be used on a single element or component. Use ' +\r\n                    '<transition-group> for lists.');\r\n            }\r\n            // there's no need to track reactivity for these props so use the raw\r\n            // props for a bit better perf\r\n            const rawProps = toRaw(props);\r\n            const { mode } = rawProps;\r\n            // check mode\r\n            if ((process.env.NODE_ENV !== 'production') && mode && !['in-out', 'out-in', 'default'].includes(mode)) {\r\n                warn(`invalid <transition> mode: ${mode}`);\r\n            }\r\n            // at this point children has a guaranteed length of 1.\r\n            const child = children[0];\r\n            if (state.isLeaving) {\r\n                return emptyPlaceholder(child);\r\n            }\r\n            // in the case of <transition><keep-alive/></transition>, we need to\r\n            // compare the type of the kept-alive children.\r\n            const innerChild = getKeepAliveChild(child);\r\n            if (!innerChild) {\r\n                return emptyPlaceholder(child);\r\n            }\r\n            const enterHooks = (innerChild.transition = resolveTransitionHooks(innerChild, rawProps, state, instance));\r\n            const oldChild = instance.subTree;\r\n            const oldInnerChild = oldChild && getKeepAliveChild(oldChild);\r\n            // handle mode\r\n            if (oldInnerChild &&\r\n                oldInnerChild.type !== Comment &&\r\n                !isSameVNodeType(innerChild, oldInnerChild)) {\r\n                const prevHooks = oldInnerChild.transition;\r\n                const leavingHooks = resolveTransitionHooks(oldInnerChild, rawProps, state, instance);\r\n                // update old tree's hooks in case of dynamic transition\r\n                setTransitionHooks(oldInnerChild, leavingHooks);\r\n                // switching between different views\r\n                if (mode === 'out-in') {\r\n                    state.isLeaving = true;\r\n                    // return placeholder node and queue update when leave finishes\r\n                    leavingHooks.afterLeave = () => {\r\n                        state.isLeaving = false;\r\n                        instance.update();\r\n                    };\r\n                    return emptyPlaceholder(child);\r\n                }\r\n                else if (mode === 'in-out') {\r\n                    delete prevHooks.delayedLeave;\r\n                    leavingHooks.delayLeave = (el, earlyRemove, delayedLeave) => {\r\n                        const leavingVNodesCache = getLeavingNodesForType(state, oldInnerChild);\r\n                        leavingVNodesCache[String(oldInnerChild.key)] = oldInnerChild;\r\n                        // early removal callback\r\n                        el._leaveCb = () => {\r\n                            earlyRemove();\r\n                            el._leaveCb = undefined;\r\n                            delete enterHooks.delayedLeave;\r\n                        };\r\n                        enterHooks.delayedLeave = delayedLeave;\r\n                    };\r\n                }\r\n            }\r\n            return child;\r\n        };\r\n    }\r\n};\r\nif ((process.env.NODE_ENV !== 'production')) {\r\n    BaseTransitionImpl.props = {\r\n        mode: String,\r\n        appear: Boolean,\r\n        persisted: Boolean,\r\n        // enter\r\n        onBeforeEnter: Function,\r\n        onEnter: Function,\r\n        onAfterEnter: Function,\r\n        onEnterCancelled: Function,\r\n        // leave\r\n        onBeforeLeave: Function,\r\n        onLeave: Function,\r\n        onAfterLeave: Function,\r\n        onLeaveCancelled: Function\r\n    };\r\n}\r\n// export the public type for h/tsx inference\r\n// also to avoid inline import() in generated d.ts files\r\nconst BaseTransition = BaseTransitionImpl;\r\nfunction getLeavingNodesForType(state, vnode) {\r\n    const { leavingVNodes } = state;\r\n    let leavingVNodesCache = leavingVNodes.get(vnode.type);\r\n    if (!leavingVNodesCache) {\r\n        leavingVNodesCache = Object.create(null);\r\n        leavingVNodes.set(vnode.type, leavingVNodesCache);\r\n    }\r\n    return leavingVNodesCache;\r\n}\r\n// The transition hooks are attached to the vnode as vnode.transition\r\n// and will be called at appropriate timing in the renderer.\r\nfunction resolveTransitionHooks(vnode, { appear, persisted = false, onBeforeEnter, onEnter, onAfterEnter, onEnterCancelled, onBeforeLeave, onLeave, onAfterLeave, onLeaveCancelled }, state, instance) {\r\n    const key = String(vnode.key);\r\n    const leavingVNodesCache = getLeavingNodesForType(state, vnode);\r\n    const callHook = (hook, args) => {\r\n        hook &&\r\n            callWithAsyncErrorHandling(hook, instance, 8 /* TRANSITION_HOOK */, args);\r\n    };\r\n    const hooks = {\r\n        persisted,\r\n        beforeEnter(el) {\r\n            if (!appear && !state.isMounted) {\r\n                return;\r\n            }\r\n            // for same element (v-show)\r\n            if (el._leaveCb) {\r\n                el._leaveCb(true /* cancelled */);\r\n            }\r\n            // for toggled element with same key (v-if)\r\n            const leavingVNode = leavingVNodesCache[key];\r\n            if (leavingVNode &&\r\n                isSameVNodeType(vnode, leavingVNode) &&\r\n                leavingVNode.el._leaveCb) {\r\n                // force early removal (not cancelled)\r\n                leavingVNode.el._leaveCb();\r\n            }\r\n            callHook(onBeforeEnter, [el]);\r\n        },\r\n        enter(el) {\r\n            if (!appear && !state.isMounted) {\r\n                return;\r\n            }\r\n            let called = false;\r\n            const afterEnter = (el._enterCb = (cancelled) => {\r\n                if (called)\r\n                    return;\r\n                called = true;\r\n                if (cancelled) {\r\n                    callHook(onEnterCancelled, [el]);\r\n                }\r\n                else {\r\n                    callHook(onAfterEnter, [el]);\r\n                }\r\n                if (hooks.delayedLeave) {\r\n                    hooks.delayedLeave();\r\n                }\r\n                el._enterCb = undefined;\r\n            });\r\n            if (onEnter) {\r\n                onEnter(el, afterEnter);\r\n            }\r\n            else {\r\n                afterEnter();\r\n            }\r\n        },\r\n        leave(el, remove) {\r\n            const key = String(vnode.key);\r\n            if (el._enterCb) {\r\n                el._enterCb(true /* cancelled */);\r\n            }\r\n            if (state.isUnmounting) {\r\n                return remove();\r\n            }\r\n            callHook(onBeforeLeave, [el]);\r\n            let called = false;\r\n            const afterLeave = (el._leaveCb = (cancelled) => {\r\n                if (called)\r\n                    return;\r\n                called = true;\r\n                remove();\r\n                if (cancelled) {\r\n                    callHook(onLeaveCancelled, [el]);\r\n                }\r\n                else {\r\n                    callHook(onAfterLeave, [el]);\r\n                }\r\n                el._leaveCb = undefined;\r\n                if (leavingVNodesCache[key] === vnode) {\r\n                    delete leavingVNodesCache[key];\r\n                }\r\n            });\r\n            leavingVNodesCache[key] = vnode;\r\n            if (onLeave) {\r\n                onLeave(el, afterLeave);\r\n            }\r\n            else {\r\n                afterLeave();\r\n            }\r\n        }\r\n    };\r\n    return hooks;\r\n}\r\n// the placeholder really only handles one special case: KeepAlive\r\n// in the case of a KeepAlive in a leave phase we need to return a KeepAlive\r\n// placeholder with empty content to avoid the KeepAlive instance from being\r\n// unmounted.\r\nfunction emptyPlaceholder(vnode) {\r\n    if (isKeepAlive(vnode)) {\r\n        vnode = cloneVNode(vnode);\r\n        vnode.children = null;\r\n        return vnode;\r\n    }\r\n}\r\nfunction getKeepAliveChild(vnode) {\r\n    return isKeepAlive(vnode)\r\n        ? vnode.children\r\n            ? vnode.children[0]\r\n            : undefined\r\n        : vnode;\r\n}\r\nfunction setTransitionHooks(vnode, hooks) {\r\n    if (vnode.shapeFlag & 6 /* COMPONENT */ && vnode.component) {\r\n        setTransitionHooks(vnode.component.subTree, hooks);\r\n    }\r\n    else {\r\n        vnode.transition = hooks;\r\n    }\r\n}\n\nconst isKeepAlive = (vnode) => vnode.type.__isKeepAlive;\r\nconst KeepAliveImpl = {\r\n    name: `KeepAlive`,\r\n    // Marker for special handling inside the renderer. We are not using a ===\r\n    // check directly on KeepAlive in the renderer, because importing it directly\r\n    // would prevent it from being tree-shaken.\r\n    __isKeepAlive: true,\r\n    props: {\r\n        include: [String, RegExp, Array],\r\n        exclude: [String, RegExp, Array],\r\n        max: [String, Number]\r\n    },\r\n    setup(props, { slots }) {\r\n        const cache = new Map();\r\n        const keys = new Set();\r\n        let current = null;\r\n        const instance = getCurrentInstance();\r\n        // KeepAlive communicates with the instantiated renderer via the \"sink\"\r\n        // where the renderer passes in platform-specific functions, and the\r\n        // KeepAlive instance exposes activate/deactivate implementations.\r\n        // The whole point of this is to avoid importing KeepAlive directly in the\r\n        // renderer to facilitate tree-shaking.\r\n        const sink = instance.sink;\r\n        const { renderer: { m: move, um: _unmount, o: { createElement } }, parentSuspense } = sink;\r\n        const storageContainer = createElement('div');\r\n        sink.activate = (vnode, container, anchor) => {\r\n            move(vnode, container, anchor, 0 /* ENTER */, parentSuspense);\r\n            queuePostRenderEffect(() => {\r\n                const component = vnode.component;\r\n                component.isDeactivated = false;\r\n                if (component.a !== null) {\r\n                    invokeHooks(component.a);\r\n                }\r\n            }, parentSuspense);\r\n        };\r\n        sink.deactivate = (vnode) => {\r\n            move(vnode, storageContainer, null, 1 /* LEAVE */, parentSuspense);\r\n            queuePostRenderEffect(() => {\r\n                const component = vnode.component;\r\n                if (component.da !== null) {\r\n                    invokeHooks(component.da);\r\n                }\r\n                component.isDeactivated = true;\r\n            }, parentSuspense);\r\n        };\r\n        function unmount(vnode) {\r\n            // reset the shapeFlag so it can be properly unmounted\r\n            vnode.shapeFlag = 4 /* STATEFUL_COMPONENT */;\r\n            _unmount(vnode, instance, parentSuspense);\r\n        }\r\n        function pruneCache(filter) {\r\n            cache.forEach((vnode, key) => {\r\n                const name = getName(vnode.type);\r\n                if (name && (!filter || !filter(name))) {\r\n                    pruneCacheEntry(key);\r\n                }\r\n            });\r\n        }\r\n        function pruneCacheEntry(key) {\r\n            const cached = cache.get(key);\r\n            if (!current || cached.type !== current.type) {\r\n                unmount(cached);\r\n            }\r\n            else if (current) {\r\n                // current active instance should no longer be kept-alive.\r\n                // we can't unmount it now but it might be later, so reset its flag now.\r\n                current.shapeFlag = 4 /* STATEFUL_COMPONENT */;\r\n            }\r\n            cache.delete(key);\r\n            keys.delete(key);\r\n        }\r\n        watch(() => [props.include, props.exclude], ([include, exclude]) => {\r\n            include && pruneCache(name => matches(include, name));\r\n            exclude && pruneCache(name => matches(exclude, name));\r\n        });\r\n        onBeforeUnmount(() => {\r\n            cache.forEach(unmount);\r\n        });\r\n        return () => {\r\n            if (!slots.default) {\r\n                return null;\r\n            }\r\n            const children = slots.default();\r\n            let vnode = children[0];\r\n            if (children.length > 1) {\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn(`KeepAlive should contain exactly one component child.`);\r\n                }\r\n                current = null;\r\n                return children;\r\n            }\r\n            else if (!isVNode(vnode) ||\r\n                !(vnode.shapeFlag & 4 /* STATEFUL_COMPONENT */)) {\r\n                current = null;\r\n                return vnode;\r\n            }\r\n            const comp = vnode.type;\r\n            const name = getName(comp);\r\n            const { include, exclude, max } = props;\r\n            if ((include && (!name || !matches(include, name))) ||\r\n                (exclude && name && matches(exclude, name))) {\r\n                return vnode;\r\n            }\r\n            const key = vnode.key == null ? comp : vnode.key;\r\n            const cached = cache.get(key);\r\n            // clone vnode if it's reused because we are going to mutate it\r\n            if (vnode.el) {\r\n                vnode = cloneVNode(vnode);\r\n            }\r\n            cache.set(key, vnode);\r\n            if (cached) {\r\n                // copy over mounted state\r\n                vnode.el = cached.el;\r\n                vnode.anchor = cached.anchor;\r\n                vnode.component = cached.component;\r\n                if (vnode.transition) {\r\n                    // recursively update transition hooks on subTree\r\n                    setTransitionHooks(vnode, vnode.transition);\r\n                }\r\n                // avoid vnode being mounted as fresh\r\n                vnode.shapeFlag |= 512 /* COMPONENT_KEPT_ALIVE */;\r\n                // make this key the freshest\r\n                keys.delete(key);\r\n                keys.add(key);\r\n            }\r\n            else {\r\n                keys.add(key);\r\n                // prune oldest entry\r\n                if (max && keys.size > parseInt(max, 10)) {\r\n                    pruneCacheEntry(Array.from(keys)[0]);\r\n                }\r\n            }\r\n            // avoid vnode being unmounted\r\n            vnode.shapeFlag |= 256 /* COMPONENT_SHOULD_KEEP_ALIVE */;\r\n            current = vnode;\r\n            return vnode;\r\n        };\r\n    }\r\n};\r\n// export the public type for h/tsx inference\r\n// also to avoid inline import() in generated d.ts files\r\nconst KeepAlive = KeepAliveImpl;\r\nfunction getName(comp) {\r\n    return comp.displayName || comp.name;\r\n}\r\nfunction matches(pattern, name) {\r\n    if (isArray(pattern)) {\r\n        return pattern.some((p) => matches(p, name));\r\n    }\r\n    else if (isString(pattern)) {\r\n        return pattern.split(',').indexOf(name) > -1;\r\n    }\r\n    else if (pattern.test) {\r\n        return pattern.test(name);\r\n    }\r\n    /* istanbul ignore next */\r\n    return false;\r\n}\r\nfunction onActivated(hook, target) {\r\n    registerKeepAliveHook(hook, \"a\" /* ACTIVATED */, target);\r\n}\r\nfunction onDeactivated(hook, target) {\r\n    registerKeepAliveHook(hook, \"da\" /* DEACTIVATED */, target);\r\n}\r\nfunction registerKeepAliveHook(hook, type, target = currentInstance) {\r\n    // cache the deactivate branch check wrapper for injected hooks so the same\r\n    // hook can be properly deduped by the scheduler. \"__wdc\" stands for \"with\r\n    // deactivation check\".\r\n    const wrappedHook = hook.__wdc ||\r\n        (hook.__wdc = () => {\r\n            // only fire the hook if the target instance is NOT in a deactivated branch.\r\n            let current = target;\r\n            while (current) {\r\n                if (current.isDeactivated) {\r\n                    return;\r\n                }\r\n                current = current.parent;\r\n            }\r\n            hook();\r\n        });\r\n    injectHook(type, wrappedHook, target);\r\n    // In addition to registering it on the target instance, we walk up the parent\r\n    // chain and register it on all ancestor instances that are keep-alive roots.\r\n    // This avoids the need to walk the entire component tree when invoking these\r\n    // hooks, and more importantly, avoids the need to track child components in\r\n    // arrays.\r\n    if (target) {\r\n        let current = target.parent;\r\n        while (current && current.parent) {\r\n            if (isKeepAlive(current.parent.vnode)) {\r\n                injectToKeepAliveRoot(wrappedHook, type, target, current);\r\n            }\r\n            current = current.parent;\r\n        }\r\n    }\r\n}\r\nfunction injectToKeepAliveRoot(hook, type, target, keepAliveRoot) {\r\n    injectHook(type, hook, keepAliveRoot, true /* prepend */);\r\n    onUnmounted(() => {\r\n        remove(keepAliveRoot[type], hook);\r\n    }, target);\r\n}\n\nfunction injectHook(type, hook, target = currentInstance, prepend = false) {\r\n    if (target) {\r\n        const hooks = target[type] || (target[type] = []);\r\n        // cache the error handling wrapper for injected hooks so the same hook\r\n        // can be properly deduped by the scheduler. \"__weh\" stands for \"with error\r\n        // handling\".\r\n        const wrappedHook = hook.__weh ||\r\n            (hook.__weh = (...args) => {\r\n                if (target.isUnmounted) {\r\n                    return;\r\n                }\r\n                // disable tracking inside all lifecycle hooks\r\n                // since they can potentially be called inside effects.\r\n                pauseTracking();\r\n                // Set currentInstance during hook invocation.\r\n                // This assumes the hook does not synchronously trigger other hooks, which\r\n                // can only be false when the user does something really funky.\r\n                setCurrentInstance(target);\r\n                const res = callWithAsyncErrorHandling(hook, target, type, args);\r\n                setCurrentInstance(null);\r\n                resetTracking();\r\n                return res;\r\n            });\r\n        if (prepend) {\r\n            hooks.unshift(wrappedHook);\r\n        }\r\n        else {\r\n            hooks.push(wrappedHook);\r\n        }\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        const apiName = `on${capitalize(ErrorTypeStrings[type].replace(/ hook$/, ''))}`;\r\n        warn(`${apiName} is called when there is no active component instance to be ` +\r\n            `associated with. ` +\r\n            `Lifecycle injection APIs can only be used during execution of setup().` +\r\n            ( ` If you are using async setup(), make sure to register lifecycle ` +\r\n                    `hooks before the first await statement.`\r\n                ));\r\n    }\r\n}\r\nconst createHook = (lifecycle) => (hook, target = currentInstance) => \r\n// post-create lifecycle registrations are noops during SSR\r\n!isInSSRComponentSetup && injectHook(lifecycle, hook, target);\r\nconst onBeforeMount = createHook(\"bm\" /* BEFORE_MOUNT */);\r\nconst onMounted = createHook(\"m\" /* MOUNTED */);\r\nconst onBeforeUpdate = createHook(\"bu\" /* BEFORE_UPDATE */);\r\nconst onUpdated = createHook(\"u\" /* UPDATED */);\r\nconst onBeforeUnmount = createHook(\"bum\" /* BEFORE_UNMOUNT */);\r\nconst onUnmounted = createHook(\"um\" /* UNMOUNTED */);\r\nconst onRenderTriggered = createHook(\"rtg\" /* RENDER_TRIGGERED */);\r\nconst onRenderTracked = createHook(\"rtc\" /* RENDER_TRACKED */);\r\nconst onErrorCaptured = (hook, target = currentInstance) => {\r\n    injectHook(\"ec\" /* ERROR_CAPTURED */, hook, target);\r\n};\n\nconst invoke = (fn) => fn();\r\n// Simple effect.\r\nfunction watchEffect(effect, options) {\r\n    return doWatch(effect, null, options);\r\n}\r\n// initial value for watchers to trigger on undefined initial values\r\nconst INITIAL_WATCHER_VALUE = {};\r\n// implementation\r\nfunction watch(effectOrSource, cbOrOptions, options) {\r\n    if (isFunction(cbOrOptions)) {\r\n        // watch(source, cb)\r\n        return doWatch(effectOrSource, cbOrOptions, options);\r\n    }\r\n    else {\r\n        // TODO remove this in the next release\r\n        (process.env.NODE_ENV !== 'production') &&\r\n            warn(`\\`watch(fn, options?)\\` signature has been moved to a separate API. ` +\r\n                `Use \\`watchEffect(fn, options?)\\` instead. \\`watch\\` will only ` +\r\n                `support \\`watch(source, cb, options?) signature in the next release.`);\r\n        // watch(effect)\r\n        return doWatch(effectOrSource, null, cbOrOptions);\r\n    }\r\n}\r\nfunction doWatch(source, cb, { immediate, deep, flush, onTrack, onTrigger } = EMPTY_OBJ) {\r\n    if ((process.env.NODE_ENV !== 'production') && !cb) {\r\n        if (immediate !== undefined) {\r\n            warn(`watch() \"immediate\" option is only respected when using the ` +\r\n                `watch(source, callback) signature.`);\r\n        }\r\n        if (deep !== undefined) {\r\n            warn(`watch() \"deep\" option is only respected when using the ` +\r\n                `watch(source, callback) signature.`);\r\n        }\r\n    }\r\n    const instance = currentInstance;\r\n    const suspense = currentSuspense;\r\n    let getter;\r\n    if (isArray(source)) {\r\n        getter = () => source.map(s => isRef(s)\r\n            ? s.value\r\n            : callWithErrorHandling(s, instance, 2 /* WATCH_GETTER */));\r\n    }\r\n    else if (isRef(source)) {\r\n        getter = () => source.value;\r\n    }\r\n    else if (cb) {\r\n        // getter with cb\r\n        getter = () => callWithErrorHandling(source, instance, 2 /* WATCH_GETTER */);\r\n    }\r\n    else {\r\n        // no cb -> simple effect\r\n        getter = () => {\r\n            if (instance && instance.isUnmounted) {\r\n                return;\r\n            }\r\n            if (cleanup) {\r\n                cleanup();\r\n            }\r\n            return callWithErrorHandling(source, instance, 3 /* WATCH_CALLBACK */, [registerCleanup]);\r\n        };\r\n    }\r\n    if (deep) {\r\n        const baseGetter = getter;\r\n        getter = () => traverse(baseGetter());\r\n    }\r\n    let cleanup;\r\n    const registerCleanup = (fn) => {\r\n        cleanup = runner.options.onStop = () => {\r\n            callWithErrorHandling(fn, instance, 4 /* WATCH_CLEANUP */);\r\n        };\r\n    };\r\n    let oldValue = isArray(source) ? [] : INITIAL_WATCHER_VALUE;\r\n    const applyCb = cb\r\n        ? () => {\r\n            if (instance && instance.isUnmounted) {\r\n                return;\r\n            }\r\n            const newValue = runner();\r\n            if (deep || hasChanged(newValue, oldValue)) {\r\n                // cleanup before running cb again\r\n                if (cleanup) {\r\n                    cleanup();\r\n                }\r\n                callWithAsyncErrorHandling(cb, instance, 3 /* WATCH_CALLBACK */, [\r\n                    newValue,\r\n                    // pass undefined as the old value when it's changed for the first time\r\n                    oldValue === INITIAL_WATCHER_VALUE ? undefined : oldValue,\r\n                    registerCleanup\r\n                ]);\r\n                oldValue = newValue;\r\n            }\r\n        }\r\n        : void 0;\r\n    let scheduler;\r\n    if (flush === 'sync') {\r\n        scheduler = invoke;\r\n    }\r\n    else if (flush === 'pre') {\r\n        scheduler = job => {\r\n            if (!instance || instance.vnode.el != null) {\r\n                queueJob(job);\r\n            }\r\n            else {\r\n                // with 'pre' option, the first call must happen before\r\n                // the component is mounted so it is called synchronously.\r\n                job();\r\n            }\r\n        };\r\n    }\r\n    else {\r\n        scheduler = job => {\r\n            queuePostRenderEffect(job, suspense);\r\n        };\r\n    }\r\n    const runner = effect(getter, {\r\n        lazy: true,\r\n        // so it runs before component update effects in pre flush mode\r\n        computed: true,\r\n        onTrack,\r\n        onTrigger,\r\n        scheduler: applyCb ? () => scheduler(applyCb) : scheduler\r\n    });\r\n    recordInstanceBoundEffect(runner);\r\n    // initial run\r\n    if (applyCb) {\r\n        if (immediate) {\r\n            applyCb();\r\n        }\r\n        else {\r\n            oldValue = runner();\r\n        }\r\n    }\r\n    else {\r\n        runner();\r\n    }\r\n    return () => {\r\n        stop(runner);\r\n        if (instance) {\r\n            remove(instance.effects, runner);\r\n        }\r\n    };\r\n}\r\n// this.$watch\r\nfunction instanceWatch(source, cb, options) {\r\n    const ctx = this.proxy;\r\n    const getter = isString(source) ? () => ctx[source] : source.bind(ctx);\r\n    const stop = watch(getter, cb.bind(ctx), options);\r\n    onBeforeUnmount(stop, this);\r\n    return stop;\r\n}\r\nfunction traverse(value, seen = new Set()) {\r\n    if (!isObject(value) || seen.has(value)) {\r\n        return;\r\n    }\r\n    seen.add(value);\r\n    if (isArray(value)) {\r\n        for (let i = 0; i < value.length; i++) {\r\n            traverse(value[i], seen);\r\n        }\r\n    }\r\n    else if (value instanceof Map) {\r\n        value.forEach((v, key) => {\r\n            // to register mutation dep for existing keys\r\n            traverse(value.get(key), seen);\r\n        });\r\n    }\r\n    else if (value instanceof Set) {\r\n        value.forEach(v => {\r\n            traverse(v, seen);\r\n        });\r\n    }\r\n    else {\r\n        for (const key in value) {\r\n            traverse(value[key], seen);\r\n        }\r\n    }\r\n    return value;\r\n}\n\nconst publicPropertiesMap = {\r\n    $: i => i,\r\n    $el: i => i.vnode.el,\r\n    $data: i => i.data,\r\n    $props: i => i.propsProxy,\r\n    $attrs: i => i.attrs,\r\n    $slots: i => i.slots,\r\n    $refs: i => i.refs,\r\n    $parent: i => i.parent,\r\n    $root: i => i.root,\r\n    $emit: i => i.emit,\r\n    $options: i => i.type,\r\n    $forceUpdate: i => () => queueJob(i.update),\r\n    $nextTick: () => nextTick,\r\n    $watch:  i => instanceWatch.bind(i) \r\n};\r\nconst PublicInstanceProxyHandlers = {\r\n    get(target, key) {\r\n        const { renderContext, data, props, propsProxy, accessCache, type, sink } = target;\r\n        // data / props / renderContext\r\n        // This getter gets called for every property access on the render context\r\n        // during render and is a major hotspot. The most expensive part of this\r\n        // is the multiple hasOwn() calls. It's much faster to do a simple property\r\n        // access on a plain object, so we use an accessCache object (with null\r\n        // prototype) to memoize what access type a key corresponds to.\r\n        if (key[0] !== '$') {\r\n            const n = accessCache[key];\r\n            if (n !== undefined) {\r\n                switch (n) {\r\n                    case 0 /* DATA */:\r\n                        return data[key];\r\n                    case 1 /* CONTEXT */:\r\n                        return unref(renderContext[key]);\r\n                    case 2 /* PROPS */:\r\n                        return propsProxy[key];\r\n                    // default: just fallthrough\r\n                }\r\n            }\r\n            else if (data !== EMPTY_OBJ && hasOwn(data, key)) {\r\n                accessCache[key] = 0 /* DATA */;\r\n                return data[key];\r\n            }\r\n            else if (hasOwn(renderContext, key)) {\r\n                accessCache[key] = 1 /* CONTEXT */;\r\n                return unref(renderContext[key]);\r\n            }\r\n            else if (type.props != null) {\r\n                // only cache other properties when instance has declared (this stable)\r\n                // props\r\n                if (hasOwn(props, key)) {\r\n                    accessCache[key] = 2 /* PROPS */;\r\n                    // return the value from propsProxy for ref unwrapping and readonly\r\n                    return propsProxy[key];\r\n                }\r\n                else {\r\n                    accessCache[key] = 3 /* OTHER */;\r\n                }\r\n            }\r\n        }\r\n        // public $xxx properties & user-attached properties (sink)\r\n        const publicGetter = publicPropertiesMap[key];\r\n        let cssModule;\r\n        if (publicGetter != null) {\r\n            if ((process.env.NODE_ENV !== 'production') && key === '$attrs') {\r\n                markAttrsAccessed();\r\n            }\r\n            return publicGetter(target);\r\n        }\r\n        else if (\r\n            (cssModule = type.__cssModules) != null &&\r\n            (cssModule = cssModule[key])) {\r\n            return cssModule;\r\n        }\r\n        else if (hasOwn(sink, key)) {\r\n            return sink[key];\r\n        }\r\n        else if ((process.env.NODE_ENV !== 'production') && currentRenderingInstance != null) {\r\n            warn(`Property ${JSON.stringify(key)} was accessed during render ` +\r\n                `but is not defined on instance.`);\r\n        }\r\n    },\r\n    has(target, key) {\r\n        const { data, accessCache, renderContext, type, sink } = target;\r\n        return (accessCache[key] !== undefined ||\r\n            (data !== EMPTY_OBJ && hasOwn(data, key)) ||\r\n            hasOwn(renderContext, key) ||\r\n            (type.props != null && hasOwn(type.props, key)) ||\r\n            hasOwn(publicPropertiesMap, key) ||\r\n            hasOwn(sink, key));\r\n    },\r\n    set(target, key, value) {\r\n        const { data, renderContext } = target;\r\n        if (data !== EMPTY_OBJ && hasOwn(data, key)) {\r\n            data[key] = value;\r\n        }\r\n        else if (hasOwn(renderContext, key)) {\r\n            // context is already reactive (user returned reactive object from setup())\r\n            // just set directly\r\n            if (isReactive(renderContext)) {\r\n                renderContext[key] = value;\r\n            }\r\n            else {\r\n                // handle potential ref set\r\n                const oldValue = renderContext[key];\r\n                if (isRef(oldValue) && !isRef(value)) {\r\n                    oldValue.value = value;\r\n                }\r\n                else {\r\n                    renderContext[key] = value;\r\n                }\r\n            }\r\n        }\r\n        else if (key[0] === '$' && key.slice(1) in target) {\r\n            (process.env.NODE_ENV !== 'production') &&\r\n                warn(`Attempting to mutate public property \"${key}\". ` +\r\n                    `Properties starting with $ are reserved and readonly.`, target);\r\n            return false;\r\n        }\r\n        else if (key in target.props) {\r\n            (process.env.NODE_ENV !== 'production') &&\r\n                warn(`Attempting to mutate prop \"${key}\". Props are readonly.`, target);\r\n            return false;\r\n        }\r\n        else {\r\n            target.sink[key] = value;\r\n        }\r\n        return true;\r\n    }\r\n};\n\nfunction provide(key, value) {\r\n    if (!currentInstance) {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            warn(`provide() can only be used inside setup().`);\r\n        }\r\n    }\r\n    else {\r\n        let provides = currentInstance.provides;\r\n        // by default an instance inherits its parent's provides object\r\n        // but when it needs to provide values of its own, it creates its\r\n        // own provides object using parent provides object as prototype.\r\n        // this way in `inject` we can simply look up injections from direct\r\n        // parent and let the prototype chain do the work.\r\n        const parentProvides = currentInstance.parent && currentInstance.parent.provides;\r\n        if (parentProvides === provides) {\r\n            provides = currentInstance.provides = Object.create(parentProvides);\r\n        }\r\n        // TS doesn't allow symbol as index type\r\n        provides[key] = value;\r\n    }\r\n}\r\nfunction inject(key, defaultValue) {\r\n    // fallback to `currentRenderingInstance` so that this can be called in\r\n    // a functional component\r\n    const instance = currentInstance || currentRenderingInstance;\r\n    if (instance) {\r\n        const provides = instance.provides;\r\n        if (key in provides) {\r\n            // TS doesn't allow symbol as index type\r\n            return provides[key];\r\n        }\r\n        else if (defaultValue !== undefined) {\r\n            return defaultValue;\r\n        }\r\n        else if ((process.env.NODE_ENV !== 'production')) {\r\n            warn(`injection \"${String(key)}\" not found.`);\r\n        }\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        warn(`inject() can only be used inside setup() or functional components.`);\r\n    }\r\n}\n\nfunction createDuplicateChecker() {\r\n    const cache = Object.create(null);\r\n    return (type, key) => {\r\n        if (cache[key]) {\r\n            warn(`${type} property \"${key}\" is already defined in ${cache[key]}.`);\r\n        }\r\n        else {\r\n            cache[key] = type;\r\n        }\r\n    };\r\n}\r\nfunction applyOptions(instance, options, asMixin = false) {\r\n    const ctx = instance.proxy;\r\n    const { \r\n    // composition\r\n    mixins, extends: extendsOptions, \r\n    // state\r\n    props: propsOptions, data: dataOptions, computed: computedOptions, methods, watch: watchOptions, provide: provideOptions, inject: injectOptions, \r\n    // assets\r\n    components, directives, \r\n    // lifecycle\r\n    beforeMount, mounted, beforeUpdate, updated, activated, deactivated, beforeUnmount, unmounted, renderTracked, renderTriggered, errorCaptured } = options;\r\n    const renderContext = instance.renderContext === EMPTY_OBJ\r\n        ? (instance.renderContext = {})\r\n        : instance.renderContext;\r\n    const globalMixins = instance.appContext.mixins;\r\n    // call it only during dev\r\n    const checkDuplicateProperties = (process.env.NODE_ENV !== 'production') ? createDuplicateChecker() : null;\r\n    // applyOptions is called non-as-mixin once per instance\r\n    if (!asMixin) {\r\n        callSyncHook('beforeCreate', options, ctx, globalMixins);\r\n        // global mixins are applied first\r\n        applyMixins(instance, globalMixins);\r\n    }\r\n    // extending a base component...\r\n    if (extendsOptions) {\r\n        applyOptions(instance, extendsOptions, true);\r\n    }\r\n    // local mixins\r\n    if (mixins) {\r\n        applyMixins(instance, mixins);\r\n    }\r\n    if ((process.env.NODE_ENV !== 'production') && propsOptions) {\r\n        for (const key in propsOptions) {\r\n            checkDuplicateProperties(\"Props\" /* PROPS */, key);\r\n        }\r\n    }\r\n    // state options\r\n    if (dataOptions) {\r\n        const data = isFunction(dataOptions) ? dataOptions.call(ctx) : dataOptions;\r\n        if (!isObject(data)) {\r\n            (process.env.NODE_ENV !== 'production') && warn(`data() should return an object.`);\r\n        }\r\n        else if (instance.data === EMPTY_OBJ) {\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                for (const key in data) {\r\n                    checkDuplicateProperties(\"Data\" /* DATA */, key);\r\n                }\r\n            }\r\n            instance.data = reactive(data);\r\n        }\r\n        else {\r\n            // existing data: this is a mixin or extends.\r\n            extend(instance.data, data);\r\n        }\r\n    }\r\n    if (computedOptions) {\r\n        for (const key in computedOptions) {\r\n            const opt = computedOptions[key];\r\n            (process.env.NODE_ENV !== 'production') && checkDuplicateProperties(\"Computed\" /* COMPUTED */, key);\r\n            if (isFunction(opt)) {\r\n                renderContext[key] = computed(opt.bind(ctx, ctx));\r\n            }\r\n            else {\r\n                const { get, set } = opt;\r\n                if (isFunction(get)) {\r\n                    renderContext[key] = computed({\r\n                        get: get.bind(ctx, ctx),\r\n                        set: isFunction(set)\r\n                            ? set.bind(ctx)\r\n                            : (process.env.NODE_ENV !== 'production')\r\n                                ? () => {\r\n                                    warn(`Computed property \"${key}\" was assigned to but it has no setter.`);\r\n                                }\r\n                                : NOOP\r\n                    });\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn(`Computed property \"${key}\" has no getter.`);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    if (methods) {\r\n        for (const key in methods) {\r\n            const methodHandler = methods[key];\r\n            if (isFunction(methodHandler)) {\r\n                (process.env.NODE_ENV !== 'production') && checkDuplicateProperties(\"Methods\" /* METHODS */, key);\r\n                renderContext[key] = methodHandler.bind(ctx);\r\n            }\r\n            else if ((process.env.NODE_ENV !== 'production')) {\r\n                warn(`Method \"${key}\" has type \"${typeof methodHandler}\" in the component definition. ` +\r\n                    `Did you reference the function correctly?`);\r\n            }\r\n        }\r\n    }\r\n    if (watchOptions) {\r\n        for (const key in watchOptions) {\r\n            createWatcher(watchOptions[key], renderContext, ctx, key);\r\n        }\r\n    }\r\n    if (provideOptions) {\r\n        const provides = isFunction(provideOptions)\r\n            ? provideOptions.call(ctx)\r\n            : provideOptions;\r\n        for (const key in provides) {\r\n            provide(key, provides[key]);\r\n        }\r\n    }\r\n    if (injectOptions) {\r\n        if (isArray(injectOptions)) {\r\n            for (let i = 0; i < injectOptions.length; i++) {\r\n                const key = injectOptions[i];\r\n                (process.env.NODE_ENV !== 'production') && checkDuplicateProperties(\"Inject\" /* INJECT */, key);\r\n                renderContext[key] = inject(key);\r\n            }\r\n        }\r\n        else {\r\n            for (const key in injectOptions) {\r\n                (process.env.NODE_ENV !== 'production') && checkDuplicateProperties(\"Inject\" /* INJECT */, key);\r\n                const opt = injectOptions[key];\r\n                if (isObject(opt)) {\r\n                    renderContext[key] = inject(opt.from, opt.default);\r\n                }\r\n                else {\r\n                    renderContext[key] = inject(opt);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    // asset options\r\n    if (components) {\r\n        extend(instance.components, components);\r\n    }\r\n    if (directives) {\r\n        extend(instance.directives, directives);\r\n    }\r\n    // lifecycle options\r\n    if (!asMixin) {\r\n        callSyncHook('created', options, ctx, globalMixins);\r\n    }\r\n    if (beforeMount) {\r\n        onBeforeMount(beforeMount.bind(ctx));\r\n    }\r\n    if (mounted) {\r\n        onMounted(mounted.bind(ctx));\r\n    }\r\n    if (beforeUpdate) {\r\n        onBeforeUpdate(beforeUpdate.bind(ctx));\r\n    }\r\n    if (updated) {\r\n        onUpdated(updated.bind(ctx));\r\n    }\r\n    if (activated) {\r\n        onActivated(activated.bind(ctx));\r\n    }\r\n    if (deactivated) {\r\n        onDeactivated(deactivated.bind(ctx));\r\n    }\r\n    if (errorCaptured) {\r\n        onErrorCaptured(errorCaptured.bind(ctx));\r\n    }\r\n    if (renderTracked) {\r\n        onRenderTracked(renderTracked.bind(ctx));\r\n    }\r\n    if (renderTriggered) {\r\n        onRenderTriggered(renderTriggered.bind(ctx));\r\n    }\r\n    if (beforeUnmount) {\r\n        onBeforeUnmount(beforeUnmount.bind(ctx));\r\n    }\r\n    if (unmounted) {\r\n        onUnmounted(unmounted.bind(ctx));\r\n    }\r\n}\r\nfunction callSyncHook(name, options, ctx, globalMixins) {\r\n    callHookFromMixins(name, globalMixins, ctx);\r\n    const baseHook = options.extends && options.extends[name];\r\n    if (baseHook) {\r\n        baseHook.call(ctx);\r\n    }\r\n    const mixins = options.mixins;\r\n    if (mixins) {\r\n        callHookFromMixins(name, mixins, ctx);\r\n    }\r\n    const selfHook = options[name];\r\n    if (selfHook) {\r\n        selfHook.call(ctx);\r\n    }\r\n}\r\nfunction callHookFromMixins(name, mixins, ctx) {\r\n    for (let i = 0; i < mixins.length; i++) {\r\n        const fn = mixins[i][name];\r\n        if (fn) {\r\n            fn.call(ctx);\r\n        }\r\n    }\r\n}\r\nfunction applyMixins(instance, mixins) {\r\n    for (let i = 0; i < mixins.length; i++) {\r\n        applyOptions(instance, mixins[i], true);\r\n    }\r\n}\r\nfunction createWatcher(raw, renderContext, ctx, key) {\r\n    const getter = () => ctx[key];\r\n    if (isString(raw)) {\r\n        const handler = renderContext[raw];\r\n        if (isFunction(handler)) {\r\n            watch(getter, handler);\r\n        }\r\n        else if ((process.env.NODE_ENV !== 'production')) {\r\n            warn(`Invalid watch handler specified by key \"${raw}\"`, handler);\r\n        }\r\n    }\r\n    else if (isFunction(raw)) {\r\n        watch(getter, raw.bind(ctx));\r\n    }\r\n    else if (isObject(raw)) {\r\n        if (isArray(raw)) {\r\n            raw.forEach(r => createWatcher(r, renderContext, ctx, key));\r\n        }\r\n        else {\r\n            watch(getter, raw.handler.bind(ctx), raw);\r\n        }\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        warn(`Invalid watch option: \"${key}\"`);\r\n    }\r\n}\n\nconst emptyAppContext = createAppContext();\r\nfunction createComponentInstance(vnode, parent) {\r\n    // inherit parent app context - or - if root, adopt from root vnode\r\n    const appContext = (parent ? parent.appContext : vnode.appContext) || emptyAppContext;\r\n    const instance = {\r\n        vnode,\r\n        parent,\r\n        appContext,\r\n        type: vnode.type,\r\n        root: null,\r\n        next: null,\r\n        subTree: null,\r\n        update: null,\r\n        render: null,\r\n        proxy: null,\r\n        withProxy: null,\r\n        propsProxy: null,\r\n        setupContext: null,\r\n        effects: null,\r\n        provides: parent ? parent.provides : Object.create(appContext.provides),\r\n        accessCache: null,\r\n        renderCache: [],\r\n        // setup context properties\r\n        renderContext: EMPTY_OBJ,\r\n        data: EMPTY_OBJ,\r\n        props: EMPTY_OBJ,\r\n        attrs: EMPTY_OBJ,\r\n        vnodeHooks: EMPTY_OBJ,\r\n        slots: EMPTY_OBJ,\r\n        refs: EMPTY_OBJ,\r\n        // per-instance asset storage (mutable during options resolution)\r\n        components: Object.create(appContext.components),\r\n        directives: Object.create(appContext.directives),\r\n        // async dependency management\r\n        asyncDep: null,\r\n        asyncResult: null,\r\n        asyncResolved: false,\r\n        // user namespace for storing whatever the user assigns to `this`\r\n        // can also be used as a wildcard storage for ad-hoc injections internally\r\n        sink: {},\r\n        // lifecycle hooks\r\n        // not using enums here because it results in computed properties\r\n        isMounted: false,\r\n        isUnmounted: false,\r\n        isDeactivated: false,\r\n        bc: null,\r\n        c: null,\r\n        bm: null,\r\n        m: null,\r\n        bu: null,\r\n        u: null,\r\n        um: null,\r\n        bum: null,\r\n        da: null,\r\n        a: null,\r\n        rtg: null,\r\n        rtc: null,\r\n        ec: null,\r\n        emit: (event, ...args) => {\r\n            const props = instance.vnode.props || EMPTY_OBJ;\r\n            let handler = props[`on${event}`] || props[`on${capitalize(event)}`];\r\n            if (!handler && event.indexOf('update:') === 0) {\r\n                event = hyphenate(event);\r\n                handler = props[`on${event}`] || props[`on${capitalize(event)}`];\r\n            }\r\n            if (handler) {\r\n                const res = callWithAsyncErrorHandling(handler, instance, 6 /* COMPONENT_EVENT_HANDLER */, args);\r\n                return isArray(res) ? res : [res];\r\n            }\r\n            else {\r\n                return [];\r\n            }\r\n        }\r\n    };\r\n    instance.root = parent ? parent.root : instance;\r\n    return instance;\r\n}\r\nlet currentInstance = null;\r\nlet currentSuspense = null;\r\nconst getCurrentInstance = () => currentInstance || currentRenderingInstance;\r\nconst setCurrentInstance = (instance) => {\r\n    currentInstance = instance;\r\n};\r\nconst isBuiltInTag = /*#__PURE__*/ makeMap('slot,component');\r\nfunction validateComponentName(name, config) {\r\n    const appIsNativeTag = config.isNativeTag || NO;\r\n    if (isBuiltInTag(name) || appIsNativeTag(name)) {\r\n        warn('Do not use built-in or reserved HTML elements as component id: ' + name);\r\n    }\r\n}\r\nlet isInSSRComponentSetup = false;\r\nfunction setupComponent(instance, parentSuspense, isSSR = false) {\r\n    isInSSRComponentSetup = isSSR;\r\n    const propsOptions = instance.type.props;\r\n    const { props, children, shapeFlag } = instance.vnode;\r\n    resolveProps(instance, props, propsOptions);\r\n    resolveSlots(instance, children);\r\n    // setup stateful logic\r\n    let setupResult;\r\n    if (shapeFlag & 4 /* STATEFUL_COMPONENT */) {\r\n        setupResult = setupStatefulComponent(instance, parentSuspense);\r\n    }\r\n    isInSSRComponentSetup = false;\r\n    return setupResult;\r\n}\r\nfunction setupStatefulComponent(instance, parentSuspense) {\r\n    const Component = instance.type;\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        if (Component.name) {\r\n            validateComponentName(Component.name, instance.appContext.config);\r\n        }\r\n        if (Component.components) {\r\n            const names = Object.keys(Component.components);\r\n            for (let i = 0; i < names.length; i++) {\r\n                validateComponentName(names[i], instance.appContext.config);\r\n            }\r\n        }\r\n        if (Component.directives) {\r\n            const names = Object.keys(Component.directives);\r\n            for (let i = 0; i < names.length; i++) {\r\n                validateDirectiveName(names[i]);\r\n            }\r\n        }\r\n    }\r\n    // 0. create render proxy property access cache\r\n    instance.accessCache = {};\r\n    // 1. create public instance / render proxy\r\n    instance.proxy = new Proxy(instance, PublicInstanceProxyHandlers);\r\n    // 2. create props proxy\r\n    // the propsProxy is a reactive AND readonly proxy to the actual props.\r\n    // it will be updated in resolveProps() on updates before render\r\n    const propsProxy = (instance.propsProxy = isInSSRComponentSetup\r\n        ? instance.props\r\n        : shallowReadonly(instance.props));\r\n    // 3. call setup()\r\n    const { setup } = Component;\r\n    if (setup) {\r\n        const setupContext = (instance.setupContext =\r\n            setup.length > 1 ? createSetupContext(instance) : null);\r\n        currentInstance = instance;\r\n        currentSuspense = parentSuspense;\r\n        pauseTracking();\r\n        const setupResult = callWithErrorHandling(setup, instance, 0 /* SETUP_FUNCTION */, [propsProxy, setupContext]);\r\n        resetTracking();\r\n        currentInstance = null;\r\n        currentSuspense = null;\r\n        if (isPromise(setupResult)) {\r\n            if (isInSSRComponentSetup) {\r\n                // return the promise so server-renderer can wait on it\r\n                return setupResult.then(resolvedResult => {\r\n                    handleSetupResult(instance, resolvedResult, parentSuspense);\r\n                });\r\n            }\r\n            else {\r\n                // async setup returned Promise.\r\n                // bail here and wait for re-entry.\r\n                instance.asyncDep = setupResult;\r\n            }\r\n        }\r\n        else {\r\n            handleSetupResult(instance, setupResult, parentSuspense);\r\n        }\r\n    }\r\n    else {\r\n        finishComponentSetup(instance, parentSuspense);\r\n    }\r\n}\r\nfunction handleSetupResult(instance, setupResult, parentSuspense) {\r\n    if (isFunction(setupResult)) {\r\n        // setup returned an inline render function\r\n        instance.render = setupResult;\r\n    }\r\n    else if (isObject(setupResult)) {\r\n        if ((process.env.NODE_ENV !== 'production') && isVNode(setupResult)) {\r\n            warn(`setup() should not return VNodes directly - ` +\r\n                `return a render function instead.`);\r\n        }\r\n        // setup returned bindings.\r\n        // assuming a render function compiled from template is present.\r\n        instance.renderContext = setupResult;\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production') && setupResult !== undefined) {\r\n        warn(`setup() should return an object. Received: ${setupResult === null ? 'null' : typeof setupResult}`);\r\n    }\r\n    finishComponentSetup(instance, parentSuspense);\r\n}\r\n// exported method uses any to avoid d.ts relying on the compiler types.\r\nfunction registerRuntimeCompiler(_compile) {\r\n}\r\nfunction finishComponentSetup(instance, parentSuspense) {\r\n    const Component = instance.type;\r\n    if (!instance.render) {\r\n        if ((process.env.NODE_ENV !== 'production') && !Component.render && !Component.ssrRender) {\r\n            /* istanbul ignore if */\r\n            if ( Component.template) {\r\n                warn(`Component provides template but the build of Vue you are running ` +\r\n                    `does not support runtime template compilation. Either use the ` +\r\n                    `full build or pre-compile the template using Vue CLI.`);\r\n            }\r\n            else {\r\n                warn(`Component is missing${ ``} render function.`);\r\n            }\r\n        }\r\n        instance.render = (Component.render || NOOP);\r\n    }\r\n    // support for 2.x options\r\n    {\r\n        currentInstance = instance;\r\n        currentSuspense = parentSuspense;\r\n        applyOptions(instance, Component);\r\n        currentInstance = null;\r\n        currentSuspense = null;\r\n    }\r\n    if (instance.renderContext === EMPTY_OBJ) {\r\n        instance.renderContext = {};\r\n    }\r\n}\r\n// used to identify a setup context proxy\r\nconst SetupProxySymbol = Symbol();\r\nconst SetupProxyHandlers = {};\r\n['attrs', 'slots'].forEach((type) => {\r\n    SetupProxyHandlers[type] = {\r\n        get: (instance, key) => {\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                markAttrsAccessed();\r\n            }\r\n            return instance[type][key];\r\n        },\r\n        has: (instance, key) => key === SetupProxySymbol || key in instance[type],\r\n        ownKeys: instance => Reflect.ownKeys(instance[type]),\r\n        // this is necessary for ownKeys to work properly\r\n        getOwnPropertyDescriptor: (instance, key) => Reflect.getOwnPropertyDescriptor(instance[type], key),\r\n        set: () => false,\r\n        deleteProperty: () => false\r\n    };\r\n});\r\nfunction createSetupContext(instance) {\r\n    const context = {\r\n        // attrs & slots are non-reactive, but they need to always expose\r\n        // the latest values (instance.xxx may get replaced during updates) so we\r\n        // need to expose them through a proxy\r\n        attrs: new Proxy(instance, SetupProxyHandlers.attrs),\r\n        slots: new Proxy(instance, SetupProxyHandlers.slots),\r\n        get emit() {\r\n            return instance.emit;\r\n        }\r\n    };\r\n    return (process.env.NODE_ENV !== 'production') ? Object.freeze(context) : context;\r\n}\r\n// record effects created during a component's setup() so that they can be\r\n// stopped when the component unmounts\r\nfunction recordInstanceBoundEffect(effect) {\r\n    if (currentInstance) {\r\n        (currentInstance.effects || (currentInstance.effects = [])).push(effect);\r\n    }\r\n}\n\nfunction computed(getterOrOptions) {\r\n    const c = computed$1(getterOrOptions);\r\n    recordInstanceBoundEffect(c.effect);\r\n    return c;\r\n}\n\n// implementation, close to no-op\r\nfunction defineComponent(options) {\r\n    return isFunction(options) ? { setup: options } : options;\r\n}\n\n// Actual implementation\r\nfunction h(type, propsOrChildren, children) {\r\n    if (arguments.length === 2) {\r\n        if (isObject(propsOrChildren) && !isArray(propsOrChildren)) {\r\n            // single vnode without props\r\n            if (isVNode(propsOrChildren)) {\r\n                return createVNode(type, null, [propsOrChildren]);\r\n            }\r\n            // props without children\r\n            return createVNode(type, propsOrChildren);\r\n        }\r\n        else {\r\n            // omit props\r\n            return createVNode(type, null, propsOrChildren);\r\n        }\r\n    }\r\n    else {\r\n        if (isVNode(children)) {\r\n            children = [children];\r\n        }\r\n        return createVNode(type, propsOrChildren, children);\r\n    }\r\n}\n\nconst useCSSModule = (name = '$style') => {\r\n    {\r\n        const instance = getCurrentInstance();\r\n        if (!instance) {\r\n            (process.env.NODE_ENV !== 'production') && warn(`useCSSModule must be called inside setup()`);\r\n            return EMPTY_OBJ;\r\n        }\r\n        const modules = instance.type.__cssModules;\r\n        if (!modules) {\r\n            (process.env.NODE_ENV !== 'production') && warn(`Current instance does not have CSS modules injected.`);\r\n            return EMPTY_OBJ;\r\n        }\r\n        const mod = modules[name];\r\n        if (!mod) {\r\n            (process.env.NODE_ENV !== 'production') &&\r\n                warn(`Current instance does not have CSS module named \"${name}\".`);\r\n            return EMPTY_OBJ;\r\n        }\r\n        return mod;\r\n    }\r\n};\n\nconst ssrContextKey = Symbol((process.env.NODE_ENV !== 'production') ? `ssrContext` : ``);\r\nconst useSSRContext = () => {\r\n    {\r\n        const ctx = inject(ssrContextKey);\r\n        if (!ctx) {\r\n            warn(`Server rendering context not provided. Make sure to only call ` +\r\n                `useSsrContext() conditionally in the server build.`);\r\n        }\r\n        return ctx;\r\n    }\r\n};\n\nconst COMPONENTS = 'components';\r\nconst DIRECTIVES = 'directives';\r\nfunction resolveComponent(name) {\r\n    return resolveAsset(COMPONENTS, name);\r\n}\r\nfunction resolveDynamicComponent(component, \r\n// Dynamic component resolution has to be called inline due to potential\r\n// access to scope variables. When called inside slots it will be inside\r\n// a different component's render cycle, so the owner instance must be passed\r\n// in explicitly.\r\ninstance) {\r\n    if (!component)\r\n        return;\r\n    if (isString(component)) {\r\n        return resolveAsset(COMPONENTS, component, instance);\r\n    }\r\n    else if (isFunction(component) || isObject(component)) {\r\n        return component;\r\n    }\r\n}\r\nfunction resolveDirective(name) {\r\n    return resolveAsset(DIRECTIVES, name);\r\n}\r\nfunction resolveAsset(type, name, instance = currentRenderingInstance ||\r\n    currentInstance) {\r\n    if (instance) {\r\n        let camelized, capitalized;\r\n        const registry = instance[type];\r\n        let res = registry[name] ||\r\n            registry[(camelized = camelize(name))] ||\r\n            registry[(capitalized = capitalize(camelized))];\r\n        if (!res && type === COMPONENTS) {\r\n            const self = instance.type;\r\n            const selfName = self.displayName || self.name;\r\n            if (selfName &&\r\n                (selfName === name ||\r\n                    selfName === camelized ||\r\n                    selfName === capitalized)) {\r\n                res = self;\r\n            }\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production') && !res) {\r\n            warn(`Failed to resolve ${type.slice(0, -1)}: ${name}`);\r\n        }\r\n        return res;\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        warn(`resolve${capitalize(type.slice(0, -1))} ` +\r\n            `can only be used in render() or setup().`);\r\n    }\r\n}\n\nfunction renderList(source, renderItem) {\r\n    let ret;\r\n    if (isArray(source) || isString(source)) {\r\n        ret = new Array(source.length);\r\n        for (let i = 0, l = source.length; i < l; i++) {\r\n            ret[i] = renderItem(source[i], i);\r\n        }\r\n    }\r\n    else if (typeof source === 'number') {\r\n        ret = new Array(source);\r\n        for (let i = 0; i < source; i++) {\r\n            ret[i] = renderItem(i + 1, i);\r\n        }\r\n    }\r\n    else if (isObject(source)) {\r\n        if (source[Symbol.iterator]) {\r\n            ret = Array.from(source, renderItem);\r\n        }\r\n        else {\r\n            const keys = Object.keys(source);\r\n            ret = new Array(keys.length);\r\n            for (let i = 0, l = keys.length; i < l; i++) {\r\n                const key = keys[i];\r\n                ret[i] = renderItem(source[key], key, i);\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        ret = [];\r\n    }\r\n    return ret;\r\n}\n\n// For prefixing keys in v-on=\"obj\" with \"on\"\r\nfunction toHandlers(obj) {\r\n    const ret = {};\r\n    if ((process.env.NODE_ENV !== 'production') && !isObject(obj)) {\r\n        warn(`v-on with no argument expects an object value.`);\r\n        return ret;\r\n    }\r\n    for (const key in obj) {\r\n        ret[`on${key}`] = obj[key];\r\n    }\r\n    return ret;\r\n}\n\nfunction renderSlot(slots, name, props = {}, \r\n// this is not a user-facing function, so the fallback is always generated by\r\n// the compiler and guaranteed to be an array\r\nfallback) {\r\n    let slot = slots[name];\r\n    if ((process.env.NODE_ENV !== 'production') && slot.length > 1) {\r\n        warn(`SSR-optimized slot function detected in a non-SSR-optimized render ` +\r\n            `function. You need to mark this component with $dynamic-slots in the ` +\r\n            `parent template.`);\r\n        slot = () => [];\r\n    }\r\n    return (openBlock(),\r\n        createBlock(Fragment, { key: props.key }, slot ? slot(props) : fallback || [], slots._ ? 0 : -2 /* BAIL */));\r\n}\n\nfunction createSlots(slots, dynamicSlots) {\r\n    for (let i = 0; i < dynamicSlots.length; i++) {\r\n        const slot = dynamicSlots[i];\r\n        // array of dynamic slot generated by <template v-for=\"...\" #[...]>\r\n        if (isArray(slot)) {\r\n            for (let j = 0; j < slot.length; j++) {\r\n                slots[slot[j].name] = slot[j].fn;\r\n            }\r\n        }\r\n        else {\r\n            // conditional single slot generated by <template v-if=\"...\" #foo>\r\n            slots[slot.name] = slot.fn;\r\n        }\r\n    }\r\n    return slots;\r\n}\n\n// Public API ------------------------------------------------------------------\r\nconst version = \"3.0.0-alpha.6\";\r\nconst toDisplayString$1 = toDisplayString;\r\nconst camelize$1 = camelize;\r\nconst ssrUtils = ( null);\n\nexport { BaseTransition, Comment, Fragment, KeepAlive, Portal, Suspense, Text, callWithAsyncErrorHandling, callWithErrorHandling, camelize$1 as camelize, cloneVNode, computed, createBlock, createCommentVNode, createHydrationRenderer, createRenderer, createSlots, createStaticVNode, createTextVNode, createVNode, defineComponent, getCurrentInstance, h, handleError, inject, mergeProps, nextTick, onActivated, onBeforeMount, onBeforeUnmount, onBeforeUpdate, onDeactivated, onErrorCaptured, onMounted, onRenderTracked, onRenderTriggered, onUnmounted, onUpdated, openBlock, popScopeId, provide, pushScopeId, registerRuntimeCompiler, renderList, renderSlot, resolveComponent, resolveDirective, resolveDynamicComponent, resolveTransitionHooks, setBlockTracking, setTransitionHooks, ssrContextKey, ssrUtils, toDisplayString$1 as toDisplayString, toHandlers, useCSSModule, useSSRContext, useTransitionState, version, warn, watch, watchEffect, withDirectives, withScopeId };\n","import { camelize, callWithAsyncErrorHandling, warn, h, BaseTransition, getCurrentInstance, useTransitionState, onUpdated, toRaw, Fragment, setTransitionHooks, resolveTransitionHooks, createVNode, createRenderer, createHydrationRenderer } from '@vue/runtime-core';\nexport * from '@vue/runtime-core';\n\nconst doc = (typeof document !== 'undefined' ? document : null);\r\nconst svgNS = 'http://www.w3.org/2000/svg';\r\nlet tempContainer;\r\nlet tempSVGContainer;\r\nconst nodeOps = {\r\n    insert: (child, parent, anchor) => {\r\n        if (anchor != null) {\r\n            parent.insertBefore(child, anchor);\r\n        }\r\n        else {\r\n            parent.appendChild(child);\r\n        }\r\n    },\r\n    remove: child => {\r\n        const parent = child.parentNode;\r\n        if (parent != null) {\r\n            parent.removeChild(child);\r\n        }\r\n    },\r\n    createElement: (tag, isSVG) => isSVG ? doc.createElementNS(svgNS, tag) : doc.createElement(tag),\r\n    createText: text => doc.createTextNode(text),\r\n    createComment: text => doc.createComment(text),\r\n    setText: (node, text) => {\r\n        node.nodeValue = text;\r\n    },\r\n    setElementText: (el, text) => {\r\n        el.textContent = text;\r\n    },\r\n    parentNode: node => node.parentNode,\r\n    nextSibling: node => node.nextSibling,\r\n    querySelector: selector => doc.querySelector(selector),\r\n    setScopeId(el, id) {\r\n        el.setAttribute(id, '');\r\n    },\r\n    cloneNode(el) {\r\n        return el.cloneNode(true);\r\n    },\r\n    // __UNSAFE__\r\n    // Reason: innerHTML.\r\n    // Static content here can only come from compiled templates.\r\n    // As long as the user only uses trusted templates, this is safe.\r\n    insertStaticContent(content, parent, anchor, isSVG) {\r\n        const temp = isSVG\r\n            ? tempSVGContainer ||\r\n                (tempSVGContainer = doc.createElementNS(svgNS, 'svg'))\r\n            : tempContainer || (tempContainer = doc.createElement('div'));\r\n        temp.innerHTML = content;\r\n        const node = temp.children[0];\r\n        nodeOps.insert(node, parent, anchor);\r\n        return node;\r\n    }\r\n};\n\n// compiler should normalize class + :class bindings on the same element\r\n// into a single binding ['staticClass', dynamic]\r\nfunction patchClass(el, value, isSVG) {\r\n    if (value == null) {\r\n        value = '';\r\n    }\r\n    // directly setting className should be faster than setAttribute in theory\r\n    if (isSVG) {\r\n        el.setAttribute('class', value);\r\n    }\r\n    else {\r\n        // if this is an element during a transition, take the temporary transition\r\n        // classes into account.\r\n        const transitionClasses = el._vtc;\r\n        if (transitionClasses) {\r\n            value = [value, ...transitionClasses].join(' ');\r\n        }\r\n        el.className = value;\r\n    }\r\n}\n\n// Make a map and return a function for checking if a key\r\n// is in that map.\r\n//\r\n// IMPORTANT: all calls of this function must be prefixed with /*#__PURE__*/\r\n// So that rollup can tree-shake them if necessary.\r\nfunction makeMap(str, expectsLowerCase) {\r\n    const map = Object.create(null);\r\n    const list = str.split(',');\r\n    for (let i = 0; i < list.length; i++) {\r\n        map[list[i]] = true;\r\n    }\r\n    return expectsLowerCase ? val => !!map[val.toLowerCase()] : val => !!map[val];\r\n}\n\n// On the client we only need to offer special cases for boolean attributes that\r\n// have different names from their corresponding dom properties:\r\n// - itemscope -> N/A\r\n// - allowfullscreen -> allowFullscreen\r\n// - formnovalidate -> formNoValidate\r\n// - ismap -> isMap\r\n// - nomodule -> noModule\r\n// - novalidate -> noValidate\r\n// - readonly -> readOnly\r\nconst specialBooleanAttrs = `itemscope,allowfullscreen,formnovalidate,ismap,nomodule,novalidate,readonly`;\r\nconst isSpecialBooleanAttr = /*#__PURE__*/ makeMap(specialBooleanAttrs);\n\n// These tag configs are shared between compiler-dom and runtime-dom, so they\r\n// https://developer.mozilla.org/en-US/docs/Web/HTML/Element\r\nconst HTML_TAGS = 'html,body,base,head,link,meta,style,title,address,article,aside,footer,' +\r\n    'header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,div,dd,dl,dt,figcaption,' +\r\n    'figure,picture,hr,img,li,main,ol,p,pre,ul,a,b,abbr,bdi,bdo,br,cite,code,' +\r\n    'data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,s,samp,small,span,strong,sub,sup,' +\r\n    'time,u,var,wbr,area,audio,map,track,video,embed,object,param,source,' +\r\n    'canvas,script,noscript,del,ins,caption,col,colgroup,table,thead,tbody,td,' +\r\n    'th,tr,button,datalist,fieldset,form,input,label,legend,meter,optgroup,' +\r\n    'option,output,progress,select,textarea,details,dialog,menu,menuitem,' +\r\n    'summary,content,element,shadow,template,blockquote,iframe,tfoot';\r\n// https://developer.mozilla.org/en-US/docs/Web/SVG/Element\r\nconst SVG_TAGS = 'svg,animate,animateMotion,animateTransform,circle,clipPath,color-profile,' +\r\n    'defs,desc,discard,ellipse,feBlend,feColorMatrix,feComponentTransfer,' +\r\n    'feComposite,feConvolveMatrix,feDiffuseLighting,feDisplacementMap,' +\r\n    'feDistanceLight,feDropShadow,feFlood,feFuncA,feFuncB,feFuncG,feFuncR,' +\r\n    'feGaussianBlur,feImage,feMerge,feMergeNode,feMorphology,feOffset,' +\r\n    'fePointLight,feSpecularLighting,feSpotLight,feTile,feTurbulence,filter,' +\r\n    'foreignObject,g,hatch,hatchpath,image,line,lineGradient,marker,mask,' +\r\n    'mesh,meshgradient,meshpatch,meshrow,metadata,mpath,path,pattern,' +\r\n    'polygon,polyline,radialGradient,rect,set,solidcolor,stop,switch,symbol,' +\r\n    'text,textPath,title,tspan,unknown,use,view';\r\nconst isHTMLTag = /*#__PURE__*/ makeMap(HTML_TAGS);\r\nconst isSVGTag = /*#__PURE__*/ makeMap(SVG_TAGS);\n\nfunction looseEqual(a, b) {\r\n    if (a === b)\r\n        return true;\r\n    const isObjectA = isObject(a);\r\n    const isObjectB = isObject(b);\r\n    if (isObjectA && isObjectB) {\r\n        try {\r\n            const isArrayA = isArray(a);\r\n            const isArrayB = isArray(b);\r\n            if (isArrayA && isArrayB) {\r\n                return (a.length === b.length &&\r\n                    a.every((e, i) => looseEqual(e, b[i])));\r\n            }\r\n            else if (a instanceof Date && b instanceof Date) {\r\n                return a.getTime() === b.getTime();\r\n            }\r\n            else if (!isArrayA && !isArrayB) {\r\n                const keysA = Object.keys(a);\r\n                const keysB = Object.keys(b);\r\n                return (keysA.length === keysB.length &&\r\n                    keysA.every(key => looseEqual(a[key], b[key])));\r\n            }\r\n            else {\r\n                /* istanbul ignore next */\r\n                return false;\r\n            }\r\n        }\r\n        catch (e) {\r\n            /* istanbul ignore next */\r\n            return false;\r\n        }\r\n    }\r\n    else if (!isObjectA && !isObjectB) {\r\n        return String(a) === String(b);\r\n    }\r\n    else {\r\n        return false;\r\n    }\r\n}\r\nfunction looseIndexOf(arr, val) {\r\n    return arr.findIndex(item => looseEqual(item, val));\r\n}\n\nconst EMPTY_OBJ = (process.env.NODE_ENV !== 'production')\r\n    ? Object.freeze({})\r\n    : {};\r\nconst isOn = (key) => key[0] === 'o' && key[1] === 'n';\r\nconst isArray = Array.isArray;\r\nconst isString = (val) => typeof val === 'string';\r\nconst isObject = (val) => val !== null && typeof val === 'object';\r\nconst cacheStringFunction = (fn) => {\r\n    const cache = Object.create(null);\r\n    return ((str) => {\r\n        const hit = cache[str];\r\n        return hit || (cache[str] = fn(str));\r\n    });\r\n};\r\nconst hyphenateRE = /\\B([A-Z])/g;\r\nconst hyphenate = cacheStringFunction((str) => {\r\n    return str.replace(hyphenateRE, '-$1').toLowerCase();\r\n});\r\nconst capitalize = cacheStringFunction((str) => {\r\n    return str.charAt(0).toUpperCase() + str.slice(1);\r\n});\n\nfunction patchStyle(el, prev, next) {\r\n    const style = el.style;\r\n    if (!next) {\r\n        el.removeAttribute('style');\r\n    }\r\n    else if (isString(next)) {\r\n        style.cssText = next;\r\n    }\r\n    else {\r\n        for (const key in next) {\r\n            setStyle(style, key, next[key]);\r\n        }\r\n        if (prev && !isString(prev)) {\r\n            for (const key in prev) {\r\n                if (!next[key]) {\r\n                    setStyle(style, key, '');\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\nconst importantRE = /\\s*!important$/;\r\nfunction setStyle(style, name, val) {\r\n    if (name.startsWith('--')) {\r\n        // custom property definition\r\n        style.setProperty(name, val);\r\n    }\r\n    else {\r\n        const prefixed = autoPrefix(style, name);\r\n        if (importantRE.test(val)) {\r\n            // !important\r\n            style.setProperty(hyphenate(prefixed), val.replace(importantRE, ''), 'important');\r\n        }\r\n        else {\r\n            style[prefixed] = val;\r\n        }\r\n    }\r\n}\r\nconst prefixes = ['Webkit', 'Moz', 'ms'];\r\nconst prefixCache = {};\r\nfunction autoPrefix(style, rawName) {\r\n    const cached = prefixCache[rawName];\r\n    if (cached) {\r\n        return cached;\r\n    }\r\n    let name = camelize(rawName);\r\n    if (name !== 'filter' && name in style) {\r\n        return (prefixCache[rawName] = name);\r\n    }\r\n    name = capitalize(name);\r\n    for (let i = 0; i < prefixes.length; i++) {\r\n        const prefixed = prefixes[i] + name;\r\n        if (prefixed in style) {\r\n            return (prefixCache[rawName] = prefixed);\r\n        }\r\n    }\r\n    return rawName;\r\n}\n\nconst xlinkNS = 'http://www.w3.org/1999/xlink';\r\nfunction patchAttr(el, key, value, isSVG) {\r\n    if (isSVG && key.indexOf('xlink:') === 0) {\r\n        if (value == null) {\r\n            el.removeAttributeNS(xlinkNS, key);\r\n        }\r\n        else {\r\n            el.setAttributeNS(xlinkNS, key, value);\r\n        }\r\n    }\r\n    else {\r\n        // note we are only checking boolean attributes that don't have a\r\n        // correspoding dom prop of the same name here.\r\n        const isBoolean = isSpecialBooleanAttr(key);\r\n        if (value == null || (isBoolean && value === false)) {\r\n            el.removeAttribute(key);\r\n        }\r\n        else {\r\n            el.setAttribute(key, isBoolean ? '' : value);\r\n        }\r\n    }\r\n}\n\n// __UNSAFE__\r\n// Reason: potentially setting innerHTML.\r\n// This can come from explicit usage of v-html or innerHTML as a prop in render\r\n// functions. The user is reponsible for using them with only trusted content.\r\nfunction patchDOMProp(el, key, value, \r\n// the following args are passed only due to potential innerHTML/textContent\r\n// overriding existing VNodes, in which case the old tree must be properly\r\n// unmounted.\r\nprevChildren, parentComponent, parentSuspense, unmountChildren) {\r\n    if ((key === 'innerHTML' || key === 'textContent') && prevChildren != null) {\r\n        unmountChildren(prevChildren, parentComponent, parentSuspense);\r\n        el[key] = value == null ? '' : value;\r\n        return;\r\n    }\r\n    if (key === 'value' && el.tagName !== 'PROGRESS') {\r\n        // store value as _value as well since\r\n        // non-string values will be stringified.\r\n        el._value = value;\r\n        el.value = value == null ? '' : value;\r\n        return;\r\n    }\r\n    if (value === '' && typeof el[key] === 'boolean') {\r\n        // e.g. <select multiple> compiles to { multiple: '' }\r\n        el[key] = true;\r\n    }\r\n    else {\r\n        el[key] = value == null ? '' : value;\r\n    }\r\n}\n\n// Async edge case fix requires storing an event listener's attach timestamp.\r\nlet _getNow = Date.now;\r\n// Determine what event timestamp the browser is using. Annoyingly, the\r\n// timestamp can either be hi-res ( relative to page load) or low-res\r\n// (relative to UNIX epoch), so in order to compare time we have to use the\r\n// same timestamp type when saving the flush timestamp.\r\nif (typeof document !== 'undefined' &&\r\n    _getNow() > document.createEvent('Event').timeStamp) {\r\n    // if the low-res timestamp which is bigger than the event timestamp\r\n    // (which is evaluated AFTER) it means the event is using a hi-res timestamp,\r\n    // and we need to use the hi-res version for event listeners as well.\r\n    _getNow = () => performance.now();\r\n}\r\n// To avoid the overhead of repeatedly calling performance.now(), we cache\r\n// and use the same timestamp for all event listeners attached in the same tick.\r\nlet cachedNow = 0;\r\nconst p = Promise.resolve();\r\nconst reset = () => {\r\n    cachedNow = 0;\r\n};\r\nconst getNow = () => cachedNow || (p.then(reset), (cachedNow = _getNow()));\r\nfunction addEventListener(el, event, handler, options) {\r\n    el.addEventListener(event, handler, options);\r\n}\r\nfunction removeEventListener(el, event, handler, options) {\r\n    el.removeEventListener(event, handler, options);\r\n}\r\nfunction patchEvent(el, name, prevValue, nextValue, instance = null) {\r\n    const prevOptions = prevValue && 'options' in prevValue && prevValue.options;\r\n    const nextOptions = nextValue && 'options' in nextValue && nextValue.options;\r\n    const invoker = prevValue && prevValue.invoker;\r\n    const value = nextValue && 'handler' in nextValue ? nextValue.handler : nextValue;\r\n    if (prevOptions || nextOptions) {\r\n        const prev = prevOptions || EMPTY_OBJ;\r\n        const next = nextOptions || EMPTY_OBJ;\r\n        if (prev.capture !== next.capture ||\r\n            prev.passive !== next.passive ||\r\n            prev.once !== next.once) {\r\n            if (invoker) {\r\n                removeEventListener(el, name, invoker, prev);\r\n            }\r\n            if (nextValue && value) {\r\n                const invoker = createInvoker(value, instance);\r\n                nextValue.invoker = invoker;\r\n                addEventListener(el, name, invoker, next);\r\n            }\r\n            return;\r\n        }\r\n    }\r\n    if (nextValue && value) {\r\n        if (invoker) {\r\n            prevValue.invoker = null;\r\n            invoker.value = value;\r\n            nextValue.invoker = invoker;\r\n            invoker.lastUpdated = getNow();\r\n        }\r\n        else {\r\n            addEventListener(el, name, createInvoker(value, instance), nextOptions || void 0);\r\n        }\r\n    }\r\n    else if (invoker) {\r\n        removeEventListener(el, name, invoker, prevOptions || void 0);\r\n    }\r\n}\r\nfunction createInvoker(initialValue, instance) {\r\n    const invoker = (e) => {\r\n        // async edge case #6566: inner click event triggers patch, event handler\r\n        // attached to outer element during patch, and triggered again. This\r\n        // happens because browsers fire microtask ticks between event propagation.\r\n        // the solution is simple: we save the timestamp when a handler is attached,\r\n        // and the handler would only fire if the event passed to it was fired\r\n        // AFTER it was attached.\r\n        if (e.timeStamp >= invoker.lastUpdated - 1) {\r\n            callWithAsyncErrorHandling(invoker.value, instance, 5 /* NATIVE_EVENT_HANDLER */, [e]);\r\n        }\r\n    };\r\n    invoker.value = initialValue;\r\n    initialValue.invoker = invoker;\r\n    invoker.lastUpdated = getNow();\r\n    return invoker;\r\n}\n\nconst patchProp = (el, key, nextValue, prevValue, isSVG = false, prevChildren, parentComponent, parentSuspense, unmountChildren) => {\r\n    switch (key) {\r\n        // special\r\n        case 'class':\r\n            patchClass(el, nextValue, isSVG);\r\n            break;\r\n        case 'style':\r\n            patchStyle(el, prevValue, nextValue);\r\n            break;\r\n        case 'modelValue':\r\n        case 'onUpdate:modelValue':\r\n            // Do nothing. This is handled by v-model directives.\r\n            break;\r\n        default:\r\n            if (isOn(key)) {\r\n                patchEvent(el, key.slice(2).toLowerCase(), prevValue, nextValue, parentComponent);\r\n            }\r\n            else if (!isSVG && key in el) {\r\n                patchDOMProp(el, key, nextValue, prevChildren, parentComponent, parentSuspense, unmountChildren);\r\n            }\r\n            else {\r\n                // special case for <input v-model type=\"checkbox\"> with\r\n                // :true-value & :false-value\r\n                // store value as dom properties since non-string values will be\r\n                // stringified.\r\n                if (key === 'true-value') {\r\n                    el._trueValue = nextValue;\r\n                }\r\n                else if (key === 'false-value') {\r\n                    el._falseValue = nextValue;\r\n                }\r\n                patchAttr(el, key, nextValue, isSVG);\r\n            }\r\n            break;\r\n    }\r\n};\n\nconst getModelAssigner = (vnode) => vnode.props['onUpdate:modelValue'];\r\nfunction onCompositionStart(e) {\r\n    e.target.composing = true;\r\n}\r\nfunction onCompositionEnd(e) {\r\n    const target = e.target;\r\n    if (target.composing) {\r\n        target.composing = false;\r\n        trigger(target, 'input');\r\n    }\r\n}\r\nfunction trigger(el, type) {\r\n    const e = document.createEvent('HTMLEvents');\r\n    e.initEvent(type, true, true);\r\n    el.dispatchEvent(e);\r\n}\r\nfunction toNumber(val) {\r\n    const n = parseFloat(val);\r\n    return isNaN(n) ? val : n;\r\n}\r\n// We are exporting the v-model runtime directly as vnode hooks so that it can\r\n// be tree-shaken in case v-model is never used.\r\nconst vModelText = {\r\n    beforeMount(el, { value, modifiers: { lazy, trim, number } }, vnode) {\r\n        el.value = value;\r\n        const assign = getModelAssigner(vnode);\r\n        const castToNumber = number || el.type === 'number';\r\n        addEventListener(el, lazy ? 'change' : 'input', () => {\r\n            let domValue = el.value;\r\n            if (trim) {\r\n                domValue = domValue.trim();\r\n            }\r\n            else if (castToNumber) {\r\n                domValue = toNumber(domValue);\r\n            }\r\n            assign(domValue);\r\n        });\r\n        if (trim) {\r\n            addEventListener(el, 'change', () => {\r\n                el.value = el.value.trim();\r\n            });\r\n        }\r\n        if (!lazy) {\r\n            addEventListener(el, 'compositionstart', onCompositionStart);\r\n            addEventListener(el, 'compositionend', onCompositionEnd);\r\n            // Safari < 10.2 & UIWebView doesn't fire compositionend when\r\n            // switching focus before confirming composition choice\r\n            // this also fixes the issue where some browsers e.g. iOS Chrome\r\n            // fires \"change\" instead of \"input\" on autocomplete.\r\n            addEventListener(el, 'change', onCompositionEnd);\r\n        }\r\n    },\r\n    beforeUpdate(el, { value, oldValue, modifiers: { trim, number } }) {\r\n        if (value === oldValue) {\r\n            return;\r\n        }\r\n        if (document.activeElement === el) {\r\n            if (trim && el.value.trim() === value) {\r\n                return;\r\n            }\r\n            if ((number || el.type === 'number') && toNumber(el.value) === value) {\r\n                return;\r\n            }\r\n        }\r\n        el.value = value;\r\n    }\r\n};\r\nconst vModelCheckbox = {\r\n    beforeMount(el, binding, vnode) {\r\n        setChecked(el, binding, vnode);\r\n        const assign = getModelAssigner(vnode);\r\n        addEventListener(el, 'change', () => {\r\n            const modelValue = el._modelValue;\r\n            const elementValue = getValue(el);\r\n            const checked = el.checked;\r\n            if (isArray(modelValue)) {\r\n                const index = looseIndexOf(modelValue, elementValue);\r\n                const found = index !== -1;\r\n                if (checked && !found) {\r\n                    assign(modelValue.concat(elementValue));\r\n                }\r\n                else if (!checked && found) {\r\n                    const filtered = [...modelValue];\r\n                    filtered.splice(index, 1);\r\n                    assign(filtered);\r\n                }\r\n            }\r\n            else {\r\n                assign(getCheckboxValue(el, checked));\r\n            }\r\n        });\r\n    },\r\n    beforeUpdate: setChecked\r\n};\r\nfunction setChecked(el, { value, oldValue }, vnode) {\r\n    el._modelValue = value;\r\n    if (isArray(value)) {\r\n        el.checked = looseIndexOf(value, vnode.props.value) > -1;\r\n    }\r\n    else if (value !== oldValue) {\r\n        el.checked = looseEqual(value, getCheckboxValue(el, true));\r\n    }\r\n}\r\nconst vModelRadio = {\r\n    beforeMount(el, { value }, vnode) {\r\n        el.checked = looseEqual(value, vnode.props.value);\r\n        const assign = getModelAssigner(vnode);\r\n        addEventListener(el, 'change', () => {\r\n            assign(getValue(el));\r\n        });\r\n    },\r\n    beforeUpdate(el, { value, oldValue }, vnode) {\r\n        if (value !== oldValue) {\r\n            el.checked = looseEqual(value, vnode.props.value);\r\n        }\r\n    }\r\n};\r\nconst vModelSelect = {\r\n    // use mounted & updated because <select> relies on its children <option>s.\r\n    mounted(el, { value }, vnode) {\r\n        setSelected(el, value);\r\n        const assign = getModelAssigner(vnode);\r\n        addEventListener(el, 'change', () => {\r\n            const selectedVal = Array.prototype.filter\r\n                .call(el.options, (o) => o.selected)\r\n                .map(getValue);\r\n            assign(el.multiple ? selectedVal : selectedVal[0]);\r\n        });\r\n    },\r\n    updated(el, { value }) {\r\n        setSelected(el, value);\r\n    }\r\n};\r\nfunction setSelected(el, value) {\r\n    const isMultiple = el.multiple;\r\n    if (isMultiple && !isArray(value)) {\r\n        (process.env.NODE_ENV !== 'production') &&\r\n            warn(`<select multiple v-model> expects an Array value for its binding, ` +\r\n                `but got ${Object.prototype.toString.call(value).slice(8, -1)}.`);\r\n        return;\r\n    }\r\n    for (let i = 0, l = el.options.length; i < l; i++) {\r\n        const option = el.options[i];\r\n        const optionValue = getValue(option);\r\n        if (isMultiple) {\r\n            option.selected = looseIndexOf(value, optionValue) > -1;\r\n        }\r\n        else {\r\n            if (looseEqual(getValue(option), value)) {\r\n                el.selectedIndex = i;\r\n                return;\r\n            }\r\n        }\r\n    }\r\n    if (!isMultiple) {\r\n        el.selectedIndex = -1;\r\n    }\r\n}\r\n// retrieve raw value set via :value bindings\r\nfunction getValue(el) {\r\n    return '_value' in el ? el._value : el.value;\r\n}\r\n// retrieve raw value for true-value and false-value set via :true-value or :false-value bindings\r\nfunction getCheckboxValue(el, checked) {\r\n    const key = checked ? '_trueValue' : '_falseValue';\r\n    return key in el ? el[key] : checked;\r\n}\r\nconst vModelDynamic = {\r\n    beforeMount(el, binding, vnode) {\r\n        callModelHook(el, binding, vnode, null, 'beforeMount');\r\n    },\r\n    mounted(el, binding, vnode) {\r\n        callModelHook(el, binding, vnode, null, 'mounted');\r\n    },\r\n    beforeUpdate(el, binding, vnode, prevVNode) {\r\n        callModelHook(el, binding, vnode, prevVNode, 'beforeUpdate');\r\n    },\r\n    updated(el, binding, vnode, prevVNode) {\r\n        callModelHook(el, binding, vnode, prevVNode, 'updated');\r\n    }\r\n};\r\nfunction callModelHook(el, binding, vnode, prevVNode, hook) {\r\n    let modelToUse;\r\n    switch (el.tagName) {\r\n        case 'SELECT':\r\n            modelToUse = vModelSelect;\r\n            break;\r\n        case 'TEXTAREA':\r\n            modelToUse = vModelText;\r\n            break;\r\n        default:\r\n            switch (el.type) {\r\n                case 'checkbox':\r\n                    modelToUse = vModelCheckbox;\r\n                    break;\r\n                case 'radio':\r\n                    modelToUse = vModelRadio;\r\n                    break;\r\n                default:\r\n                    modelToUse = vModelText;\r\n            }\r\n    }\r\n    const fn = modelToUse[hook];\r\n    fn && fn(el, binding, vnode, prevVNode);\r\n}\n\nconst systemModifiers = ['ctrl', 'shift', 'alt', 'meta'];\r\nconst modifierGuards = {\r\n    stop: e => e.stopPropagation(),\r\n    prevent: e => e.preventDefault(),\r\n    self: e => e.target !== e.currentTarget,\r\n    ctrl: e => !e.ctrlKey,\r\n    shift: e => !e.shiftKey,\r\n    alt: e => !e.altKey,\r\n    meta: e => !e.metaKey,\r\n    left: e => 'button' in e && e.button !== 0,\r\n    middle: e => 'button' in e && e.button !== 1,\r\n    right: e => 'button' in e && e.button !== 2,\r\n    exact: (e, modifiers) => systemModifiers.some(m => e[`${m}Key`] && !modifiers.includes(m))\r\n};\r\nconst withModifiers = (fn, modifiers) => {\r\n    return (event) => {\r\n        for (let i = 0; i < modifiers.length; i++) {\r\n            const guard = modifierGuards[modifiers[i]];\r\n            if (guard && guard(event, modifiers))\r\n                return;\r\n        }\r\n        return fn(event);\r\n    };\r\n};\r\n// Kept for 2.x compat.\r\n// Note: IE11 compat for `spacebar` and `del` is removed for now.\r\nconst keyNames = {\r\n    esc: 'escape',\r\n    space: ' ',\r\n    up: 'arrow-up',\r\n    left: 'arrow-left',\r\n    right: 'arrow-right',\r\n    down: 'arrow-down',\r\n    delete: 'backspace'\r\n};\r\nconst withKeys = (fn, modifiers) => {\r\n    return (event) => {\r\n        if (!('key' in event))\r\n            return;\r\n        const eventKey = hyphenate(event.key);\r\n        if (\r\n        // None of the provided key modifiers match the current event key\r\n        !modifiers.some(k => k === eventKey || keyNames[k] === eventKey)) {\r\n            return;\r\n        }\r\n        return fn(event);\r\n    };\r\n};\n\nconst vShow = {\r\n    beforeMount(el, { value }, { transition }) {\r\n        el._vod = el.style.display === 'none' ? '' : el.style.display;\r\n        if (transition && value) {\r\n            transition.beforeEnter(el);\r\n        }\r\n        else {\r\n            setDisplay(el, value);\r\n        }\r\n    },\r\n    mounted(el, { value }, { transition }) {\r\n        if (transition && value) {\r\n            transition.enter(el);\r\n        }\r\n    },\r\n    updated(el, { value, oldValue }, { transition }) {\r\n        if (!value === !oldValue)\r\n            return;\r\n        if (transition) {\r\n            if (value) {\r\n                transition.beforeEnter(el);\r\n                setDisplay(el, true);\r\n                transition.enter(el);\r\n            }\r\n            else {\r\n                transition.leave(el, () => {\r\n                    setDisplay(el, false);\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            setDisplay(el, value);\r\n        }\r\n    },\r\n    beforeUnmount(el) {\r\n        setDisplay(el, true);\r\n    }\r\n};\r\nfunction setDisplay(el, value) {\r\n    el.style.display = value ? el._vod : 'none';\r\n}\n\nconst TRANSITION = 'transition';\r\nconst ANIMATION = 'animation';\r\n// DOM Transition is a higher-order-component based on the platform-agnostic\r\n// base Transition component, with DOM-specific logic.\r\nconst Transition = (props, { slots }) => h(BaseTransition, resolveTransitionProps(props), slots);\r\nconst TransitionPropsValidators = {\r\n    ...BaseTransition.props,\r\n    name: String,\r\n    type: String,\r\n    css: {\r\n        type: Boolean,\r\n        default: true\r\n    },\r\n    duration: Object,\r\n    enterFromClass: String,\r\n    enterActiveClass: String,\r\n    enterToClass: String,\r\n    appearFromClass: String,\r\n    appearActiveClass: String,\r\n    appearToClass: String,\r\n    leaveFromClass: String,\r\n    leaveActiveClass: String,\r\n    leaveToClass: String\r\n};\r\nif ((process.env.NODE_ENV !== 'production')) {\r\n    Transition.props = TransitionPropsValidators;\r\n}\r\nfunction resolveTransitionProps({ name = 'v', type, css = true, duration, enterFromClass = `${name}-enter-from`, enterActiveClass = `${name}-enter-active`, enterToClass = `${name}-enter-to`, appearFromClass = enterFromClass, appearActiveClass = enterActiveClass, appearToClass = enterToClass, leaveFromClass = `${name}-leave-from`, leaveActiveClass = `${name}-leave-active`, leaveToClass = `${name}-leave-to`, ...baseProps }) {\r\n    if (!css) {\r\n        return baseProps;\r\n    }\r\n    const instance = getCurrentInstance();\r\n    const durations = normalizeDuration(duration);\r\n    const enterDuration = durations && durations[0];\r\n    const leaveDuration = durations && durations[1];\r\n    const { appear, onBeforeEnter, onEnter, onLeave } = baseProps;\r\n    // is appearing\r\n    if (appear && !getCurrentInstance().isMounted) {\r\n        enterFromClass = appearFromClass;\r\n        enterActiveClass = appearActiveClass;\r\n        enterToClass = appearToClass;\r\n    }\r\n    const finishEnter = (el, done) => {\r\n        removeTransitionClass(el, enterToClass);\r\n        removeTransitionClass(el, enterActiveClass);\r\n        done && done();\r\n    };\r\n    const finishLeave = (el, done) => {\r\n        removeTransitionClass(el, leaveToClass);\r\n        removeTransitionClass(el, leaveActiveClass);\r\n        done && done();\r\n    };\r\n    // only needed for user hooks called in nextFrame\r\n    // sync errors are already handled by BaseTransition\r\n    function callHookWithErrorHandling(hook, args) {\r\n        callWithAsyncErrorHandling(hook, instance, 8 /* TRANSITION_HOOK */, args);\r\n    }\r\n    return {\r\n        ...baseProps,\r\n        onBeforeEnter(el) {\r\n            onBeforeEnter && onBeforeEnter(el);\r\n            addTransitionClass(el, enterActiveClass);\r\n            addTransitionClass(el, enterFromClass);\r\n        },\r\n        onEnter(el, done) {\r\n            nextFrame(() => {\r\n                const resolve = () => finishEnter(el, done);\r\n                onEnter && callHookWithErrorHandling(onEnter, [el, resolve]);\r\n                removeTransitionClass(el, enterFromClass);\r\n                addTransitionClass(el, enterToClass);\r\n                if (!(onEnter && onEnter.length > 1)) {\r\n                    if (enterDuration) {\r\n                        setTimeout(resolve, enterDuration);\r\n                    }\r\n                    else {\r\n                        whenTransitionEnds(el, type, resolve);\r\n                    }\r\n                }\r\n            });\r\n        },\r\n        onLeave(el, done) {\r\n            addTransitionClass(el, leaveActiveClass);\r\n            addTransitionClass(el, leaveFromClass);\r\n            nextFrame(() => {\r\n                const resolve = () => finishLeave(el, done);\r\n                onLeave && callHookWithErrorHandling(onLeave, [el, resolve]);\r\n                removeTransitionClass(el, leaveFromClass);\r\n                addTransitionClass(el, leaveToClass);\r\n                if (!(onLeave && onLeave.length > 1)) {\r\n                    if (leaveDuration) {\r\n                        setTimeout(resolve, leaveDuration);\r\n                    }\r\n                    else {\r\n                        whenTransitionEnds(el, type, resolve);\r\n                    }\r\n                }\r\n            });\r\n        },\r\n        onEnterCancelled: finishEnter,\r\n        onLeaveCancelled: finishLeave\r\n    };\r\n}\r\nfunction normalizeDuration(duration) {\r\n    if (duration == null) {\r\n        return null;\r\n    }\r\n    else if (isObject(duration)) {\r\n        return [toNumber$1(duration.enter), toNumber$1(duration.leave)];\r\n    }\r\n    else {\r\n        const n = toNumber$1(duration);\r\n        return [n, n];\r\n    }\r\n}\r\nfunction toNumber$1(val) {\r\n    const res = Number(val || 0);\r\n    if ((process.env.NODE_ENV !== 'production'))\r\n        validateDuration(res);\r\n    return res;\r\n}\r\nfunction validateDuration(val) {\r\n    if (typeof val !== 'number') {\r\n        warn(`<transition> explicit duration is not a valid number - ` +\r\n            `got ${JSON.stringify(val)}.`);\r\n    }\r\n    else if (isNaN(val)) {\r\n        warn(`<transition> explicit duration is NaN - ` +\r\n            'the duration expression might be incorrect.');\r\n    }\r\n}\r\nfunction addTransitionClass(el, cls) {\r\n    cls.split(/\\s+/).forEach(c => c && el.classList.add(c));\r\n    (el._vtc || (el._vtc = new Set())).add(cls);\r\n}\r\nfunction removeTransitionClass(el, cls) {\r\n    cls.split(/\\s+/).forEach(c => c && el.classList.remove(c));\r\n    if (el._vtc) {\r\n        el._vtc.delete(cls);\r\n        if (!el._vtc.size) {\r\n            el._vtc = undefined;\r\n        }\r\n    }\r\n}\r\nfunction nextFrame(cb) {\r\n    requestAnimationFrame(() => {\r\n        requestAnimationFrame(cb);\r\n    });\r\n}\r\nfunction whenTransitionEnds(el, expectedType, cb) {\r\n    const { type, timeout, propCount } = getTransitionInfo(el, expectedType);\r\n    if (!type) {\r\n        return cb();\r\n    }\r\n    const endEvent = type + 'end';\r\n    let ended = 0;\r\n    const end = () => {\r\n        el.removeEventListener(endEvent, onEnd);\r\n        cb();\r\n    };\r\n    const onEnd = (e) => {\r\n        if (e.target === el) {\r\n            if (++ended >= propCount) {\r\n                end();\r\n            }\r\n        }\r\n    };\r\n    setTimeout(() => {\r\n        if (ended < propCount) {\r\n            end();\r\n        }\r\n    }, timeout + 1);\r\n    el.addEventListener(endEvent, onEnd);\r\n}\r\nfunction getTransitionInfo(el, expectedType) {\r\n    const styles = window.getComputedStyle(el);\r\n    // JSDOM may return undefined for transition properties\r\n    const getStyleProperties = (key) => (styles[key] || '').split(', ');\r\n    const transitionDelays = getStyleProperties(TRANSITION + 'Delay');\r\n    const transitionDurations = getStyleProperties(TRANSITION + 'Duration');\r\n    const transitionTimeout = getTimeout(transitionDelays, transitionDurations);\r\n    const animationDelays = getStyleProperties(ANIMATION + 'Delay');\r\n    const animationDurations = getStyleProperties(ANIMATION + 'Duration');\r\n    const animationTimeout = getTimeout(animationDelays, animationDurations);\r\n    let type = null;\r\n    let timeout = 0;\r\n    let propCount = 0;\r\n    /* istanbul ignore if */\r\n    if (expectedType === TRANSITION) {\r\n        if (transitionTimeout > 0) {\r\n            type = TRANSITION;\r\n            timeout = transitionTimeout;\r\n            propCount = transitionDurations.length;\r\n        }\r\n    }\r\n    else if (expectedType === ANIMATION) {\r\n        if (animationTimeout > 0) {\r\n            type = ANIMATION;\r\n            timeout = animationTimeout;\r\n            propCount = animationDurations.length;\r\n        }\r\n    }\r\n    else {\r\n        timeout = Math.max(transitionTimeout, animationTimeout);\r\n        type =\r\n            timeout > 0\r\n                ? transitionTimeout > animationTimeout\r\n                    ? TRANSITION\r\n                    : ANIMATION\r\n                : null;\r\n        propCount = type\r\n            ? type === TRANSITION\r\n                ? transitionDurations.length\r\n                : animationDurations.length\r\n            : 0;\r\n    }\r\n    const hasTransform = type === TRANSITION &&\r\n        /\\b(transform|all)(,|$)/.test(styles[TRANSITION + 'Property']);\r\n    return {\r\n        type,\r\n        timeout,\r\n        propCount,\r\n        hasTransform\r\n    };\r\n}\r\nfunction getTimeout(delays, durations) {\r\n    while (delays.length < durations.length) {\r\n        delays = delays.concat(delays);\r\n    }\r\n    return Math.max(...durations.map((d, i) => toMs(d) + toMs(delays[i])));\r\n}\r\n// Old versions of Chromium (below 61.0.3163.100) formats floating pointer\r\n// numbers in a locale-dependent way, using a comma instead of a dot.\r\n// If comma is not replaced with a dot, the input will be rounded down\r\n// (i.e. acting as a floor function) causing unexpected behaviors\r\nfunction toMs(s) {\r\n    return Number(s.slice(0, -1).replace(',', '.')) * 1000;\r\n}\n\nconst positionMap = new WeakMap();\r\nconst newPositionMap = new WeakMap();\r\nconst TransitionGroupImpl = {\r\n    setup(props, { slots }) {\r\n        const instance = getCurrentInstance();\r\n        const state = useTransitionState();\r\n        let prevChildren;\r\n        let children;\r\n        let hasMove = null;\r\n        onUpdated(() => {\r\n            // children is guaranteed to exist after initial render\r\n            if (!prevChildren.length) {\r\n                return;\r\n            }\r\n            const moveClass = props.moveClass || `${props.name || 'v'}-move`;\r\n            // Check if move transition is needed. This check is cached per-instance.\r\n            hasMove =\r\n                hasMove === null\r\n                    ? (hasMove = hasCSSTransform(prevChildren[0].el, instance.vnode.el, moveClass))\r\n                    : hasMove;\r\n            if (!hasMove) {\r\n                return;\r\n            }\r\n            // we divide the work into three loops to avoid mixing DOM reads and writes\r\n            // in each iteration - which helps prevent layout thrashing.\r\n            prevChildren.forEach(callPendingCbs);\r\n            prevChildren.forEach(recordPosition);\r\n            const movedChildren = prevChildren.filter(applyTranslation);\r\n            // force reflow to put everything in position\r\n            forceReflow();\r\n            movedChildren.forEach(c => {\r\n                const el = c.el;\r\n                const style = el.style;\r\n                addTransitionClass(el, moveClass);\r\n                style.transform = style.WebkitTransform = style.transitionDuration = '';\r\n                const cb = (el._moveCb = (e) => {\r\n                    if (e && e.target !== el) {\r\n                        return;\r\n                    }\r\n                    if (!e || /transform$/.test(e.propertyName)) {\r\n                        el.removeEventListener('transitionend', cb);\r\n                        el._moveCb = null;\r\n                        removeTransitionClass(el, moveClass);\r\n                    }\r\n                });\r\n                el.addEventListener('transitionend', cb);\r\n            });\r\n        });\r\n        return () => {\r\n            const rawProps = toRaw(props);\r\n            const cssTransitionProps = resolveTransitionProps(rawProps);\r\n            const tag = rawProps.tag || Fragment;\r\n            prevChildren = children;\r\n            children = slots.default ? slots.default() : [];\r\n            // handle fragment children case, e.g. v-for\r\n            if (children.length === 1 && children[0].type === Fragment) {\r\n                children = children[0].children;\r\n            }\r\n            for (let i = 0; i < children.length; i++) {\r\n                const child = children[i];\r\n                if (child.key != null) {\r\n                    setTransitionHooks(child, resolveTransitionHooks(child, cssTransitionProps, state, instance));\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn(`<TransitionGroup> children must be keyed.`);\r\n                }\r\n            }\r\n            if (prevChildren) {\r\n                for (let i = 0; i < prevChildren.length; i++) {\r\n                    const child = prevChildren[i];\r\n                    setTransitionHooks(child, resolveTransitionHooks(child, cssTransitionProps, state, instance));\r\n                    positionMap.set(child, child.el.getBoundingClientRect());\r\n                }\r\n            }\r\n            return createVNode(tag, null, children);\r\n        };\r\n    }\r\n};\r\nconst TransitionGroup = TransitionGroupImpl;\r\nif ((process.env.NODE_ENV !== 'production')) {\r\n    const props = (TransitionGroup.props = {\r\n        ...TransitionPropsValidators,\r\n        tag: String,\r\n        moveClass: String\r\n    });\r\n    delete props.mode;\r\n}\r\nfunction callPendingCbs(c) {\r\n    if (c.el._moveCb) {\r\n        c.el._moveCb();\r\n    }\r\n    if (c.el._enterCb) {\r\n        c.el._enterCb();\r\n    }\r\n}\r\nfunction recordPosition(c) {\r\n    newPositionMap.set(c, c.el.getBoundingClientRect());\r\n}\r\nfunction applyTranslation(c) {\r\n    const oldPos = positionMap.get(c);\r\n    const newPos = newPositionMap.get(c);\r\n    const dx = oldPos.left - newPos.left;\r\n    const dy = oldPos.top - newPos.top;\r\n    if (dx || dy) {\r\n        const s = c.el.style;\r\n        s.transform = s.WebkitTransform = `translate(${dx}px,${dy}px)`;\r\n        s.transitionDuration = '0s';\r\n        return c;\r\n    }\r\n}\r\n// this is put in a dedicated function to avoid the line from being treeshaken\r\nfunction forceReflow() {\r\n    return document.body.offsetHeight;\r\n}\r\nfunction hasCSSTransform(el, root, moveClass) {\r\n    // Detect whether an element with the move class applied has\r\n    // CSS transitions. Since the element may be inside an entering\r\n    // transition at this very moment, we make a clone of it and remove\r\n    // all other transition classes applied to ensure only the move class\r\n    // is applied.\r\n    const clone = el.cloneNode();\r\n    if (el._vtc) {\r\n        el._vtc.forEach(cls => {\r\n            cls.split(/\\s+/).forEach(c => c && clone.classList.remove(c));\r\n        });\r\n    }\r\n    moveClass.split(/\\s+/).forEach(c => c && clone.classList.add(c));\r\n    clone.style.display = 'none';\r\n    const container = (root.nodeType === 1\r\n        ? root\r\n        : root.parentNode);\r\n    container.appendChild(clone);\r\n    const { hasTransform } = getTransitionInfo(clone);\r\n    container.removeChild(clone);\r\n    return hasTransform;\r\n}\n\nconst rendererOptions = {\r\n    patchProp,\r\n    ...nodeOps\r\n};\r\n// lazy create the renderer - this makes core renderer logic tree-shakable\r\n// in case the user only imports reactivity utilities from Vue.\r\nlet renderer;\r\nlet enabledHydration = false;\r\nfunction ensureRenderer() {\r\n    return renderer || (renderer = createRenderer(rendererOptions));\r\n}\r\nfunction ensureHydrationRenderer() {\r\n    renderer = enabledHydration\r\n        ? renderer\r\n        : createHydrationRenderer(rendererOptions);\r\n    enabledHydration = true;\r\n    return renderer;\r\n}\r\n// use explicit type casts here to avoid import() calls in rolled-up d.ts\r\nconst render = ((...args) => {\r\n    ensureRenderer().render(...args);\r\n});\r\nconst hydrate = ((...args) => {\r\n    ensureHydrationRenderer().hydrate(...args);\r\n});\r\nconst createApp = ((...args) => {\r\n    const app = ensureRenderer().createApp(...args);\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        injectNativeTagCheck(app);\r\n    }\r\n    const { mount } = app;\r\n    app.mount = (containerOrSelector) => {\r\n        const container = normalizeContainer(containerOrSelector);\r\n        if (!container)\r\n            return;\r\n        const component = app._component;\r\n        // clear content before mounting\r\n        container.innerHTML = '';\r\n        return mount(container);\r\n    };\r\n    return app;\r\n});\r\nconst createSSRApp = ((...args) => {\r\n    const app = ensureHydrationRenderer().createApp(...args);\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        injectNativeTagCheck(app);\r\n    }\r\n    const { mount } = app;\r\n    app.mount = (containerOrSelector) => {\r\n        const container = normalizeContainer(containerOrSelector);\r\n        if (container) {\r\n            return mount(container, true);\r\n        }\r\n    };\r\n    return app;\r\n});\r\nfunction injectNativeTagCheck(app) {\r\n    // Inject `isNativeTag`\r\n    // this is used for component name validation (dev only)\r\n    Object.defineProperty(app.config, 'isNativeTag', {\r\n        value: (tag) => isHTMLTag(tag) || isSVGTag(tag),\r\n        writable: false\r\n    });\r\n}\r\nfunction normalizeContainer(container) {\r\n    if (isString(container)) {\r\n        const res = document.querySelector(container);\r\n        if ((process.env.NODE_ENV !== 'production') && !res) {\r\n            warn(`Failed to mount app: mount target selector returned null.`);\r\n        }\r\n        return res;\r\n    }\r\n    return container;\r\n}\n\nexport { Transition, TransitionGroup, createApp, createSSRApp, hydrate, render, vModelCheckbox, vModelDynamic, vModelRadio, vModelSelect, vModelText, vShow, withKeys, withModifiers };\n","<template>\n  <div is=\"app\">\n    <div class=\"msg\">{{ gameMsg }}</div>\n    <game-board\n      @nextTurn=\"nextTurn\"\n      @gameEnd=\"gameEnd\"\n    />\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, ref } from 'vue'\nimport GameBoard from '@/components/GameBoard.vue'\n\nexport default defineComponent({\n  name: 'app',\n  components: {\n    GameBoard\n  },\n  setup () {\n    const gameMsg = ref('')\n    const nextTurn = (player: string) => {\n      gameMsg.value = `${player}の番です`\n    }\n    const gameEnd = (winner: string) => {\n      gameMsg.value = winner ? `${winner}の勝ちです` : '引き分けです'\n    }\n    return {\n      gameMsg,\n      nextTurn,\n      gameEnd\n    }\n  }\n})\n</script>\n\n<style lang=\"scss\">\n#app {\n  font-family: 'Avenir', Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  color: #2c3e50;\n  .msg {\n    font-size: 2em;\n  }\n}\n</style>\n","<template>\n  <div class=\"game-board\" ref=\"nekoneko\">\n    <game-cell class=\"game-cell\"\n      v-for=\"(cell, index) in cells\" :key=\"index\"\n      :owner=\"cell.owner\"\n      @click=\"placeStone(index)\"\n    />\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, ref, computed, onMounted } from 'vue'\nimport GameCell from './GameCell.vue'\n\ntype Player = 'p1' | 'p2'\ntype Owner = Player | undefined\ninterface CellState {\n  owner: Owner\n}\ninterface GameState {\n  cells: CellState[],\n  turn: Player\n}\n\n/** Player1を示す定数（画像ファイルの名前に使用するためSymbolにはしていません） */\nconst P1: Player = 'p1'\n/** Player2を示す定数（画像ファイルの名前に使用するためSymbolにはしていません） */\nconst P2: Player = 'p2'\n/** まだ石が置かれていないセル */\nconst BLANK: Owner = undefined\n/** プレイヤー毎の置かれる石（文字） */\nconst STONES = { [P1]: '○', [P2]: '×' }\n/** 一直線に並ぶセルの組み合わせ。8個しかないので列挙 */\nconst LINES = [\n  [0, 1, 2],\n  [3, 4, 5],\n  [6, 7, 8],\n  [0, 3, 6],\n  [1, 4, 7],\n  [2, 5, 8],\n  [0, 4, 8],\n  [2, 4, 6]\n]\n\nexport default defineComponent({\n  components: { GameCell },\n  setup (props, ctx) {\n    // 1. 元 data = reactive(), ref()でラップする\n    const cells = ref<CellState[]>(Array(9).fill(0).map(_ => ({ owner: BLANK })))\n    let turn = ref<Player>(P1)\n\n    // 2. 元 computedの要素 = computed()でラップする\n    const winner = computed<Player | undefined>(() => {\n      let winnerPName: Player | undefined\n      LINES.forEach(line => {\n        const ownersInLine = line.map(index => cells.value[index].owner)\n        const isAllSame = ownersInLine[0] === ownersInLine[1] && ownersInLine[0] === ownersInLine[2]\n        if (isAllSame && ownersInLine[0] !== BLANK) {\n          winnerPName = ownersInLine[0]\n        }\n      })\n      return winnerPName\n    })\n    const isGameEnded = computed<boolean>(() => {\n      return !!(winner.value || cells.value.filter(cell => cell.owner === BLANK).length === 0)\n    })\n\n    // 3. 元 methodsの要素 = そのまま（素の関数）\n    const placeStone = (index: number) => {\n      if (isGameEnded.value) { return }\n      if (cells.value[index].owner !== BLANK) { return }\n      cells.value[index].owner = turn.value\n      if (isGameEnded.value) {\n        // どちらかの勝ち or 引き分け\n        ctx.emit('gameEnd', winner.value ? STONES[winner.value] : undefined)\n      } else {\n        // ターン交代\n        turn.value = turn.value === P1 ? P2 : P1\n        ctx.emit('nextTurn', STONES[turn.value])\n      }\n    }\n\n    // 4. 元 ライフサイクルフック = on + フック名の関数でラップ\n    onMounted(() => {\n      // 最初のターンを通知するためにイベントを発行\n      ctx.emit('nextTurn', STONES[turn.value])\n    })\n\n    // 最後にテンプレートから参照される物を全て返す\n    return {\n      cells,\n      turn,\n      winner,\n      isGameEnded,\n      placeStone\n    }\n  }\n})\n</script>\n\n<style lang=\"scss\" scoped>\n.game-board{\n  display: flex;\n  flex-wrap: wrap;\n  width: 100%;\n  .game-cell {\n    box-sizing: border-box;\n    width: 33%;\n    margin: 0 -1px -1px 0;\n    font-size: 100px;\n    text-align: bottom;\n    line-height: 100%;\n    &::before {\n      content: '';\n      padding-top: 100%;\n      display: block;\n    }\n  }\n}\n</style>\n","<template>\n  <div class=\"game-cell\"\n    :class=\"owner\"\n    @click=\"$emit('click')\"\n  >\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from 'vue'\nexport default defineComponent({\n  props: {\n    owner: { type: String }\n  }\n})\n</script>\n\n<style lang=\"scss\" scoped>\n.game-cell {\n  border: 1px solid gray;\n  &.p1 {\n    background-image: url(../assets/stone_p1.svg)\n  }\n  &.p2 {\n    background-image: url(../assets/stone_p2.svg)\n  }\n}\n</style>\n","\nimport { defineComponent } from 'vue'\nexport default defineComponent({\n  props: {\n    owner: { type: String }\n  }\n})\n","import { render } from \"./GameCell.vue?vue&type=template&id=43396ff6&scoped=true\"\nimport script from \"./GameCell.vue?vue&type=script&lang=ts\"\nexport * from \"./GameCell.vue?vue&type=script&lang=ts\"\n\nimport \"./GameCell.vue?vue&type=style&index=0&id=43396ff6&lang=scss&scoped=true\"\nscript.render = render\nscript.__scopeId = \"data-v-43396ff6\"\n\nexport default script","\nimport { defineComponent, ref, computed, onMounted } from 'vue'\nimport GameCell from './GameCell.vue'\n\ntype Player = 'p1' | 'p2'\ntype Owner = Player | undefined\ninterface CellState {\n  owner: Owner\n}\ninterface GameState {\n  cells: CellState[],\n  turn: Player\n}\n\n/** Player1を示す定数（画像ファイルの名前に使用するためSymbolにはしていません） */\nconst P1: Player = 'p1'\n/** Player2を示す定数（画像ファイルの名前に使用するためSymbolにはしていません） */\nconst P2: Player = 'p2'\n/** まだ石が置かれていないセル */\nconst BLANK: Owner = undefined\n/** プレイヤー毎の置かれる石（文字） */\nconst STONES = { [P1]: '○', [P2]: '×' }\n/** 一直線に並ぶセルの組み合わせ。8個しかないので列挙 */\nconst LINES = [\n  [0, 1, 2],\n  [3, 4, 5],\n  [6, 7, 8],\n  [0, 3, 6],\n  [1, 4, 7],\n  [2, 5, 8],\n  [0, 4, 8],\n  [2, 4, 6]\n]\n\nexport default defineComponent({\n  components: { GameCell },\n  setup (props, ctx) {\n    // 1. 元 data = reactive(), ref()でラップする\n    const cells = ref<CellState[]>(Array(9).fill(0).map(_ => ({ owner: BLANK })))\n    let turn = ref<Player>(P1)\n\n    // 2. 元 computedの要素 = computed()でラップする\n    const winner = computed<Player | undefined>(() => {\n      let winnerPName: Player | undefined\n      LINES.forEach(line => {\n        const ownersInLine = line.map(index => cells.value[index].owner)\n        const isAllSame = ownersInLine[0] === ownersInLine[1] && ownersInLine[0] === ownersInLine[2]\n        if (isAllSame && ownersInLine[0] !== BLANK) {\n          winnerPName = ownersInLine[0]\n        }\n      })\n      return winnerPName\n    })\n    const isGameEnded = computed<boolean>(() => {\n      return !!(winner.value || cells.value.filter(cell => cell.owner === BLANK).length === 0)\n    })\n\n    // 3. 元 methodsの要素 = そのまま（素の関数）\n    const placeStone = (index: number) => {\n      if (isGameEnded.value) { return }\n      if (cells.value[index].owner !== BLANK) { return }\n      cells.value[index].owner = turn.value\n      if (isGameEnded.value) {\n        // どちらかの勝ち or 引き分け\n        ctx.emit('gameEnd', winner.value ? STONES[winner.value] : undefined)\n      } else {\n        // ターン交代\n        turn.value = turn.value === P1 ? P2 : P1\n        ctx.emit('nextTurn', STONES[turn.value])\n      }\n    }\n\n    // 4. 元 ライフサイクルフック = on + フック名の関数でラップ\n    onMounted(() => {\n      // 最初のターンを通知するためにイベントを発行\n      ctx.emit('nextTurn', STONES[turn.value])\n    })\n\n    // 最後にテンプレートから参照される物を全て返す\n    return {\n      cells,\n      turn,\n      winner,\n      isGameEnded,\n      placeStone\n    }\n  }\n})\n","import { render } from \"./GameBoard.vue?vue&type=template&id=ff1b397a&scoped=true\"\nimport script from \"./GameBoard.vue?vue&type=script&lang=ts\"\nexport * from \"./GameBoard.vue?vue&type=script&lang=ts\"\n\nimport \"./GameBoard.vue?vue&type=style&index=0&id=ff1b397a&lang=scss&scoped=true\"\nscript.render = render\nscript.__scopeId = \"data-v-ff1b397a\"\n\nexport default script","\nimport { defineComponent, ref } from 'vue'\nimport GameBoard from '@/components/GameBoard.vue'\n\nexport default defineComponent({\n  name: 'app',\n  components: {\n    GameBoard\n  },\n  setup () {\n    const gameMsg = ref('')\n    const nextTurn = (player: string) => {\n      gameMsg.value = `${player}の番です`\n    }\n    const gameEnd = (winner: string) => {\n      gameMsg.value = winner ? `${winner}の勝ちです` : '引き分けです'\n    }\n    return {\n      gameMsg,\n      nextTurn,\n      gameEnd\n    }\n  }\n})\n","import { render } from \"./App.vue?vue&type=template&id=647fce8b\"\nimport script from \"./App.vue?vue&type=script&lang=ts\"\nexport * from \"./App.vue?vue&type=script&lang=ts\"\n\nimport \"./App.vue?vue&type=style&index=0&lang=scss\"\nscript.render = render\n\nexport default script","import { createApp } from 'vue'\nimport App from './App.vue'\n\ncreateApp(App).mount('#app')\n"],"sourceRoot":""}